
import { Base64 } from 'js-base64';
const bundle = '/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var __webpack_modules__={834:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(601),i=n.n(r),a=n(314),s=n.n(a)()(i());s.push([e.id,"body {\n  margin: 0;\n  background-color: #525659;\n  color: #fff;\n  font-family: Helvetica, Arial, sans-serif;\n}\n.Reader {\n  height: 100vh;\n}\n.Reader__container__numbers {\n  position: fixed;\n  top: 0px;\n  width: 100%;\n  margin: auto;\n  padding: 5px;\n  background-color: #565759;\n  z-index: 100;\n}\n.Reader__container__numbers__content {\n  font-size: 0.65rem;\n  text-align: center;\n  padding: 5px;\n  border-radius: 4px;\n  background-color: rgba(255, 255, 255, 0.144);\n  width: 50px;\n  margin: auto;\n}\n.Reader__container__navigate {\n  position: fixed;\n  bottom: 0px;\n  width: 100%;\n  margin: auto;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 100;\n  background-color: #405a65;\n}\n.Reader__container__navigate__arrow {\n  font-size: 2.5em;\n  margin: 10px;\n  width: 100px;\n  margin: auto;\n  text-align: center;\n}\n.Reader__container__zoom_container {\n  position: fixed;\n  bottom: 60px;\n  right: 15px;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 101;\n  flex: 1;\n  justify-content: center;\n}\n.Reader__container__zoom_container__button {\n  font-size: 2.5em;\n  margin: 5;\n  width: 50px;\n  text-align: center;\n}\n.Reader__container__load {\n  margin-top: 1em;\n  color: white;\n}\n.Reader__container__document {\n  margin: auto;\n  padding-top: 40px;\n  padding-bottom: 50px;\n}\n.Reader__container__document .react-pdf__Document span {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.Reader__container__document .react-pdf__Page {\n  display: block;\n}\n.Reader__container__document .react-pdf__Page canvas {\n  margin: auto;\n}\n.Reader__container__document .react-pdf__Page__annotations {\n  display: none;\n}\n",""]);const o=s},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&s[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),t.push(u))}},t}},601:e=>{"use strict";e.exports=function(e){return e[1]}},748:(module,__unused_webpack_exports,__webpack_require__)=>{var root,factory;root=globalThis,factory=()=>(()=>{"use strict";var __webpack_modules__=[,(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VerbosityLevel=t.Util=t.UnknownErrorException=t.UnexpectedResponseException=t.TextRenderingMode=t.RenderingIntentFlag=t.PromiseCapability=t.PermissionFlag=t.PasswordResponses=t.PasswordException=t.PageActionEventType=t.OPS=t.MissingPDFException=t.MAX_IMAGE_SIZE_TO_CACHE=t.LINE_FACTOR=t.LINE_DESCENT_FACTOR=t.InvalidPDFException=t.ImageKind=t.IDENTITY_MATRIX=t.FormatError=t.FeatureTest=t.FONT_IDENTITY_MATRIX=t.DocumentActionEventType=t.CMapCompressionType=t.BaseException=t.BASELINE_FACTOR=t.AnnotationType=t.AnnotationReplyType=t.AnnotationPrefix=t.AnnotationMode=t.AnnotationFlag=t.AnnotationFieldFlag=t.AnnotationEditorType=t.AnnotationEditorPrefix=t.AnnotationEditorParamsType=t.AnnotationBorderStyleType=t.AnnotationActionEventType=t.AbortException=void 0,t.assert=function(e,t){e||s(t)},t.bytesToString=c,t.createValidAbsoluteUrl=function(e,t=null,n=null){if(!e)return null;try{if(n&&"string"==typeof e){if(n.addDefaultProtocol&&e.startsWith("www.")){const t=e.match(/\./g);t?.length>=2&&(e=`http://${e}`)}if(n.tryConvertEncoding)try{e=p(e)}catch{}}const r=t?new URL(e,t):new URL(e);if(function(e){switch(e?.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(r))return r}catch{}return null},t.getModificationDate=function(e=new Date){return[e.getUTCFullYear().toString(),(e.getUTCMonth()+1).toString().padStart(2,"0"),e.getUTCDate().toString().padStart(2,"0"),e.getUTCHours().toString().padStart(2,"0"),e.getUTCMinutes().toString().padStart(2,"0"),e.getUTCSeconds().toString().padStart(2,"0")].join("")},t.getUuid=function(){if("undefined"!=typeof crypto&&"function"==typeof crypto?.randomUUID)return crypto.randomUUID();const e=new Uint8Array(32);if("undefined"!=typeof crypto&&"function"==typeof crypto?.getRandomValues)crypto.getRandomValues(e);else for(let t=0;t<32;t++)e[t]=Math.floor(255*Math.random());return c(e)},t.getVerbosityLevel=function(){return i},t.info=function(e){i>=r.INFOS&&console.log(`Info: ${e}`)},t.isArrayBuffer=function(e){return"object"==typeof e&&void 0!==e?.byteLength},t.isArrayEqual=function(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0},t.isNodeJS=void 0,t.normalizeUnicode=function(e){return f||(f=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,g=new Map([["ﬅ","ſt"]])),e.replaceAll(f,((e,t,n)=>t?t.normalize("NFKC"):g.get(n)))},t.objectFromMap=function(e){const t=Object.create(null);for(const[n,r]of e)t[n]=r;return t},t.objectSize=function(e){return Object.keys(e).length},t.setVerbosityLevel=function(e){Number.isInteger(e)&&(i=e)},t.shadow=o,t.string32=function(e){return String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e)},t.stringToBytes=u,t.stringToPDFString=function(e){if(e[0]>="ï"){let t;if("þ"===e[0]&&"ÿ"===e[1]?t="utf-16be":"ÿ"===e[0]&&"þ"===e[1]?t="utf-16le":"ï"===e[0]&&"»"===e[1]&&"¿"===e[2]&&(t="utf-8"),t)try{const n=new TextDecoder(t,{fatal:!0}),r=u(e);return n.decode(r)}catch(e){a(`stringToPDFString: "${e}".`)}}const t=[];for(let n=0,r=e.length;n<r;n++){const r=h[e.charCodeAt(n)];t.push(r?String.fromCharCode(r):e.charAt(n))}return t.join("")},t.stringToUTF8String=p,t.unreachable=s,t.utf8StringToString=function(e){return unescape(encodeURIComponent(e))},t.warn=a;const n=!("object"!=typeof process||process+""!="[object process]"||process.versions.nw||process.versions.electron&&process.type&&"browser"!==process.type);t.isNodeJS=n,t.IDENTITY_MATRIX=[1,0,0,1,0,0],t.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0],t.MAX_IMAGE_SIZE_TO_CACHE=1e7,t.LINE_FACTOR=1.35,t.LINE_DESCENT_FACTOR=.35;t.BASELINE_FACTOR=.35/1.35,t.RenderingIntentFlag={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,OPLIST:256},t.AnnotationMode={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},t.AnnotationEditorPrefix="pdfjs_internal_editor_",t.AnnotationEditorType={DISABLE:-1,NONE:0,FREETEXT:3,STAMP:13,INK:15},t.AnnotationEditorParamsType={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23},t.PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},t.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},t.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},t.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},t.AnnotationReplyType={GROUP:"Group",REPLY:"R"},t.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512},t.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864},t.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},t.AnnotationActionEventType={E:"Mouse Enter",X:"Mouse Exit",D:"Mouse Down",U:"Mouse Up",Fo:"Focus",Bl:"Blur",PO:"PageOpen",PC:"PageClose",PV:"PageVisible",PI:"PageInvisible",K:"Keystroke",F:"Format",V:"Validate",C:"Calculate"},t.DocumentActionEventType={WC:"WillClose",WS:"WillSave",DS:"DidSave",WP:"WillPrint",DP:"DidPrint"},t.PageActionEventType={O:"PageOpen",C:"PageClose"};const r={ERRORS:0,WARNINGS:1,INFOS:5};t.VerbosityLevel=r,t.CMapCompressionType={NONE:0,BINARY:1},t.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91},t.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let i=r.WARNINGS;function a(e){i>=r.WARNINGS&&console.log(`Warning: ${e}`)}function s(e){throw new Error(e)}function o(e,t,n,r=!1){return Object.defineProperty(e,t,{value:n,enumerable:!r,configurable:!0,writable:!1}),n}const l=function(){function e(t,n){this.constructor===e&&s("Cannot initialize BaseException."),this.message=t,this.name=n}return e.prototype=new Error,e.constructor=e,e}();function c(e){"object"==typeof e&&void 0!==e?.length||s("Invalid argument for bytesToString");const t=e.length,n=8192;if(t<n)return String.fromCharCode.apply(null,e);const r=[];for(let i=0;i<t;i+=n){const a=Math.min(i+n,t),s=e.subarray(i,a);r.push(String.fromCharCode.apply(null,s))}return r.join("")}function u(e){"string"!=typeof e&&s("Invalid argument for stringToBytes");const t=e.length,n=new Uint8Array(t);for(let r=0;r<t;++r)n[r]=255&e.charCodeAt(r);return n}t.BaseException=l,t.PasswordException=class extends l{constructor(e,t){super(e,"PasswordException"),this.code=t}},t.UnknownErrorException=class extends l{constructor(e,t){super(e,"UnknownErrorException"),this.details=t}},t.InvalidPDFException=class extends l{constructor(e){super(e,"InvalidPDFException")}},t.MissingPDFException=class extends l{constructor(e){super(e,"MissingPDFException")}},t.UnexpectedResponseException=class extends l{constructor(e,t){super(e,"UnexpectedResponseException"),this.status=t}},t.FormatError=class extends l{constructor(e){super(e,"FormatError")}},t.AbortException=class extends l{constructor(e){super(e,"AbortException")}},t.FeatureTest=class{static get isLittleEndian(){return o(this,"isLittleEndian",function(){const e=new Uint8Array(4);return e[0]=1,1===new Uint32Array(e.buffer,0,1)[0]}())}static get isEvalSupported(){return o(this,"isEvalSupported",function(){try{return new Function(""),!0}catch{return!1}}())}static get isOffscreenCanvasSupported(){return o(this,"isOffscreenCanvasSupported","undefined"!=typeof OffscreenCanvas)}static get platform(){return"undefined"==typeof navigator?o(this,"platform",{isWin:!1,isMac:!1}):o(this,"platform",{isWin:navigator.platform.includes("Win"),isMac:navigator.platform.includes("Mac")})}static get isCSSRoundSupported(){return o(this,"isCSSRoundSupported",globalThis.CSS?.supports?.("width: round(1.5px, 1px)"))}};const d=[...Array(256).keys()].map((e=>e.toString(16).padStart(2,"0")));t.Util=class{static makeHexColor(e,t,n){return`#${d[e]}${d[t]}${d[n]}`}static scaleMinMax(e,t){let n;e[0]?(e[0]<0&&(n=t[0],t[0]=t[1],t[1]=n),t[0]*=e[0],t[1]*=e[0],e[3]<0&&(n=t[2],t[2]=t[3],t[3]=n),t[2]*=e[3],t[3]*=e[3]):(n=t[0],t[0]=t[2],t[2]=n,n=t[1],t[1]=t[3],t[3]=n,e[1]<0&&(n=t[2],t[2]=t[3],t[3]=n),t[2]*=e[1],t[3]*=e[1],e[2]<0&&(n=t[0],t[0]=t[1],t[1]=n),t[0]*=e[2],t[1]*=e[2]),t[0]+=e[4],t[1]+=e[4],t[2]+=e[5],t[3]+=e[5]}static transform(e,t){return[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]]}static applyTransform(e,t){return[e[0]*t[0]+e[1]*t[2]+t[4],e[0]*t[1]+e[1]*t[3]+t[5]]}static applyInverseTransform(e,t){const n=t[0]*t[3]-t[1]*t[2];return[(e[0]*t[3]-e[1]*t[2]+t[2]*t[5]-t[4]*t[3])/n,(-e[0]*t[1]+e[1]*t[0]+t[4]*t[1]-t[5]*t[0])/n]}static getAxialAlignedBoundingBox(e,t){const n=this.applyTransform(e,t),r=this.applyTransform(e.slice(2,4),t),i=this.applyTransform([e[0],e[3]],t),a=this.applyTransform([e[2],e[1]],t);return[Math.min(n[0],r[0],i[0],a[0]),Math.min(n[1],r[1],i[1],a[1]),Math.max(n[0],r[0],i[0],a[0]),Math.max(n[1],r[1],i[1],a[1])]}static inverseTransform(e){const t=e[0]*e[3]-e[1]*e[2];return[e[3]/t,-e[1]/t,-e[2]/t,e[0]/t,(e[2]*e[5]-e[4]*e[3])/t,(e[4]*e[1]-e[5]*e[0])/t]}static singularValueDecompose2dScale(e){const t=[e[0],e[2],e[1],e[3]],n=e[0]*t[0]+e[1]*t[2],r=e[0]*t[1]+e[1]*t[3],i=e[2]*t[0]+e[3]*t[2],a=e[2]*t[1]+e[3]*t[3],s=(n+a)/2,o=Math.sqrt((n+a)**2-4*(n*a-i*r))/2,l=s+o||1,c=s-o||1;return[Math.sqrt(l),Math.sqrt(c)]}static normalizeRect(e){const t=e.slice(0);return e[0]>e[2]&&(t[0]=e[2],t[2]=e[0]),e[1]>e[3]&&(t[1]=e[3],t[3]=e[1]),t}static intersect(e,t){const n=Math.max(Math.min(e[0],e[2]),Math.min(t[0],t[2])),r=Math.min(Math.max(e[0],e[2]),Math.max(t[0],t[2]));if(n>r)return null;const i=Math.max(Math.min(e[1],e[3]),Math.min(t[1],t[3])),a=Math.min(Math.max(e[1],e[3]),Math.max(t[1],t[3]));return i>a?null:[n,i,r,a]}static bezierBoundingBox(e,t,n,r,i,a,s,o){const l=[],c=[[],[]];let u,d,h,p,f,g,m,b;for(let c=0;c<2;++c)if(0===c?(d=6*e-12*n+6*i,u=-3*e+9*n-9*i+3*s,h=3*n-3*e):(d=6*t-12*r+6*a,u=-3*t+9*r-9*a+3*o,h=3*r-3*t),Math.abs(u)<1e-12){if(Math.abs(d)<1e-12)continue;p=-h/d,0<p&&p<1&&l.push(p)}else m=d*d-4*h*u,b=Math.sqrt(m),m<0||(f=(-d+b)/(2*u),0<f&&f<1&&l.push(f),g=(-d-b)/(2*u),0<g&&g<1&&l.push(g));let v,y=l.length;const _=y;for(;y--;)p=l[y],v=1-p,c[0][y]=v*v*v*e+3*v*v*p*n+3*v*p*p*i+p*p*p*s,c[1][y]=v*v*v*t+3*v*v*p*r+3*v*p*p*a+p*p*p*o;return c[0][_]=e,c[1][_]=t,c[0][_+1]=s,c[1][_+1]=o,c[0].length=c[1].length=_+2,[Math.min(...c[0]),Math.min(...c[1]),Math.max(...c[0]),Math.max(...c[1])]}};const h=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];function p(e){return decodeURIComponent(escape(e))}t.PromiseCapability=class{#e=!1;constructor(){this.promise=new Promise(((e,t)=>{this.resolve=t=>{this.#e=!0,e(t)},this.reject=e=>{this.#e=!0,t(e)}}))}get settled(){return this.#e}};let f=null,g=null;t.AnnotationPrefix="pdfjs_internal_id_"},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderTask=exports.PDFWorkerUtil=exports.PDFWorker=exports.PDFPageProxy=exports.PDFDocumentProxy=exports.PDFDocumentLoadingTask=exports.PDFDataRangeTransport=exports.LoopbackPort=exports.DefaultStandardFontDataFactory=exports.DefaultFilterFactory=exports.DefaultCanvasFactory=exports.DefaultCMapReaderFactory=void 0,Object.defineProperty(exports,"SVGGraphics",{enumerable:!0,get:function(){return _displaySvg.SVGGraphics}}),exports.build=void 0,exports.getDocument=getDocument,exports.version=void 0;var _util=__w_pdfjs_require__(1),_annotation_storage=__w_pdfjs_require__(3),_display_utils=__w_pdfjs_require__(6),_font_loader=__w_pdfjs_require__(9),_displayNode_utils=__w_pdfjs_require__(10),_canvas=__w_pdfjs_require__(11),_worker_options=__w_pdfjs_require__(14),_message_handler=__w_pdfjs_require__(15),_metadata=__w_pdfjs_require__(16),_optional_content_config=__w_pdfjs_require__(17),_transport_stream=__w_pdfjs_require__(18),_displayFetch_stream=__w_pdfjs_require__(19),_displayNetwork=__w_pdfjs_require__(22),_displayNode_stream=__w_pdfjs_require__(23),_displaySvg=__w_pdfjs_require__(24),_xfa_text=__w_pdfjs_require__(25);const DEFAULT_RANGE_CHUNK_SIZE=65536,RENDERING_CANCELLED_TIMEOUT=100,DELAYED_CLEANUP_TIMEOUT=5e3,DefaultCanvasFactory=_util.isNodeJS?_displayNode_utils.NodeCanvasFactory:_display_utils.DOMCanvasFactory;exports.DefaultCanvasFactory=DefaultCanvasFactory;const DefaultCMapReaderFactory=_util.isNodeJS?_displayNode_utils.NodeCMapReaderFactory:_display_utils.DOMCMapReaderFactory;exports.DefaultCMapReaderFactory=DefaultCMapReaderFactory;const DefaultFilterFactory=_util.isNodeJS?_displayNode_utils.NodeFilterFactory:_display_utils.DOMFilterFactory;exports.DefaultFilterFactory=DefaultFilterFactory;const DefaultStandardFontDataFactory=_util.isNodeJS?_displayNode_utils.NodeStandardFontDataFactory:_display_utils.DOMStandardFontDataFactory;function getDocument(e){if("string"==typeof e||e instanceof URL?e={url:e}:(0,_util.isArrayBuffer)(e)&&(e={data:e}),"object"!=typeof e)throw new Error("Invalid parameter in getDocument, need parameter object.");if(!e.url&&!e.data&&!e.range)throw new Error("Invalid parameter object: need either .data, .range or .url");const t=new PDFDocumentLoadingTask,{docId:n}=t,r=e.url?getUrlProp(e.url):null,i=e.data?getDataProp(e.data):null,a=e.httpHeaders||null,s=!0===e.withCredentials,o=e.password??null,l=e.range instanceof PDFDataRangeTransport?e.range:null,c=Number.isInteger(e.rangeChunkSize)&&e.rangeChunkSize>0?e.rangeChunkSize:DEFAULT_RANGE_CHUNK_SIZE;let u=e.worker instanceof PDFWorker?e.worker:null;const d=e.verbosity,h="string"!=typeof e.docBaseUrl||(0,_display_utils.isDataScheme)(e.docBaseUrl)?null:e.docBaseUrl,p="string"==typeof e.cMapUrl?e.cMapUrl:null,f=!1!==e.cMapPacked,g=e.CMapReaderFactory||DefaultCMapReaderFactory,m="string"==typeof e.standardFontDataUrl?e.standardFontDataUrl:null,b=e.StandardFontDataFactory||DefaultStandardFontDataFactory,v=!0!==e.stopAtErrors,y=Number.isInteger(e.maxImageSize)&&e.maxImageSize>-1?e.maxImageSize:-1,_=!1!==e.isEvalSupported,A="boolean"==typeof e.isOffscreenCanvasSupported?e.isOffscreenCanvasSupported:!_util.isNodeJS,w=Number.isInteger(e.canvasMaxAreaInBytes)?e.canvasMaxAreaInBytes:-1,S="boolean"==typeof e.disableFontFace?e.disableFontFace:_util.isNodeJS,x=!0===e.fontExtraProperties,E=!0===e.enableXfa,k=e.ownerDocument||globalThis.document,C=!0===e.disableRange,P=!0===e.disableStream,T=!0===e.disableAutoFetch,M=!0===e.pdfBug,R=l?l.length:e.length??NaN,F="boolean"==typeof e.useSystemFonts?e.useSystemFonts:!_util.isNodeJS&&!S,D="boolean"==typeof e.useWorkerFetch?e.useWorkerFetch:g===_display_utils.DOMCMapReaderFactory&&b===_display_utils.DOMStandardFontDataFactory&&p&&m&&(0,_display_utils.isValidFetchUrl)(p,document.baseURI)&&(0,_display_utils.isValidFetchUrl)(m,document.baseURI),I=e.canvasFactory||new DefaultCanvasFactory({ownerDocument:k}),L=e.filterFactory||new DefaultFilterFactory({docId:n,ownerDocument:k});(0,_util.setVerbosityLevel)(d);const O={canvasFactory:I,filterFactory:L};if(D||(O.cMapReaderFactory=new g({baseUrl:p,isCompressed:f}),O.standardFontDataFactory=new b({baseUrl:m})),!u){const e={verbosity:d,port:_worker_options.GlobalWorkerOptions.workerPort};u=e.port?PDFWorker.fromPort(e):new PDFWorker(e),t._worker=u}const N={docId:n,apiVersion:"3.11.174",data:i,password:o,disableAutoFetch:T,rangeChunkSize:c,length:R,docBaseUrl:h,enableXfa:E,evaluatorOptions:{maxImageSize:y,disableFontFace:S,ignoreErrors:v,isEvalSupported:_,isOffscreenCanvasSupported:A,canvasMaxAreaInBytes:w,fontExtraProperties:x,useSystemFonts:F,cMapUrl:D?p:null,standardFontDataUrl:D?m:null}},z={ignoreErrors:v,isEvalSupported:_,disableFontFace:S,fontExtraProperties:x,enableXfa:E,ownerDocument:k,disableAutoFetch:T,pdfBug:M,styleElement:null};return u.promise.then((function(){if(t.destroyed)throw new Error("Loading aborted");const e=_fetchDocument(u,N),o=new Promise((function(e){let t;var n;l?t=new _transport_stream.PDFDataTransportStream({length:R,initialData:l.initialData,progressiveDone:l.progressiveDone,contentDispositionFilename:l.contentDispositionFilename,disableRange:C,disableStream:P},l):i||(n={url:r,length:R,httpHeaders:a,withCredentials:s,rangeChunkSize:c,disableRange:C,disableStream:P},t=_util.isNodeJS?new _displayNode_stream.PDFNodeStream(n):(0,_display_utils.isValidFetchUrl)(n.url)?new _displayFetch_stream.PDFFetchStream(n):new _displayNetwork.PDFNetworkStream(n)),e(t)}));return Promise.all([e,o]).then((function([e,r]){if(t.destroyed)throw new Error("Loading aborted");const i=new _message_handler.MessageHandler(n,e,u.port),a=new WorkerTransport(i,t,r,z,O);t._transport=a,i.send("Ready",null)}))})).catch(t._capability.reject),t}async function _fetchDocument(e,t){if(e.destroyed)throw new Error("Worker was destroyed");const n=await e.messageHandler.sendWithPromise("GetDocRequest",t,t.data?[t.data.buffer]:null);if(e.destroyed)throw new Error("Worker was destroyed");return n}function getUrlProp(e){if(e instanceof URL)return e.href;try{return new URL(e,window.location).href}catch{if(_util.isNodeJS&&"string"==typeof e)return e}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}function getDataProp(e){if(_util.isNodeJS&&"undefined"!=typeof Buffer&&e instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(e instanceof Uint8Array&&e.byteLength===e.buffer.byteLength)return e;if("string"==typeof e)return(0,_util.stringToBytes)(e);if("object"==typeof e&&!isNaN(e?.length)||(0,_util.isArrayBuffer)(e))return new Uint8Array(e);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}exports.DefaultStandardFontDataFactory=DefaultStandardFontDataFactory;class PDFDocumentLoadingTask{static#t=0;constructor(){this._capability=new _util.PromiseCapability,this._transport=null,this._worker=null,this.docId="d"+PDFDocumentLoadingTask.#t++,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){this.destroyed=!0;try{this._worker?.port&&(this._worker._pendingDestroy=!0),await(this._transport?.destroy())}catch(e){throw this._worker?.port&&delete this._worker._pendingDestroy,e}this._transport=null,this._worker&&(this._worker.destroy(),this._worker=null)}}exports.PDFDocumentLoadingTask=PDFDocumentLoadingTask;class PDFDataRangeTransport{constructor(e,t,n=!1,r=null){this.length=e,this.initialData=t,this.progressiveDone=n,this.contentDispositionFilename=r,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=new _util.PromiseCapability}addRangeListener(e){this._rangeListeners.push(e)}addProgressListener(e){this._progressListeners.push(e)}addProgressiveReadListener(e){this._progressiveReadListeners.push(e)}addProgressiveDoneListener(e){this._progressiveDoneListeners.push(e)}onDataRange(e,t){for(const n of this._rangeListeners)n(e,t)}onDataProgress(e,t){this._readyCapability.promise.then((()=>{for(const n of this._progressListeners)n(e,t)}))}onDataProgressiveRead(e){this._readyCapability.promise.then((()=>{for(const t of this._progressiveReadListeners)t(e)}))}onDataProgressiveDone(){this._readyCapability.promise.then((()=>{for(const e of this._progressiveDoneListeners)e()}))}transportReady(){this._readyCapability.resolve()}requestDataRange(e,t){(0,_util.unreachable)("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}exports.PDFDataRangeTransport=PDFDataRangeTransport;class PDFDocumentProxy{constructor(e,t){this._pdfInfo=e,this._transport=t,Object.defineProperty(this,"getJavaScript",{value:()=>((0,_display_utils.deprecated)("`PDFDocumentProxy.getJavaScript`, please use `PDFDocumentProxy.getJSActions` instead."),this.getJSActions().then((e=>{if(!e)return e;const t=[];for(const n in e)t.push(...e[n]);return t})))})}get annotationStorage(){return this._transport.annotationStorage}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return(0,_util.shadow)(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(e){return this._transport.getPage(e)}getPageIndex(e){return this._transport.getPageIndex(e)}getDestinations(){return this._transport.getDestinations()}getDestination(e){return this._transport.getDestination(e)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig(){return this._transport.getOptionalContentConfig()}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(e=!1){return this._transport.startCleanup(e||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}exports.PDFDocumentProxy=PDFDocumentProxy;class PDFPageProxy{#n=null;#r=!1;constructor(e,t,n,r=!1){this._pageIndex=e,this._pageInfo=t,this._transport=n,this._stats=r?new _display_utils.StatTimer:null,this._pdfBug=r,this.commonObjs=n.commonObjs,this.objs=new PDFObjects,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:e,rotation:t=this.rotate,offsetX:n=0,offsetY:r=0,dontFlip:i=!1}={}){return new _display_utils.PageViewport({viewBox:this.view,scale:e,rotation:t,offsetX:n,offsetY:r,dontFlip:i})}getAnnotations({intent:e="display"}={}){const t=this._transport.getRenderingIntent(e);return this._transport.getAnnotations(this._pageIndex,t.renderingIntent)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return(0,_util.shadow)(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){return this._transport._htmlForXfa?.children[this._pageIndex]||null}render({canvasContext:e,viewport:t,intent:n="display",annotationMode:r=_util.AnnotationMode.ENABLE,transform:i=null,background:a=null,optionalContentConfigPromise:s=null,annotationCanvasMap:o=null,pageColors:l=null,printAnnotationStorage:c=null}){this._stats?.time("Overall");const u=this._transport.getRenderingIntent(n,r,c);this.#r=!1,this.#i(),s||(s=this._transport.getOptionalContentConfig());let d=this._intentStates.get(u.cacheKey);d||(d=Object.create(null),this._intentStates.set(u.cacheKey,d)),d.streamReaderCancelTimeout&&(clearTimeout(d.streamReaderCancelTimeout),d.streamReaderCancelTimeout=null);const h=!!(u.renderingIntent&_util.RenderingIntentFlag.PRINT);d.displayReadyCapability||(d.displayReadyCapability=new _util.PromiseCapability,d.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},this._stats?.time("Page Request"),this._pumpOperatorList(u));const p=e=>{d.renderTasks.delete(f),(this._maybeCleanupAfterRender||h)&&(this.#r=!0),this.#a(!h),e?(f.capability.reject(e),this._abortOperatorList({intentState:d,reason:e instanceof Error?e:new Error(e)})):f.capability.resolve(),this._stats?.timeEnd("Rendering"),this._stats?.timeEnd("Overall")},f=new InternalRenderTask({callback:p,params:{canvasContext:e,viewport:t,transform:i,background:a},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:o,operatorList:d.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!h,pdfBug:this._pdfBug,pageColors:l});(d.renderTasks||=new Set).add(f);const g=f.task;return Promise.all([d.displayReadyCapability.promise,s]).then((([e,t])=>{this.destroyed?p():(this._stats?.time("Rendering"),f.initializeGraphics({transparency:e,optionalContentConfig:t}),f.operatorListChanged())})).catch(p),g}getOperatorList({intent:e="display",annotationMode:t=_util.AnnotationMode.ENABLE,printAnnotationStorage:n=null}={}){const r=this._transport.getRenderingIntent(e,t,n,!0);let i,a=this._intentStates.get(r.cacheKey);return a||(a=Object.create(null),this._intentStates.set(r.cacheKey,a)),a.opListReadCapability||(i=Object.create(null),i.operatorListChanged=function(){a.operatorList.lastChunk&&(a.opListReadCapability.resolve(a.operatorList),a.renderTasks.delete(i))},a.opListReadCapability=new _util.PromiseCapability,(a.renderTasks||=new Set).add(i),a.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},this._stats?.time("Page Request"),this._pumpOperatorList(r)),a.opListReadCapability.promise}streamTextContent({includeMarkedContent:e=!1,disableNormalization:t=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:!0===e,disableNormalization:!0===t},{highWaterMark:100,size:e=>e.items.length})}getTextContent(e={}){if(this._transport._htmlForXfa)return this.getXfa().then((e=>_xfa_text.XfaText.textContent(e)));const t=this.streamTextContent(e);return new Promise((function(e,n){const r=t.getReader(),i={items:[],styles:Object.create(null)};!function t(){r.read().then((function({value:n,done:r}){r?e(i):(Object.assign(i.styles,n.styles),i.items.push(...n.items),t())}),n)}()}))}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const e=[];for(const t of this._intentStates.values())if(this._abortOperatorList({intentState:t,reason:new Error("Page was destroyed."),force:!0}),!t.opListReadCapability)for(const n of t.renderTasks)e.push(n.completed),n.cancel();return this.objs.clear(),this.#r=!1,this.#i(),Promise.all(e)}cleanup(e=!1){this.#r=!0;const t=this.#a(!1);return e&&t&&(this._stats&&=new _display_utils.StatTimer),t}#a(e=!1){if(this.#i(),!this.#r||this.destroyed)return!1;if(e)return this.#n=setTimeout((()=>{this.#n=null,this.#a(!1)}),DELAYED_CLEANUP_TIMEOUT),!1;for(const{renderTasks:e,operatorList:t}of this._intentStates.values())if(e.size>0||!t.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),this.#r=!1,!0}#i(){this.#n&&(clearTimeout(this.#n),this.#n=null)}_startRenderPage(e,t){const n=this._intentStates.get(t);n&&(this._stats?.timeEnd("Page Request"),n.displayReadyCapability?.resolve(e))}_renderPageChunk(e,t){for(let n=0,r=e.length;n<r;n++)t.operatorList.fnArray.push(e.fnArray[n]),t.operatorList.argsArray.push(e.argsArray[n]);t.operatorList.lastChunk=e.lastChunk,t.operatorList.separateAnnots=e.separateAnnots;for(const e of t.renderTasks)e.operatorListChanged();e.lastChunk&&this.#a(!0)}_pumpOperatorList({renderingIntent:e,cacheKey:t,annotationStorageSerializable:n}){const{map:r,transfers:i}=n,a=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:e,cacheKey:t,annotationStorage:r},i).getReader(),s=this._intentStates.get(t);s.streamReader=a;const o=()=>{a.read().then((({value:e,done:t})=>{t?s.streamReader=null:this._transport.destroyed||(this._renderPageChunk(e,s),o())}),(e=>{if(s.streamReader=null,!this._transport.destroyed){if(s.operatorList){s.operatorList.lastChunk=!0;for(const e of s.renderTasks)e.operatorListChanged();this.#a(!0)}if(s.displayReadyCapability)s.displayReadyCapability.reject(e);else{if(!s.opListReadCapability)throw e;s.opListReadCapability.reject(e)}}}))};o()}_abortOperatorList({intentState:e,reason:t,force:n=!1}){if(e.streamReader){if(e.streamReaderCancelTimeout&&(clearTimeout(e.streamReaderCancelTimeout),e.streamReaderCancelTimeout=null),!n){if(e.renderTasks.size>0)return;if(t instanceof _display_utils.RenderingCancelledException){let n=RENDERING_CANCELLED_TIMEOUT;return t.extraDelay>0&&t.extraDelay<1e3&&(n+=t.extraDelay),void(e.streamReaderCancelTimeout=setTimeout((()=>{e.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:e,reason:t,force:!0})}),n))}}if(e.streamReader.cancel(new _util.AbortException(t.message)).catch((()=>{})),e.streamReader=null,!this._transport.destroyed){for(const[t,n]of this._intentStates)if(n===e){this._intentStates.delete(t);break}this.cleanup()}}}get stats(){return this._stats}}exports.PDFPageProxy=PDFPageProxy;class LoopbackPort{#s=new Set;#o=Promise.resolve();postMessage(e,t){const n={data:structuredClone(e,t?{transfer:t}:null)};this.#o.then((()=>{for(const e of this.#s)e.call(this,n)}))}addEventListener(e,t){this.#s.add(t)}removeEventListener(e,t){this.#s.delete(t)}terminate(){this.#s.clear()}}exports.LoopbackPort=LoopbackPort;const PDFWorkerUtil={isWorkerDisabled:!1,fallbackWorkerSrc:null,fakeWorkerId:0};if(exports.PDFWorkerUtil=PDFWorkerUtil,_util.isNodeJS)PDFWorkerUtil.isWorkerDisabled=!0,PDFWorkerUtil.fallbackWorkerSrc="./pdf.worker.js";else if("object"==typeof document){const e=document?.currentScript?.src;e&&(PDFWorkerUtil.fallbackWorkerSrc=e.replace(/(\.(?:min\.)?js)(\?.*)?$/i,".worker$1$2"))}PDFWorkerUtil.isSameOrigin=function(e,t){let n;try{if(n=new URL(e),!n.origin||"null"===n.origin)return!1}catch{return!1}const r=new URL(t,n);return n.origin===r.origin},PDFWorkerUtil.createCDNWrapper=function(e){const t=`importScripts("${e}");`;return URL.createObjectURL(new Blob([t]))};class PDFWorker{static#l;constructor({name:e=null,port:t=null,verbosity:n=(0,_util.getVerbosityLevel)()}={}){if(this.name=e,this.destroyed=!1,this.verbosity=n,this._readyCapability=new _util.PromiseCapability,this._port=null,this._webWorker=null,this._messageHandler=null,t){if(PDFWorker.#l?.has(t))throw new Error("Cannot use more than one PDFWorker per port.");return(PDFWorker.#l||=new WeakMap).set(t,this),void this._initializeFromPort(t)}this._initialize()}get promise(){return this._readyCapability.promise}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(e){this._port=e,this._messageHandler=new _message_handler.MessageHandler("main","worker",e),this._messageHandler.on("ready",(function(){})),this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})}_initialize(){if(!PDFWorkerUtil.isWorkerDisabled&&!PDFWorker._mainThreadWorkerMessageHandler){let{workerSrc:e}=PDFWorker;try{PDFWorkerUtil.isSameOrigin(window.location.href,e)||(e=PDFWorkerUtil.createCDNWrapper(new URL(e,window.location).href));const t=new Worker(e),n=new _message_handler.MessageHandler("main","worker",t),r=()=>{t.removeEventListener("error",i),n.destroy(),t.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},i=()=>{this._webWorker||r()};t.addEventListener("error",i),n.on("test",(e=>{t.removeEventListener("error",i),this.destroyed?r():e?(this._messageHandler=n,this._port=t,this._webWorker=t,this._readyCapability.resolve(),n.send("configure",{verbosity:this.verbosity})):(this._setupFakeWorker(),n.destroy(),t.terminate())})),n.on("ready",(e=>{if(t.removeEventListener("error",i),this.destroyed)r();else try{a()}catch{this._setupFakeWorker()}}));const a=()=>{const e=new Uint8Array;n.send("test",e,[e.buffer])};return void a()}catch{(0,_util.info)("The worker has been disabled.")}}this._setupFakeWorker()}_setupFakeWorker(){PDFWorkerUtil.isWorkerDisabled||((0,_util.warn)("Setting up fake worker."),PDFWorkerUtil.isWorkerDisabled=!0),PDFWorker._setupFakeWorkerGlobal.then((e=>{if(this.destroyed)return void this._readyCapability.reject(new Error("Worker was destroyed"));const t=new LoopbackPort;this._port=t;const n="fake"+PDFWorkerUtil.fakeWorkerId++,r=new _message_handler.MessageHandler(n+"_worker",n,t);e.setup(r,t);const i=new _message_handler.MessageHandler(n,n+"_worker",t);this._messageHandler=i,this._readyCapability.resolve(),i.send("configure",{verbosity:this.verbosity})})).catch((e=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${e.message}".`))}))}destroy(){this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),PDFWorker.#l?.delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}static fromPort(e){if(!e?.port)throw new Error("PDFWorker.fromPort - invalid method signature.");const t=this.#l?.get(e.port);if(t){if(t._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return t}return new PDFWorker(e)}static get workerSrc(){if(_worker_options.GlobalWorkerOptions.workerSrc)return _worker_options.GlobalWorkerOptions.workerSrc;if(null!==PDFWorkerUtil.fallbackWorkerSrc)return _util.isNodeJS||(0,_display_utils.deprecated)('No "GlobalWorkerOptions.workerSrc" specified.'),PDFWorkerUtil.fallbackWorkerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get _mainThreadWorkerMessageHandler(){try{return globalThis.pdfjsWorker?.WorkerMessageHandler||null}catch{return null}}static get _setupFakeWorkerGlobal(){const loader=async()=>{const mainWorkerMessageHandler=this._mainThreadWorkerMessageHandler;if(mainWorkerMessageHandler)return mainWorkerMessageHandler;if(_util.isNodeJS){const worker=eval("require")(this.workerSrc);return worker.WorkerMessageHandler}return await(0,_display_utils.loadScript)(this.workerSrc),window.pdfjsWorker.WorkerMessageHandler};return(0,_util.shadow)(this,"_setupFakeWorkerGlobal",loader())}}exports.PDFWorker=PDFWorker;class WorkerTransport{#c=new Map;#u=new Map;#d=new Map;#h=null;constructor(e,t,n,r,i){this.messageHandler=e,this.loadingTask=t,this.commonObjs=new PDFObjects,this.fontLoader=new _font_loader.FontLoader({ownerDocument:r.ownerDocument,styleElement:r.styleElement}),this._params=r,this.canvasFactory=i.canvasFactory,this.filterFactory=i.filterFactory,this.cMapReaderFactory=i.cMapReaderFactory,this.standardFontDataFactory=i.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._networkStream=n,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=new _util.PromiseCapability,this.setupMessageHandler()}#p(e,t=null){const n=this.#c.get(e);if(n)return n;const r=this.messageHandler.sendWithPromise(e,t);return this.#c.set(e,r),r}get annotationStorage(){return(0,_util.shadow)(this,"annotationStorage",new _annotation_storage.AnnotationStorage)}getRenderingIntent(e,t=_util.AnnotationMode.ENABLE,n=null,r=!1){let i=_util.RenderingIntentFlag.DISPLAY,a=_annotation_storage.SerializableEmpty;switch(e){case"any":i=_util.RenderingIntentFlag.ANY;break;case"display":break;case"print":i=_util.RenderingIntentFlag.PRINT;break;default:(0,_util.warn)(`getRenderingIntent - invalid intent: ${e}`)}switch(t){case _util.AnnotationMode.DISABLE:i+=_util.RenderingIntentFlag.ANNOTATIONS_DISABLE;break;case _util.AnnotationMode.ENABLE:break;case _util.AnnotationMode.ENABLE_FORMS:i+=_util.RenderingIntentFlag.ANNOTATIONS_FORMS;break;case _util.AnnotationMode.ENABLE_STORAGE:i+=_util.RenderingIntentFlag.ANNOTATIONS_STORAGE,a=(i&_util.RenderingIntentFlag.PRINT&&n instanceof _annotation_storage.PrintAnnotationStorage?n:this.annotationStorage).serializable;break;default:(0,_util.warn)(`getRenderingIntent - invalid annotationMode: ${t}`)}return r&&(i+=_util.RenderingIntentFlag.OPLIST),{renderingIntent:i,cacheKey:`${i}_${a.hash}`,annotationStorageSerializable:a}}destroy(){if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=new _util.PromiseCapability,this.#h?.reject(new Error("Worker was destroyed during onPassword callback"));const e=[];for(const t of this.#u.values())e.push(t._destroy());this.#u.clear(),this.#d.clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const t=this.messageHandler.sendWithPromise("Terminate",null);return e.push(t),Promise.all(e).then((()=>{this.commonObjs.clear(),this.fontLoader.clear(),this.#c.clear(),this.filterFactory.destroy(),this._networkStream?.cancelAllRequests(new _util.AbortException("Worker was terminated.")),this.messageHandler&&(this.messageHandler.destroy(),this.messageHandler=null),this.destroyCapability.resolve()}),this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:e,loadingTask:t}=this;e.on("GetReader",((e,t)=>{(0,_util.assert)(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=e=>{this._lastProgress={loaded:e.loaded,total:e.total}},t.onPull=()=>{this._fullReader.read().then((function({value:e,done:n}){n?t.close():((0,_util.assert)(e instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),t.enqueue(new Uint8Array(e),1,[e]))})).catch((e=>{t.error(e)}))},t.onCancel=e=>{this._fullReader.cancel(e),t.ready.catch((e=>{if(!this.destroyed)throw e}))}})),e.on("ReaderHeadersReady",(e=>{const n=new _util.PromiseCapability,r=this._fullReader;return r.headersReady.then((()=>{r.isStreamingSupported&&r.isRangeSupported||(this._lastProgress&&t.onProgress?.(this._lastProgress),r.onProgress=e=>{t.onProgress?.({loaded:e.loaded,total:e.total})}),n.resolve({isStreamingSupported:r.isStreamingSupported,isRangeSupported:r.isRangeSupported,contentLength:r.contentLength})}),n.reject),n.promise})),e.on("GetRangeReader",((e,t)=>{(0,_util.assert)(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const n=this._networkStream.getRangeReader(e.begin,e.end);n?(t.onPull=()=>{n.read().then((function({value:e,done:n}){n?t.close():((0,_util.assert)(e instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),t.enqueue(new Uint8Array(e),1,[e]))})).catch((e=>{t.error(e)}))},t.onCancel=e=>{n.cancel(e),t.ready.catch((e=>{if(!this.destroyed)throw e}))}):t.close()})),e.on("GetDoc",(({pdfInfo:e})=>{this._numPages=e.numPages,this._htmlForXfa=e.htmlForXfa,delete e.htmlForXfa,t._capability.resolve(new PDFDocumentProxy(e,this))})),e.on("DocException",(function(e){let n;switch(e.name){case"PasswordException":n=new _util.PasswordException(e.message,e.code);break;case"InvalidPDFException":n=new _util.InvalidPDFException(e.message);break;case"MissingPDFException":n=new _util.MissingPDFException(e.message);break;case"UnexpectedResponseException":n=new _util.UnexpectedResponseException(e.message,e.status);break;case"UnknownErrorException":n=new _util.UnknownErrorException(e.message,e.details);break;default:(0,_util.unreachable)("DocException - expected a valid Error.")}t._capability.reject(n)})),e.on("PasswordRequest",(e=>{if(this.#h=new _util.PromiseCapability,t.onPassword){const n=e=>{e instanceof Error?this.#h.reject(e):this.#h.resolve({password:e})};try{t.onPassword(n,e.code)}catch(e){this.#h.reject(e)}}else this.#h.reject(new _util.PasswordException(e.message,e.code));return this.#h.promise})),e.on("DataLoaded",(e=>{t.onProgress?.({loaded:e.length,total:e.length}),this.downloadInfoCapability.resolve(e)})),e.on("StartRenderPage",(e=>{this.destroyed||this.#u.get(e.pageIndex)._startRenderPage(e.transparency,e.cacheKey)})),e.on("commonobj",(([t,n,r])=>{if(!this.destroyed&&!this.commonObjs.has(t))switch(n){case"Font":const i=this._params;if("error"in r){const e=r.error;(0,_util.warn)(`Error during font loading: ${e}`),this.commonObjs.resolve(t,e);break}const a=i.pdfBug&&globalThis.FontInspector?.enabled?(e,t)=>globalThis.FontInspector.fontAdded(e,t):null,s=new _font_loader.FontFaceObject(r,{isEvalSupported:i.isEvalSupported,disableFontFace:i.disableFontFace,ignoreErrors:i.ignoreErrors,inspectFont:a});this.fontLoader.bind(s).catch((n=>e.sendWithPromise("FontFallback",{id:t}))).finally((()=>{!i.fontExtraProperties&&s.data&&(s.data=null),this.commonObjs.resolve(t,s)}));break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(t,r);break;default:throw new Error(`Got unknown common object type ${n}`)}})),e.on("obj",(([e,t,n,r])=>{if(this.destroyed)return;const i=this.#u.get(t);if(!i.objs.has(e))switch(n){case"Image":if(i.objs.resolve(e,r),r){let e;if(r.bitmap){const{width:t,height:n}=r;e=t*n*4}else e=r.data?.length||0;e>_util.MAX_IMAGE_SIZE_TO_CACHE&&(i._maybeCleanupAfterRender=!0)}break;case"Pattern":i.objs.resolve(e,r);break;default:throw new Error(`Got unknown object type ${n}`)}})),e.on("DocProgress",(e=>{this.destroyed||t.onProgress?.({loaded:e.loaded,total:e.total})})),e.on("FetchBuiltInCMap",(e=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.cMapReaderFactory?this.cMapReaderFactory.fetch(e):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.")))),e.on("FetchStandardFontData",(e=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.standardFontDataFactory?this.standardFontDataFactory.fetch(e):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter."))))}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){this.annotationStorage.size<=0&&(0,_util.warn)("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:e,transfers:t}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:e,filename:this._fullReader?.filename??null},t).finally((()=>{this.annotationStorage.resetModified()}))}getPage(e){if(!Number.isInteger(e)||e<=0||e>this._numPages)return Promise.reject(new Error("Invalid page request."));const t=e-1,n=this.#d.get(t);if(n)return n;const r=this.messageHandler.sendWithPromise("GetPage",{pageIndex:t}).then((e=>{if(this.destroyed)throw new Error("Transport destroyed");const n=new PDFPageProxy(t,e,this,this._params.pdfBug);return this.#u.set(t,n),n}));return this.#d.set(t,r),r}getPageIndex(e){return"object"!=typeof e||null===e||!Number.isInteger(e.num)||e.num<0||!Number.isInteger(e.gen)||e.gen<0?Promise.reject(new Error("Invalid pageIndex request.")):this.messageHandler.sendWithPromise("GetPageIndex",{num:e.num,gen:e.gen})}getAnnotations(e,t){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:e,intent:t})}getFieldObjects(){return this.#p("GetFieldObjects")}hasJSActions(){return this.#p("HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(e){return"string"!=typeof e?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:e})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return this.#p("GetDocJSActions")}getPageJSActions(e){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:e})}getStructTree(e){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:e})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(){return this.messageHandler.sendWithPromise("GetOptionalContentConfig",null).then((e=>new _optional_content_config.OptionalContentConfig(e)))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const e="GetMetadata",t=this.#c.get(e);if(t)return t;const n=this.messageHandler.sendWithPromise(e,null).then((e=>({info:e[0],metadata:e[1]?new _metadata.Metadata(e[1]):null,contentDispositionFilename:this._fullReader?.filename??null,contentLength:this._fullReader?.contentLength??null})));return this.#c.set(e,n),n}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(e=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const e of this.#u.values())if(!e.cleanup())throw new Error(`startCleanup: Page ${e.pageNumber} is currently rendering.`);this.commonObjs.clear(),e||this.fontLoader.clear(),this.#c.clear(),this.filterFactory.destroy(!0)}}get loadingParams(){const{disableAutoFetch:e,enableXfa:t}=this._params;return(0,_util.shadow)(this,"loadingParams",{disableAutoFetch:e,enableXfa:t})}}class PDFObjects{#f=Object.create(null);#g(e){return this.#f[e]||={capability:new _util.PromiseCapability,data:null}}get(e,t=null){if(t){const n=this.#g(e);return n.capability.promise.then((()=>t(n.data))),null}const n=this.#f[e];if(!n?.capability.settled)throw new Error(`Requesting object that isn't resolved yet ${e}.`);return n.data}has(e){const t=this.#f[e];return t?.capability.settled||!1}resolve(e,t=null){const n=this.#g(e);n.data=t,n.capability.resolve()}clear(){for(const e in this.#f){const{data:t}=this.#f[e];t?.bitmap?.close()}this.#f=Object.create(null)}}class RenderTask{#m=null;constructor(e){this.#m=e,this.onContinue=null}get promise(){return this.#m.capability.promise}cancel(e=0){this.#m.cancel(null,e)}get separateAnnots(){const{separateAnnots:e}=this.#m.operatorList;if(!e)return!1;const{annotationCanvasMap:t}=this.#m;return e.form||e.canvas&&t?.size>0}}exports.RenderTask=RenderTask;class InternalRenderTask{static#b=new WeakSet;constructor({callback:e,params:t,objs:n,commonObjs:r,annotationCanvasMap:i,operatorList:a,pageIndex:s,canvasFactory:o,filterFactory:l,useRequestAnimationFrame:c=!1,pdfBug:u=!1,pageColors:d=null}){this.callback=e,this.params=t,this.objs=n,this.commonObjs=r,this.annotationCanvasMap=i,this.operatorListIdx=null,this.operatorList=a,this._pageIndex=s,this.canvasFactory=o,this.filterFactory=l,this._pdfBug=u,this.pageColors=d,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=!0===c&&"undefined"!=typeof window,this.cancelled=!1,this.capability=new _util.PromiseCapability,this.task=new RenderTask(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=t.canvasContext.canvas}get completed(){return this.capability.promise.catch((function(){}))}initializeGraphics({transparency:e=!1,optionalContentConfig:t}){if(this.cancelled)return;if(this._canvas){if(InternalRenderTask.#b.has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");InternalRenderTask.#b.add(this._canvas)}this._pdfBug&&globalThis.StepperManager?.enabled&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:n,viewport:r,transform:i,background:a}=this.params;this.gfx=new _canvas.CanvasGraphics(n,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:t},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:i,viewport:r,transparency:e,background:a}),this.operatorListIdx=0,this.graphicsReady=!0,this.graphicsReadyCallback?.()}cancel(e=null,t=0){this.running=!1,this.cancelled=!0,this.gfx?.endDrawing(),InternalRenderTask.#b.delete(this._canvas),this.callback(e||new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex+1}`,t))}operatorListChanged(){this.graphicsReady?(this.stepper?.updateOperatorList(this.operatorList),this.running||this._continue()):this.graphicsReadyCallback||=this._continueBound}_continue(){this.running=!0,this.cancelled||(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?window.requestAnimationFrame((()=>{this._nextBound().catch(this._cancelBound)})):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),InternalRenderTask.#b.delete(this._canvas),this.callback())))}}const version="3.11.174";exports.version=version;const build="ce8716743";exports.build=build},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SerializableEmpty=t.PrintAnnotationStorage=t.AnnotationStorage=void 0;var r=n(1),i=n(4),a=n(8);const s=Object.freeze({map:null,hash:"",transfers:void 0});t.SerializableEmpty=s;class o{#v=!1;#y=new Map;constructor(){this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(e,t){const n=this.#y.get(e);return void 0===n?t:Object.assign(t,n)}getRawValue(e){return this.#y.get(e)}remove(e){if(this.#y.delete(e),0===this.#y.size&&this.resetModified(),"function"==typeof this.onAnnotationEditor){for(const e of this.#y.values())if(e instanceof i.AnnotationEditor)return;this.onAnnotationEditor(null)}}setValue(e,t){const n=this.#y.get(e);let r=!1;if(void 0!==n)for(const[e,i]of Object.entries(t))n[e]!==i&&(r=!0,n[e]=i);else r=!0,this.#y.set(e,t);r&&this.#_(),t instanceof i.AnnotationEditor&&"function"==typeof this.onAnnotationEditor&&this.onAnnotationEditor(t.constructor._type)}has(e){return this.#y.has(e)}getAll(){return this.#y.size>0?(0,r.objectFromMap)(this.#y):null}setAll(e){for(const[t,n]of Object.entries(e))this.setValue(t,n)}get size(){return this.#y.size}#_(){this.#v||(this.#v=!0,"function"==typeof this.onSetModified&&this.onSetModified())}resetModified(){this.#v&&(this.#v=!1,"function"==typeof this.onResetModified&&this.onResetModified())}get print(){return new l(this)}get serializable(){if(0===this.#y.size)return s;const e=new Map,t=new a.MurmurHash3_64,n=[],r=Object.create(null);let o=!1;for(const[n,a]of this.#y){const s=a instanceof i.AnnotationEditor?a.serialize(!1,r):a;s&&(e.set(n,s),t.update(`${n}:${JSON.stringify(s)}`),o||=!!s.bitmap)}if(o)for(const t of e.values())t.bitmap&&n.push(t.bitmap);return e.size>0?{map:e,hash:t.hexdigest(),transfers:n}:s}}t.AnnotationStorage=o;class l extends o{#A;constructor(e){super();const{map:t,hash:n,transfers:r}=e.serializable,i=structuredClone(t,r?{transfer:r}:null);this.#A={map:i,hash:n,transfers:r}}get print(){(0,r.unreachable)("Should not call PrintAnnotationStorage.print")}get serializable(){return this.#A}}t.PrintAnnotationStorage=l},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AnnotationEditor=void 0;var r=n(5),i=n(1),a=n(6);class s{#w="";#S=!1;#x=null;#E=null;#k=null;#C=!1;#P=null;#T=this.focusin.bind(this);#M=this.focusout.bind(this);#R=!1;#F=!1;#D=!1;_initialOptions=Object.create(null);_uiManager=null;_focusEventsAllowed=!0;_l10nPromise=null;#I=!1;#L=s._zIndex++;static _borderLineWidth=-1;static _colorManager=new r.ColorManager;static _zIndex=1;static SMALL_EDITOR_SIZE=0;constructor(e){this.constructor===s&&(0,i.unreachable)("Cannot initialize AnnotationEditor."),this.parent=e.parent,this.id=e.id,this.width=this.height=null,this.pageIndex=e.parent.pageIndex,this.name=e.name,this.div=null,this._uiManager=e.uiManager,this.annotationElementId=null,this._willKeepAspectRatio=!1,this._initialOptions.isCentered=e.isCentered,this._structTreeParentId=null;const{rotation:t,rawDims:{pageWidth:n,pageHeight:r,pageX:a,pageY:o}}=this.parent.viewport;this.rotation=t,this.pageRotation=(360+t-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[n,r],this.pageTranslation=[a,o];const[l,c]=this.parentDimensions;this.x=e.x/l,this.y=e.y/c,this.isAttachedToDOM=!1,this.deleted=!1}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get _defaultLineColor(){return(0,i.shadow)(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(e){const t=new o({id:e.parent.getNextId(),parent:e.parent,uiManager:e._uiManager});t.annotationElementId=e.annotationElementId,t.deleted=!0,t._uiManager.addToAnnotationStorage(t)}static initialize(e,t=null){if(s._l10nPromise||=new Map(["editor_alt_text_button_label","editor_alt_text_edit_button_label","editor_alt_text_decorative_tooltip"].map((t=>[t,e.get(t)]))),t?.strings)for(const n of t.strings)s._l10nPromise.set(n,e.get(n));if(-1!==s._borderLineWidth)return;const n=getComputedStyle(document.documentElement);s._borderLineWidth=parseFloat(n.getPropertyValue("--outline-width"))||0}static updateDefaultParams(e,t){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(e){return!1}static paste(e,t){(0,i.unreachable)("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return this.#I}set _isDraggable(e){this.#I=e,this.div?.classList.toggle("draggable",e)}center(){const[e,t]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*t/(2*e),this.y+=this.width*e/(2*t);break;case 180:this.x+=this.width/2,this.y+=this.height/2;break;case 270:this.x+=this.height*t/(2*e),this.y-=this.width*e/(2*t);break;default:this.x-=this.width/2,this.y-=this.height/2}this.fixAndSetPosition()}addCommands(e){this._uiManager.addCommands(e)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=this.#L}setParent(e){null!==e&&(this.pageIndex=e.pageIndex,this.pageDimensions=e.pageDimensions),this.parent=e}focusin(e){this._focusEventsAllowed&&(this.#R?this.#R=!1:this.parent.setSelected(this))}focusout(e){if(!this._focusEventsAllowed)return;if(!this.isAttachedToDOM)return;const t=e.relatedTarget;t?.closest(`#${this.id}`)||(e.preventDefault(),this.parent?.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(e,t,n,r){const[i,a]=this.parentDimensions;[n,r]=this.screenToPageTranslation(n,r),this.x=(e+n)/i,this.y=(t+r)/a,this.fixAndSetPosition()}#O([e,t],n,r){[n,r]=this.screenToPageTranslation(n,r),this.x+=n/e,this.y+=r/t,this.fixAndSetPosition()}translate(e,t){this.#O(this.parentDimensions,e,t)}translateInPage(e,t){this.#O(this.pageDimensions,e,t),this.div.scrollIntoView({block:"nearest"})}drag(e,t){const[n,r]=this.parentDimensions;if(this.x+=e/n,this.y+=t/r,this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:e,y:t}=this.div.getBoundingClientRect();this.parent.findNewParent(this,e,t)&&(this.x-=Math.floor(this.x),this.y-=Math.floor(this.y))}let{x:i,y:a}=this;const[s,o]=this.#N();i+=s,a+=o,this.div.style.left=`${(100*i).toFixed(2)}%`,this.div.style.top=`${(100*a).toFixed(2)}%`,this.div.scrollIntoView({block:"nearest"})}#N(){const[e,t]=this.parentDimensions,{_borderLineWidth:n}=s,r=n/e,i=n/t;switch(this.rotation){case 90:return[-r,i];case 180:return[r,i];case 270:return[r,-i];default:return[-r,-i]}}fixAndSetPosition(){const[e,t]=this.pageDimensions;let{x:n,y:r,width:i,height:a}=this;switch(i*=e,a*=t,n*=e,r*=t,this.rotation){case 0:n=Math.max(0,Math.min(e-i,n)),r=Math.max(0,Math.min(t-a,r));break;case 90:n=Math.max(0,Math.min(e-a,n)),r=Math.min(t,Math.max(i,r));break;case 180:n=Math.min(e,Math.max(i,n)),r=Math.min(t,Math.max(a,r));break;case 270:n=Math.min(e,Math.max(a,n)),r=Math.max(0,Math.min(t-i,r))}this.x=n/=e,this.y=r/=t;const[s,o]=this.#N();n+=s,r+=o;const{style:l}=this.div;l.left=`${(100*n).toFixed(2)}%`,l.top=`${(100*r).toFixed(2)}%`,this.moveInDOM()}static#z(e,t,n){switch(n){case 90:return[t,-e];case 180:return[-e,-t];case 270:return[-t,e];default:return[e,t]}}screenToPageTranslation(e,t){return s.#z(e,t,this.parentRotation)}pageTranslationToScreen(e,t){return s.#z(e,t,360-this.parentRotation)}#j(e){switch(e){case 90:{const[e,t]=this.pageDimensions;return[0,-e/t,t/e,0]}case 180:return[-1,0,0,-1];case 270:{const[e,t]=this.pageDimensions;return[0,e/t,-t/e,0]}default:return[1,0,0,1]}}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:e,pageDimensions:[t,n]}=this,r=t*e,a=n*e;return i.FeatureTest.isCSSRoundSupported?[Math.round(r),Math.round(a)]:[r,a]}setDims(e,t){const[n,r]=this.parentDimensions;this.div.style.width=`${(100*e/n).toFixed(2)}%`,this.#C||(this.div.style.height=`${(100*t/r).toFixed(2)}%`),this.#x?.classList.toggle("small",e<s.SMALL_EDITOR_SIZE||t<s.SMALL_EDITOR_SIZE)}fixDims(){const{style:e}=this.div,{height:t,width:n}=e,r=n.endsWith("%"),i=!this.#C&&t.endsWith("%");if(r&&i)return;const[a,s]=this.parentDimensions;r||(e.width=`${(100*parseFloat(n)/a).toFixed(2)}%`),this.#C||i||(e.height=`${(100*parseFloat(t)/s).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}#U(){if(this.#P)return;this.#P=document.createElement("div"),this.#P.classList.add("resizers");const e=["topLeft","topRight","bottomRight","bottomLeft"];this._willKeepAspectRatio||e.push("topMiddle","middleRight","bottomMiddle","middleLeft");for(const t of e){const e=document.createElement("div");this.#P.append(e),e.classList.add("resizer",t),e.addEventListener("pointerdown",this.#B.bind(this,t)),e.addEventListener("contextmenu",a.noContextMenu)}this.div.prepend(this.#P)}#B(e,t){t.preventDefault();const{isMac:n}=i.FeatureTest.platform;if(0!==t.button||t.ctrlKey&&n)return;const r=this.#H.bind(this,e),a=this._isDraggable;this._isDraggable=!1;const s={passive:!0,capture:!0};window.addEventListener("pointermove",r,s);const o=this.x,l=this.y,c=this.width,u=this.height,d=this.parent.div.style.cursor,h=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(t.target).cursor;const p=()=>{this._isDraggable=a,window.removeEventListener("pointerup",p),window.removeEventListener("blur",p),window.removeEventListener("pointermove",r,s),this.parent.div.style.cursor=d,this.div.style.cursor=h;const e=this.x,t=this.y,n=this.width,i=this.height;e===o&&t===l&&n===c&&i===u||this.addCommands({cmd:()=>{this.width=n,this.height=i,this.x=e,this.y=t;const[r,a]=this.parentDimensions;this.setDims(r*n,a*i),this.fixAndSetPosition()},undo:()=>{this.width=c,this.height=u,this.x=o,this.y=l;const[e,t]=this.parentDimensions;this.setDims(e*c,t*u),this.fixAndSetPosition()},mustExec:!0})};window.addEventListener("pointerup",p),window.addEventListener("blur",p)}#H(e,t){const[n,r]=this.parentDimensions,i=this.x,a=this.y,o=this.width,l=this.height,c=s.MIN_SIZE/n,u=s.MIN_SIZE/r,d=e=>Math.round(1e4*e)/1e4,h=this.#j(this.rotation),p=(e,t)=>[h[0]*e+h[2]*t,h[1]*e+h[3]*t],f=this.#j(360-this.rotation);let g,m,b=!1,v=!1;switch(e){case"topLeft":b=!0,g=(e,t)=>[0,0],m=(e,t)=>[e,t];break;case"topMiddle":g=(e,t)=>[e/2,0],m=(e,t)=>[e/2,t];break;case"topRight":b=!0,g=(e,t)=>[e,0],m=(e,t)=>[0,t];break;case"middleRight":v=!0,g=(e,t)=>[e,t/2],m=(e,t)=>[0,t/2];break;case"bottomRight":b=!0,g=(e,t)=>[e,t],m=(e,t)=>[0,0];break;case"bottomMiddle":g=(e,t)=>[e/2,t],m=(e,t)=>[e/2,0];break;case"bottomLeft":b=!0,g=(e,t)=>[0,t],m=(e,t)=>[e,0];break;case"middleLeft":v=!0,g=(e,t)=>[0,t/2],m=(e,t)=>[e,t/2]}const y=g(o,l),_=m(o,l);let A=p(..._);const w=d(i+A[0]),S=d(a+A[1]);let x=1,E=1,[k,C]=this.screenToPageTranslation(t.movementX,t.movementY);var P,T;if([k,C]=(P=k/n,T=C/r,[f[0]*P+f[2]*T,f[1]*P+f[3]*T]),b){const e=Math.hypot(o,l);x=E=Math.max(Math.min(Math.hypot(_[0]-y[0]-k,_[1]-y[1]-C)/e,1/o,1/l),c/o,u/l)}else v?x=Math.max(c,Math.min(1,Math.abs(_[0]-y[0]-k)))/o:E=Math.max(u,Math.min(1,Math.abs(_[1]-y[1]-C)))/l;const M=d(o*x),R=d(l*E);A=p(...m(M,R));const F=w-A[0],D=S-A[1];this.width=M,this.height=R,this.x=F,this.y=D,this.setDims(n*M,r*R),this.fixAndSetPosition()}async addAltTextButton(){if(this.#x)return;const e=this.#x=document.createElement("button");e.className="altText";const t=await s._l10nPromise.get("editor_alt_text_button_label");if(e.textContent=t,e.setAttribute("aria-label",t),e.tabIndex="0",e.addEventListener("contextmenu",a.noContextMenu),e.addEventListener("pointerdown",(e=>e.stopPropagation())),e.addEventListener("click",(e=>{e.preventDefault(),this._uiManager.editAltText(this)}),{capture:!0}),e.addEventListener("keydown",(t=>{t.target===e&&"Enter"===t.key&&(t.preventDefault(),this._uiManager.editAltText(this))})),this.#V(),this.div.append(e),!s.SMALL_EDITOR_SIZE){const t=40;s.SMALL_EDITOR_SIZE=Math.min(128,Math.round(e.getBoundingClientRect().width*(1+t/100)))}}async#V(){const e=this.#x;if(!e)return;if(!this.#w&&!this.#S)return e.classList.remove("done"),void this.#E?.remove();s._l10nPromise.get("editor_alt_text_edit_button_label").then((t=>{e.setAttribute("aria-label",t)}));let t=this.#E;if(!t){this.#E=t=document.createElement("span"),t.className="tooltip",t.setAttribute("role","tooltip");const n=t.id=`alt-text-tooltip-${this.id}`;e.setAttribute("aria-describedby",n);const r=100;e.addEventListener("mouseenter",(()=>{this.#k=setTimeout((()=>{this.#k=null,this.#E.classList.add("show"),this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",subtype:this.editorType,data:{action:"alt_text_tooltip"}}})}),r)})),e.addEventListener("mouseleave",(()=>{clearTimeout(this.#k),this.#k=null,this.#E?.classList.remove("show")}))}e.classList.add("done"),t.innerText=this.#S?await s._l10nPromise.get("editor_alt_text_decorative_tooltip"):this.#w,t.parentNode||e.append(t)}getClientDimensions(){return this.div.getBoundingClientRect()}get altTextData(){return{altText:this.#w,decorative:this.#S}}set altTextData({altText:e,decorative:t}){this.#w===e&&this.#S===t||(this.#w=e,this.#S=t,this.#V())}render(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.setAttribute("tabIndex",0),this.setInForeground(),this.div.addEventListener("focusin",this.#T),this.div.addEventListener("focusout",this.#M);const[e,t]=this.parentDimensions;this.parentRotation%180!=0&&(this.div.style.maxWidth=`${(100*t/e).toFixed(2)}%`,this.div.style.maxHeight=`${(100*e/t).toFixed(2)}%`);const[n,i]=this.getInitialTranslation();return this.translate(n,i),(0,r.bindEvents)(this,this.div,["pointerdown"]),this.div}pointerdown(e){const{isMac:t}=i.FeatureTest.platform;0!==e.button||e.ctrlKey&&t?e.preventDefault():(this.#R=!0,this.#W(e))}#W(e){if(!this._isDraggable)return;const t=this._uiManager.isSelected(this);let n,r;this._uiManager.setUpDragSession(),t&&(n={passive:!0,capture:!0},r=e=>{const[t,n]=this.screenToPageTranslation(e.movementX,e.movementY);this._uiManager.dragSelectedEditors(t,n)},window.addEventListener("pointermove",r,n));const a=()=>{if(window.removeEventListener("pointerup",a),window.removeEventListener("blur",a),t&&window.removeEventListener("pointermove",r,n),this.#R=!1,!this._uiManager.endDragSession()){const{isMac:t}=i.FeatureTest.platform;e.ctrlKey&&!t||e.shiftKey||e.metaKey&&t?this.parent.toggleSelected(this):this.parent.setSelected(this)}};window.addEventListener("pointerup",a),window.addEventListener("blur",a)}moveInDOM(){this.parent?.moveEditorInDOM(this)}_setParentAndPosition(e,t,n){e.changeParent(this),this.x=t,this.y=n,this.fixAndSetPosition()}getRect(e,t){const n=this.parentScale,[r,i]=this.pageDimensions,[a,s]=this.pageTranslation,o=e/n,l=t/n,c=this.x*r,u=this.y*i,d=this.width*r,h=this.height*i;switch(this.rotation){case 0:return[c+o+a,i-u-l-h+s,c+o+d+a,i-u-l+s];case 90:return[c+l+a,i-u+o+s,c+l+h+a,i-u+o+d+s];case 180:return[c-o-d+a,i-u+l+s,c-o+a,i-u+l+h+s];case 270:return[c-l-h+a,i-u-o-d+s,c-l+a,i-u-o+s];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(e,t){const[n,r,i,a]=e,s=i-n,o=a-r;switch(this.rotation){case 0:return[n,t-a,s,o];case 90:return[n,t-r,o,s];case 180:return[i,t-r,s,o];case 270:return[i,t-a,o,s];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){this.#D=!0}disableEditMode(){this.#D=!1}isInEditMode(){return this.#D}shouldGetKeyboardEvents(){return!1}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}rebuild(){this.div?.addEventListener("focusin",this.#T),this.div?.addEventListener("focusout",this.#M)}serialize(e=!1,t=null){(0,i.unreachable)("An editor must be serializable")}static deserialize(e,t,n){const r=new this.prototype.constructor({parent:t,id:t.getNextId(),uiManager:n});r.rotation=e.rotation;const[i,a]=r.pageDimensions,[s,o,l,c]=r.getRectInCurrentCoords(e.rect,a);return r.x=s/i,r.y=o/a,r.width=l/i,r.height=c/a,r}remove(){this.div.removeEventListener("focusin",this.#T),this.div.removeEventListener("focusout",this.#M),this.isEmpty()||this.commit(),this.parent?this.parent.remove(this):this._uiManager.removeEditor(this),this.#x?.remove(),this.#x=null,this.#E=null}get isResizable(){return!1}makeResizable(){this.isResizable&&(this.#U(),this.#P.classList.remove("hidden"))}select(){this.makeResizable(),this.div?.classList.add("selectedEditor")}unselect(){this.#P?.classList.add("hidden"),this.div?.classList.remove("selectedEditor"),this.div?.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus()}updateParams(e,t){}disableEditing(){this.#x&&(this.#x.hidden=!0)}enableEditing(){this.#x&&(this.#x.hidden=!1)}enterInEditMode(){}get contentDiv(){return this.div}get isEditing(){return this.#F}set isEditing(e){this.#F=e,this.parent&&(e?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null))}setAspectRatio(e,t){this.#C=!0;const n=e/t,{style:r}=this.div;r.aspectRatio=n,r.height="auto"}static get MIN_SIZE(){return 16}}t.AnnotationEditor=s;class o extends s{constructor(e){super(e),this.annotationElementId=e.annotationElementId,this.deleted=!0}serialize(){return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex}}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.KeyboardManager=t.CommandManager=t.ColorManager=t.AnnotationEditorUIManager=void 0,t.bindEvents=function(e,t,n){for(const r of n)t.addEventListener(r,e[r].bind(e))},t.opacityToHex=function(e){return Math.round(Math.min(255,Math.max(1,255*e))).toString(16).padStart(2,"0")};var r=n(1),i=n(6);class a{#q=0;getId(){return`${r.AnnotationEditorPrefix}${this.#q++}`}}class s{#$=(0,r.getUuid)();#q=0;#G=null;static get _isSVGFittingCanvas(){const e=new OffscreenCanvas(1,3).getContext("2d"),t=new Image;t.src='data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>';const n=t.decode().then((()=>(e.drawImage(t,0,0,1,1,0,0,1,3),0===new Uint32Array(e.getImageData(0,0,1,1).data.buffer)[0])));return(0,r.shadow)(this,"_isSVGFittingCanvas",n)}async#X(e,t){this.#G||=new Map;let n=this.#G.get(e);if(null===n)return null;if(n?.bitmap)return n.refCounter+=1,n;try{let e;if(n||={bitmap:null,id:`image_${this.#$}_${this.#q++}`,refCounter:0,isSvg:!1},"string"==typeof t){n.url=t;const r=await fetch(t);if(!r.ok)throw new Error(r.statusText);e=await r.blob()}else e=n.file=t;if("image/svg+xml"===e.type){const t=s._isSVGFittingCanvas,r=new FileReader,i=new Image,a=new Promise(((e,a)=>{i.onload=()=>{n.bitmap=i,n.isSvg=!0,e()},r.onload=async()=>{const e=n.svgUrl=r.result;i.src=await t?`${e}#svgView(preserveAspectRatio(none))`:e},i.onerror=r.onerror=a}));r.readAsDataURL(e),await a}else n.bitmap=await createImageBitmap(e);n.refCounter=1}catch(e){console.error(e),n=null}return this.#G.set(e,n),n&&this.#G.set(n.id,n),n}async getFromFile(e){const{lastModified:t,name:n,size:r,type:i}=e;return this.#X(`${t}_${n}_${r}_${i}`,e)}async getFromUrl(e){return this.#X(e,e)}async getFromId(e){this.#G||=new Map;const t=this.#G.get(e);return t?t.bitmap?(t.refCounter+=1,t):t.file?this.getFromFile(t.file):this.getFromUrl(t.url):null}getSvgUrl(e){const t=this.#G.get(e);return t?.isSvg?t.svgUrl:null}deleteId(e){this.#G||=new Map;const t=this.#G.get(e);t&&(t.refCounter-=1,0===t.refCounter&&(t.bitmap=null))}isValidId(e){return e.startsWith(`image_${this.#$}_`)}}class o{#K=[];#Y=!1;#Q;#J=-1;constructor(e=128){this.#Q=e}add({cmd:e,undo:t,mustExec:n,type:r=NaN,overwriteIfSameType:i=!1,keepUndo:a=!1}){if(n&&e(),this.#Y)return;const s={cmd:e,undo:t,type:r};if(-1===this.#J)return this.#K.length>0&&(this.#K.length=0),this.#J=0,void this.#K.push(s);if(i&&this.#K[this.#J].type===r)return a&&(s.undo=this.#K[this.#J].undo),void(this.#K[this.#J]=s);const o=this.#J+1;o===this.#Q?this.#K.splice(0,1):(this.#J=o,o<this.#K.length&&this.#K.splice(o)),this.#K.push(s)}undo(){-1!==this.#J&&(this.#Y=!0,this.#K[this.#J].undo(),this.#Y=!1,this.#J-=1)}redo(){this.#J<this.#K.length-1&&(this.#J+=1,this.#Y=!0,this.#K[this.#J].cmd(),this.#Y=!1)}hasSomethingToUndo(){return-1!==this.#J}hasSomethingToRedo(){return this.#J<this.#K.length-1}destroy(){this.#K=null}}t.CommandManager=o;class l{constructor(e){this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:t}=r.FeatureTest.platform;for(const[n,r,i={}]of e)for(const e of n){const n=e.startsWith("mac+");t&&n?(this.callbacks.set(e.slice(4),{callback:r,options:i}),this.allKeys.add(e.split("+").at(-1))):t||n||(this.callbacks.set(e,{callback:r,options:i}),this.allKeys.add(e.split("+").at(-1)))}}#Z(e){e.altKey&&this.buffer.push("alt"),e.ctrlKey&&this.buffer.push("ctrl"),e.metaKey&&this.buffer.push("meta"),e.shiftKey&&this.buffer.push("shift"),this.buffer.push(e.key);const t=this.buffer.join("+");return this.buffer.length=0,t}exec(e,t){if(!this.allKeys.has(t.key))return;const n=this.callbacks.get(this.#Z(t));if(!n)return;const{callback:r,options:{bubbles:i=!1,args:a=[],checker:s=null}}=n;s&&!s(e,t)||(r.bind(e,...a)(),i||(t.stopPropagation(),t.preventDefault()))}}t.KeyboardManager=l;class c{static _colorsMapping=new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]);get _colors(){const e=new Map([["CanvasText",null],["Canvas",null]]);return(0,i.getColorValues)(e),(0,r.shadow)(this,"_colors",e)}convert(e){const t=(0,i.getRGB)(e);if(!window.matchMedia("(forced-colors: active)").matches)return t;for(const[e,n]of this._colors)if(n.every(((e,n)=>e===t[n])))return c._colorsMapping.get(e);return t}getHexCode(e){const t=this._colors.get(e);return t?r.Util.makeHexColor(...t):e}}t.ColorManager=c;class u{#ee=null;#te=new Map;#ne=new Map;#re=null;#ie=null;#ae=new o;#se=0;#oe=new Set;#le=null;#ce=null;#ue=new Set;#de=null;#he=new a;#pe=!1;#fe=!1;#ge=null;#me=r.AnnotationEditorType.NONE;#be=new Set;#ve=null;#ye=this.blur.bind(this);#_e=this.focus.bind(this);#Ae=this.copy.bind(this);#we=this.cut.bind(this);#Se=this.paste.bind(this);#xe=this.keydown.bind(this);#Ee=this.onEditingAction.bind(this);#ke=this.onPageChanging.bind(this);#Ce=this.onScaleChanging.bind(this);#Pe=this.onRotationChanging.bind(this);#Te={isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1};#Me=[0,0];#Re=null;#Fe=null;#De=null;static TRANSLATE_SMALL=1;static TRANSLATE_BIG=10;static get _keyboardManager(){const e=u.prototype,t=e=>{const{activeElement:t}=document;return t&&e.#Fe.contains(t)&&e.hasSomethingToControl()},n=this.TRANSLATE_SMALL,i=this.TRANSLATE_BIG;return(0,r.shadow)(this,"_keyboardManager",new l([[["ctrl+a","mac+meta+a"],e.selectAll],[["ctrl+z","mac+meta+z"],e.undo],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],e.redo],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],e.delete],[["Escape","mac+Escape"],e.unselectAll],[["ArrowLeft","mac+ArrowLeft"],e.translateSelectedEditors,{args:[-n,0],checker:t}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],e.translateSelectedEditors,{args:[-i,0],checker:t}],[["ArrowRight","mac+ArrowRight"],e.translateSelectedEditors,{args:[n,0],checker:t}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],e.translateSelectedEditors,{args:[i,0],checker:t}],[["ArrowUp","mac+ArrowUp"],e.translateSelectedEditors,{args:[0,-n],checker:t}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],e.translateSelectedEditors,{args:[0,-i],checker:t}],[["ArrowDown","mac+ArrowDown"],e.translateSelectedEditors,{args:[0,n],checker:t}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],e.translateSelectedEditors,{args:[0,i],checker:t}]]))}constructor(e,t,n,r,a,s){this.#Fe=e,this.#De=t,this.#re=n,this._eventBus=r,this._eventBus._on("editingaction",this.#Ee),this._eventBus._on("pagechanging",this.#ke),this._eventBus._on("scalechanging",this.#Ce),this._eventBus._on("rotationchanging",this.#Pe),this.#ie=a.annotationStorage,this.#de=a.filterFactory,this.#ve=s,this.viewParameters={realScale:i.PixelsPerInch.PDF_TO_CSS_UNITS,rotation:0}}destroy(){this.#Ie(),this.#Le(),this._eventBus._off("editingaction",this.#Ee),this._eventBus._off("pagechanging",this.#ke),this._eventBus._off("scalechanging",this.#Ce),this._eventBus._off("rotationchanging",this.#Pe);for(const e of this.#ne.values())e.destroy();this.#ne.clear(),this.#te.clear(),this.#ue.clear(),this.#ee=null,this.#be.clear(),this.#ae.destroy(),this.#re.destroy()}get hcmFilter(){return(0,r.shadow)(this,"hcmFilter",this.#ve?this.#de.addHCMFilter(this.#ve.foreground,this.#ve.background):"none")}get direction(){return(0,r.shadow)(this,"direction",getComputedStyle(this.#Fe).direction)}editAltText(e){this.#re?.editAltText(this,e)}onPageChanging({pageNumber:e}){this.#se=e-1}focusMainContainer(){this.#Fe.focus()}findParent(e,t){for(const n of this.#ne.values()){const{x:r,y:i,width:a,height:s}=n.div.getBoundingClientRect();if(e>=r&&e<=r+a&&t>=i&&t<=i+s)return n}return null}disableUserSelect(e=!1){this.#De.classList.toggle("noUserSelect",e)}addShouldRescale(e){this.#ue.add(e)}removeShouldRescale(e){this.#ue.delete(e)}onScaleChanging({scale:e}){this.commitOrRemove(),this.viewParameters.realScale=e*i.PixelsPerInch.PDF_TO_CSS_UNITS;for(const e of this.#ue)e.onScaleChanging()}onRotationChanging({pagesRotation:e}){this.commitOrRemove(),this.viewParameters.rotation=e}addToAnnotationStorage(e){e.isEmpty()||!this.#ie||this.#ie.has(e.id)||this.#ie.setValue(e.id,e)}#Oe(){window.addEventListener("focus",this.#_e),window.addEventListener("blur",this.#ye)}#Le(){window.removeEventListener("focus",this.#_e),window.removeEventListener("blur",this.#ye)}blur(){if(!this.hasSelection)return;const{activeElement:e}=document;for(const t of this.#be)if(t.div.contains(e)){this.#ge=[t,e],t._focusEventsAllowed=!1;break}}focus(){if(!this.#ge)return;const[e,t]=this.#ge;this.#ge=null,t.addEventListener("focusin",(()=>{e._focusEventsAllowed=!0}),{once:!0}),t.focus()}#Ne(){window.addEventListener("keydown",this.#xe,{capture:!0})}#Ie(){window.removeEventListener("keydown",this.#xe,{capture:!0})}#ze(){document.addEventListener("copy",this.#Ae),document.addEventListener("cut",this.#we),document.addEventListener("paste",this.#Se)}#je(){document.removeEventListener("copy",this.#Ae),document.removeEventListener("cut",this.#we),document.removeEventListener("paste",this.#Se)}addEditListeners(){this.#Ne(),this.#ze()}removeEditListeners(){this.#Ie(),this.#je()}copy(e){if(e.preventDefault(),this.#ee?.commitOrRemove(),!this.hasSelection)return;const t=[];for(const e of this.#be){const n=e.serialize(!0);n&&t.push(n)}0!==t.length&&e.clipboardData.setData("application/pdfjs",JSON.stringify(t))}cut(e){this.copy(e),this.delete()}paste(e){e.preventDefault();const{clipboardData:t}=e;for(const e of t.items)for(const t of this.#ce)if(t.isHandlingMimeForPasting(e.type))return void t.paste(e,this.currentLayer);let n=t.getData("application/pdfjs");if(!n)return;try{n=JSON.parse(n)}catch(e){return void(0,r.warn)(`paste: "${e.message}".`)}if(!Array.isArray(n))return;this.unselectAll();const i=this.currentLayer;try{const e=[];for(const t of n){const n=i.deserialize(t);if(!n)return;e.push(n)}const t=()=>{for(const t of e)this.#Ue(t);this.#Be(e)},r=()=>{for(const t of e)t.remove()};this.addCommands({cmd:t,undo:r,mustExec:!0})}catch(e){(0,r.warn)(`paste: "${e.message}".`)}}keydown(e){this.getActive()?.shouldGetKeyboardEvents()||u._keyboardManager.exec(this,e)}onEditingAction(e){["undo","redo","delete","selectAll"].includes(e.name)&&this[e.name]()}#He(e){Object.entries(e).some((([e,t])=>this.#Te[e]!==t))&&this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(this.#Te,e)})}#Ve(e){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:e})}setEditingState(e){e?(this.#Oe(),this.#Ne(),this.#ze(),this.#He({isEditing:this.#me!==r.AnnotationEditorType.NONE,isEmpty:this.#We(),hasSomethingToUndo:this.#ae.hasSomethingToUndo(),hasSomethingToRedo:this.#ae.hasSomethingToRedo(),hasSelectedEditor:!1})):(this.#Le(),this.#Ie(),this.#je(),this.#He({isEditing:!1}),this.disableUserSelect(!1))}registerEditorTypes(e){if(!this.#ce){this.#ce=e;for(const e of this.#ce)this.#Ve(e.defaultPropertiesToUpdate)}}getId(){return this.#he.getId()}get currentLayer(){return this.#ne.get(this.#se)}getLayer(e){return this.#ne.get(e)}get currentPageIndex(){return this.#se}addLayer(e){this.#ne.set(e.pageIndex,e),this.#pe?e.enable():e.disable()}removeLayer(e){this.#ne.delete(e.pageIndex)}updateMode(e,t=null){if(this.#me!==e){if(this.#me=e,e===r.AnnotationEditorType.NONE)return this.setEditingState(!1),void this.#qe();this.setEditingState(!0),this.#$e(),this.unselectAll();for(const t of this.#ne.values())t.updateMode(e);if(t)for(const e of this.#te.values())if(e.annotationElementId===t){this.setSelected(e),e.enterInEditMode();break}}}updateToolbar(e){e!==this.#me&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:e})}updateParams(e,t){if(this.#ce)if(e!==r.AnnotationEditorParamsType.CREATE){for(const n of this.#be)n.updateParams(e,t);for(const n of this.#ce)n.updateDefaultParams(e,t)}else this.currentLayer.addNewEditor(e)}enableWaiting(e=!1){if(this.#fe!==e){this.#fe=e;for(const t of this.#ne.values())e?t.disableClick():t.enableClick(),t.div.classList.toggle("waiting",e)}}#$e(){if(!this.#pe){this.#pe=!0;for(const e of this.#ne.values())e.enable()}}#qe(){if(this.unselectAll(),this.#pe){this.#pe=!1;for(const e of this.#ne.values())e.disable()}}getEditors(e){const t=[];for(const n of this.#te.values())n.pageIndex===e&&t.push(n);return t}getEditor(e){return this.#te.get(e)}addEditor(e){this.#te.set(e.id,e)}removeEditor(e){this.#te.delete(e.id),this.unselect(e),e.annotationElementId&&this.#oe.has(e.annotationElementId)||this.#ie?.remove(e.id)}addDeletedAnnotationElement(e){this.#oe.add(e.annotationElementId),e.deleted=!0}isDeletedAnnotationElement(e){return this.#oe.has(e)}removeDeletedAnnotationElement(e){this.#oe.delete(e.annotationElementId),e.deleted=!1}#Ue(e){const t=this.#ne.get(e.pageIndex);t?t.addOrRebuild(e):this.addEditor(e)}setActiveEditor(e){this.#ee!==e&&(this.#ee=e,e&&this.#Ve(e.propertiesToUpdate))}toggleSelected(e){if(this.#be.has(e))return this.#be.delete(e),e.unselect(),void this.#He({hasSelectedEditor:this.hasSelection});this.#be.add(e),e.select(),this.#Ve(e.propertiesToUpdate),this.#He({hasSelectedEditor:!0})}setSelected(e){for(const t of this.#be)t!==e&&t.unselect();this.#be.clear(),this.#be.add(e),e.select(),this.#Ve(e.propertiesToUpdate),this.#He({hasSelectedEditor:!0})}isSelected(e){return this.#be.has(e)}unselect(e){e.unselect(),this.#be.delete(e),this.#He({hasSelectedEditor:this.hasSelection})}get hasSelection(){return 0!==this.#be.size}undo(){this.#ae.undo(),this.#He({hasSomethingToUndo:this.#ae.hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:this.#We()})}redo(){this.#ae.redo(),this.#He({hasSomethingToUndo:!0,hasSomethingToRedo:this.#ae.hasSomethingToRedo(),isEmpty:this.#We()})}addCommands(e){this.#ae.add(e),this.#He({hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:this.#We()})}#We(){if(0===this.#te.size)return!0;if(1===this.#te.size)for(const e of this.#te.values())return e.isEmpty();return!1}delete(){if(this.commitOrRemove(),!this.hasSelection)return;const e=[...this.#be];this.addCommands({cmd:()=>{for(const t of e)t.remove()},undo:()=>{for(const t of e)this.#Ue(t)},mustExec:!0})}commitOrRemove(){this.#ee?.commitOrRemove()}hasSomethingToControl(){return this.#ee||this.hasSelection}#Be(e){this.#be.clear();for(const t of e)t.isEmpty()||(this.#be.add(t),t.select());this.#He({hasSelectedEditor:!0})}selectAll(){for(const e of this.#be)e.commit();this.#Be(this.#te.values())}unselectAll(){if(this.#ee)this.#ee.commitOrRemove();else if(this.hasSelection){for(const e of this.#be)e.unselect();this.#be.clear(),this.#He({hasSelectedEditor:!1})}}translateSelectedEditors(e,t,n=!1){if(n||this.commitOrRemove(),!this.hasSelection)return;this.#Me[0]+=e,this.#Me[1]+=t;const[r,i]=this.#Me,a=[...this.#be];this.#Re&&clearTimeout(this.#Re),this.#Re=setTimeout((()=>{this.#Re=null,this.#Me[0]=this.#Me[1]=0,this.addCommands({cmd:()=>{for(const e of a)this.#te.has(e.id)&&e.translateInPage(r,i)},undo:()=>{for(const e of a)this.#te.has(e.id)&&e.translateInPage(-r,-i)},mustExec:!1})}),1e3);for(const n of a)n.translateInPage(e,t)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0),this.#le=new Map;for(const e of this.#be)this.#le.set(e,{savedX:e.x,savedY:e.y,savedPageIndex:e.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!this.#le)return!1;this.disableUserSelect(!1);const e=this.#le;this.#le=null;let t=!1;for(const[{x:n,y:r,pageIndex:i},a]of e)a.newX=n,a.newY=r,a.newPageIndex=i,t||=n!==a.savedX||r!==a.savedY||i!==a.savedPageIndex;if(!t)return!1;const n=(e,t,n,r)=>{if(this.#te.has(e.id)){const i=this.#ne.get(r);i?e._setParentAndPosition(i,t,n):(e.pageIndex=r,e.x=t,e.y=n)}};return this.addCommands({cmd:()=>{for(const[t,{newX:r,newY:i,newPageIndex:a}]of e)n(t,r,i,a)},undo:()=>{for(const[t,{savedX:r,savedY:i,savedPageIndex:a}]of e)n(t,r,i,a)},mustExec:!0}),!0}dragSelectedEditors(e,t){if(this.#le)for(const n of this.#le.keys())n.drag(e,t)}rebuild(e){if(null===e.parent){const t=this.getLayer(e.pageIndex);t?(t.changeParent(e),t.addOrRebuild(e)):(this.addEditor(e),this.addToAnnotationStorage(e),e.rebuild())}else e.parent.addOrRebuild(e)}isActive(e){return this.#ee===e}getActive(){return this.#ee}getMode(){return this.#me}get imageManager(){return(0,r.shadow)(this,"imageManager",new s)}}t.AnnotationEditorUIManager=u},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StatTimer=t.RenderingCancelledException=t.PixelsPerInch=t.PageViewport=t.PDFDateString=t.DOMStandardFontDataFactory=t.DOMSVGFactory=t.DOMFilterFactory=t.DOMCanvasFactory=t.DOMCMapReaderFactory=void 0,t.deprecated=function(e){console.log("Deprecated API usage: "+e)},t.getColorValues=function(e){const t=document.createElement("span");t.style.visibility="hidden",document.body.append(t);for(const n of e.keys()){t.style.color=n;const r=window.getComputedStyle(t).color;e.set(n,v(r))}t.remove()},t.getCurrentTransform=function(e){const{a:t,b:n,c:r,d:i,e:a,f:s}=e.getTransform();return[t,n,r,i,a,s]},t.getCurrentTransformInverse=function(e){const{a:t,b:n,c:r,d:i,e:a,f:s}=e.getTransform().invertSelf();return[t,n,r,i,a,s]},t.getFilenameFromUrl=function(e,t=!1){return t||([e]=e.split(/[#?]/,1)),e.substring(e.lastIndexOf("/")+1)},t.getPdfFilenameFromUrl=function(e,t="document.pdf"){if("string"!=typeof e)return t;if(g(e))return(0,i.warn)('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),t;const n=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,r=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/.exec(e);let a=n.exec(r[1])||n.exec(r[2])||n.exec(r[3]);if(a&&(a=a[0],a.includes("%")))try{a=n.exec(decodeURIComponent(a))[0]}catch{}return a||t},t.getRGB=v,t.getXfaPageViewport=function(e,{scale:t=1,rotation:n=0}){const{width:r,height:i}=e.attributes.style,a=[0,0,parseInt(r),parseInt(i)];return new p({viewBox:a,scale:t,rotation:n})},t.isDataScheme=g,t.isPdfFile=function(e){return"string"==typeof e&&/\.pdf$/i.test(e)},t.isValidFetchUrl=m,t.loadScript=function(e,t=!1){return new Promise(((n,r)=>{const i=document.createElement("script");i.src=e,i.onload=function(e){t&&i.remove(),n(e)},i.onerror=function(){r(new Error(`Cannot load script at: ${i.src}`))},(document.head||document.documentElement).append(i)}))},t.noContextMenu=function(e){e.preventDefault()},t.setLayerDimensions=function(e,t,n=!1,r=!0){if(t instanceof p){const{pageWidth:r,pageHeight:a}=t.rawDims,{style:s}=e,o=i.FeatureTest.isCSSRoundSupported,l=`var(--scale-factor) * ${r}px`,c=`var(--scale-factor) * ${a}px`,u=o?`round(${l}, 1px)`:`calc(${l})`,d=o?`round(${c}, 1px)`:`calc(${c})`;n&&t.rotation%180!=0?(s.width=d,s.height=u):(s.width=u,s.height=d)}r&&e.setAttribute("data-main-rotation",t.rotation)};var r=n(7),i=n(1);const a="http://www.w3.org/2000/svg";class s{static CSS=96;static PDF=72;static PDF_TO_CSS_UNITS=this.CSS/this.PDF}t.PixelsPerInch=s;class o extends r.BaseFilterFactory{#Ge;#Xe;#t;#Ke;#Ye;#Qe;#Je;#Ze;#et;#tt;#q=0;constructor({docId:e,ownerDocument:t=globalThis.document}={}){super(),this.#t=e,this.#Ke=t}get#G(){return this.#Ge||=new Map}get#nt(){if(!this.#Xe){const e=this.#Ke.createElement("div"),{style:t}=e;t.visibility="hidden",t.contain="strict",t.width=t.height=0,t.position="absolute",t.top=t.left=0,t.zIndex=-1;const n=this.#Ke.createElementNS(a,"svg");n.setAttribute("width",0),n.setAttribute("height",0),this.#Xe=this.#Ke.createElementNS(a,"defs"),e.append(n),n.append(this.#Xe),this.#Ke.body.append(e)}return this.#Xe}addFilter(e){if(!e)return"none";let t,n,r,i,a=this.#G.get(e);if(a)return a;if(1===e.length){const a=e[0],s=new Array(256);for(let e=0;e<256;e++)s[e]=a[e]/255;i=t=n=r=s.join(",")}else{const[a,s,o]=e,l=new Array(256),c=new Array(256),u=new Array(256);for(let e=0;e<256;e++)l[e]=a[e]/255,c[e]=s[e]/255,u[e]=o[e]/255;t=l.join(","),n=c.join(","),r=u.join(","),i=`${t}${n}${r}`}if(a=this.#G.get(i),a)return this.#G.set(e,a),a;const s=`g_${this.#t}_transfer_map_${this.#q++}`,o=`url(#${s})`;this.#G.set(e,o),this.#G.set(i,o);const l=this.#rt(s);return this.#it(t,n,r,l),o}addHCMFilter(e,t){const n=`${e}-${t}`;if(this.#Qe===n)return this.#Je;if(this.#Qe=n,this.#Je="none",this.#Ye?.remove(),!e||!t)return this.#Je;const r=this.#at(e);e=i.Util.makeHexColor(...r);const a=this.#at(t);if(t=i.Util.makeHexColor(...a),this.#nt.style.color="","#000000"===e&&"#ffffff"===t||e===t)return this.#Je;const s=new Array(256);for(let e=0;e<=255;e++){const t=e/255;s[e]=t<=.03928?t/12.92:((t+.055)/1.055)**2.4}const o=s.join(","),l=`g_${this.#t}_hcm_filter`,c=this.#Ze=this.#rt(l);this.#it(o,o,o,c),this.#st(c);const u=(e,t)=>{const n=r[e]/255,i=a[e]/255,s=new Array(t+1);for(let e=0;e<=t;e++)s[e]=n+e/t*(i-n);return s.join(",")};return this.#it(u(0,5),u(1,5),u(2,5),c),this.#Je=`url(#${l})`,this.#Je}addHighlightHCMFilter(e,t,n,r){const i=`${e}-${t}-${n}-${r}`;if(this.#et===i)return this.#tt;if(this.#et=i,this.#tt="none",this.#Ze?.remove(),!e||!t)return this.#tt;const[a,s]=[e,t].map(this.#at.bind(this));let o=Math.round(.2126*a[0]+.7152*a[1]+.0722*a[2]),l=Math.round(.2126*s[0]+.7152*s[1]+.0722*s[2]),[c,u]=[n,r].map(this.#at.bind(this));l<o&&([o,l,c,u]=[l,o,u,c]),this.#nt.style.color="";const d=(e,t,n)=>{const r=new Array(256),i=(l-o)/n,a=e/255,s=(t-e)/(255*n);let c=0;for(let e=0;e<=n;e++){const t=Math.round(o+e*i),n=a+e*s;for(let e=c;e<=t;e++)r[e]=n;c=t+1}for(let e=c;e<256;e++)r[e]=r[c-1];return r.join(",")},h=`g_${this.#t}_hcm_highlight_filter`,p=this.#Ze=this.#rt(h);return this.#st(p),this.#it(d(c[0],u[0],5),d(c[1],u[1],5),d(c[2],u[2],5),p),this.#tt=`url(#${h})`,this.#tt}destroy(e=!1){e&&(this.#Je||this.#tt)||(this.#Xe&&(this.#Xe.parentNode.parentNode.remove(),this.#Xe=null),this.#Ge&&(this.#Ge.clear(),this.#Ge=null),this.#q=0)}#st(e){const t=this.#Ke.createElementNS(a,"feColorMatrix");t.setAttribute("type","matrix"),t.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),e.append(t)}#rt(e){const t=this.#Ke.createElementNS(a,"filter");return t.setAttribute("color-interpolation-filters","sRGB"),t.setAttribute("id",e),this.#nt.append(t),t}#ot(e,t,n){const r=this.#Ke.createElementNS(a,t);r.setAttribute("type","discrete"),r.setAttribute("tableValues",n),e.append(r)}#it(e,t,n,r){const i=this.#Ke.createElementNS(a,"feComponentTransfer");r.append(i),this.#ot(i,"feFuncR",e),this.#ot(i,"feFuncG",t),this.#ot(i,"feFuncB",n)}#at(e){return this.#nt.style.color=e,v(getComputedStyle(this.#nt).getPropertyValue("color"))}}t.DOMFilterFactory=o;class l extends r.BaseCanvasFactory{constructor({ownerDocument:e=globalThis.document}={}){super(),this._document=e}_createCanvas(e,t){const n=this._document.createElement("canvas");return n.width=e,n.height=t,n}}async function c(e,t=!1){if(m(e,document.baseURI)){const n=await fetch(e);if(!n.ok)throw new Error(n.statusText);return t?new Uint8Array(await n.arrayBuffer()):(0,i.stringToBytes)(await n.text())}return new Promise(((n,r)=>{const a=new XMLHttpRequest;a.open("GET",e,!0),t&&(a.responseType="arraybuffer"),a.onreadystatechange=()=>{if(a.readyState===XMLHttpRequest.DONE){if(200===a.status||0===a.status){let e;if(t&&a.response?e=new Uint8Array(a.response):!t&&a.responseText&&(e=(0,i.stringToBytes)(a.responseText)),e)return void n(e)}r(new Error(a.statusText))}},a.send(null)}))}t.DOMCanvasFactory=l;class u extends r.BaseCMapReaderFactory{_fetchData(e,t){return c(e,this.isCompressed).then((e=>({cMapData:e,compressionType:t})))}}t.DOMCMapReaderFactory=u;class d extends r.BaseStandardFontDataFactory{_fetchData(e){return c(e,!0)}}t.DOMStandardFontDataFactory=d;class h extends r.BaseSVGFactory{_createSVG(e){return document.createElementNS(a,e)}}t.DOMSVGFactory=h;class p{constructor({viewBox:e,scale:t,rotation:n,offsetX:r=0,offsetY:i=0,dontFlip:a=!1}){this.viewBox=e,this.scale=t,this.rotation=n,this.offsetX=r,this.offsetY=i;const s=(e[2]+e[0])/2,o=(e[3]+e[1])/2;let l,c,u,d,h,p,f,g;switch((n%=360)<0&&(n+=360),n){case 180:l=-1,c=0,u=0,d=1;break;case 90:l=0,c=1,u=1,d=0;break;case 270:l=0,c=-1,u=-1,d=0;break;case 0:l=1,c=0,u=0,d=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}a&&(u=-u,d=-d),0===l?(h=Math.abs(o-e[1])*t+r,p=Math.abs(s-e[0])*t+i,f=(e[3]-e[1])*t,g=(e[2]-e[0])*t):(h=Math.abs(s-e[0])*t+r,p=Math.abs(o-e[1])*t+i,f=(e[2]-e[0])*t,g=(e[3]-e[1])*t),this.transform=[l*t,c*t,u*t,d*t,h-l*t*s-u*t*o,p-c*t*s-d*t*o],this.width=f,this.height=g}get rawDims(){const{viewBox:e}=this;return(0,i.shadow)(this,"rawDims",{pageWidth:e[2]-e[0],pageHeight:e[3]-e[1],pageX:e[0],pageY:e[1]})}clone({scale:e=this.scale,rotation:t=this.rotation,offsetX:n=this.offsetX,offsetY:r=this.offsetY,dontFlip:i=!1}={}){return new p({viewBox:this.viewBox.slice(),scale:e,rotation:t,offsetX:n,offsetY:r,dontFlip:i})}convertToViewportPoint(e,t){return i.Util.applyTransform([e,t],this.transform)}convertToViewportRectangle(e){const t=i.Util.applyTransform([e[0],e[1]],this.transform),n=i.Util.applyTransform([e[2],e[3]],this.transform);return[t[0],t[1],n[0],n[1]]}convertToPdfPoint(e,t){return i.Util.applyInverseTransform([e,t],this.transform)}}t.PageViewport=p;class f extends i.BaseException{constructor(e,t=0){super(e,"RenderingCancelledException"),this.extraDelay=t}}function g(e){const t=e.length;let n=0;for(;n<t&&""===e[n].trim();)n++;return"data:"===e.substring(n,n+5).toLowerCase()}function m(e,t){try{const{protocol:n}=t?new URL(e,t):new URL(e);return"http:"===n||"https:"===n}catch{return!1}}let b;function v(e){if(e.startsWith("#")){const t=parseInt(e.slice(1),16);return[(16711680&t)>>16,(65280&t)>>8,255&t]}return e.startsWith("rgb(")?e.slice(4,-1).split(",").map((e=>parseInt(e))):e.startsWith("rgba(")?e.slice(5,-1).split(",").map((e=>parseInt(e))).slice(0,3):((0,i.warn)(`Not a valid color format: "${e}"`),[0,0,0])}t.RenderingCancelledException=f,t.StatTimer=class{started=Object.create(null);times=[];time(e){e in this.started&&(0,i.warn)(`Timer is already running for ${e}`),this.started[e]=Date.now()}timeEnd(e){e in this.started||(0,i.warn)(`Timer has not been started for ${e}`),this.times.push({name:e,start:this.started[e],end:Date.now()}),delete this.started[e]}toString(){const e=[];let t=0;for(const{name:e}of this.times)t=Math.max(e.length,t);for(const{name:n,start:r,end:i}of this.times)e.push(`${n.padEnd(t)} ${i-r}ms\n`);return e.join("")}},t.PDFDateString=class{static toDateObject(e){if(!e||"string"!=typeof e)return null;b||=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?");const t=b.exec(e);if(!t)return null;const n=parseInt(t[1],10);let r=parseInt(t[2],10);r=r>=1&&r<=12?r-1:0;let i=parseInt(t[3],10);i=i>=1&&i<=31?i:1;let a=parseInt(t[4],10);a=a>=0&&a<=23?a:0;let s=parseInt(t[5],10);s=s>=0&&s<=59?s:0;let o=parseInt(t[6],10);o=o>=0&&o<=59?o:0;const l=t[7]||"Z";let c=parseInt(t[8],10);c=c>=0&&c<=23?c:0;let u=parseInt(t[9],10)||0;return u=u>=0&&u<=59?u:0,"-"===l?(a+=c,s+=u):"+"===l&&(a-=c,s-=u),new Date(Date.UTC(n,r,i,a,s,o))}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BaseStandardFontDataFactory=t.BaseSVGFactory=t.BaseFilterFactory=t.BaseCanvasFactory=t.BaseCMapReaderFactory=void 0;var r=n(1);class i{constructor(){this.constructor===i&&(0,r.unreachable)("Cannot initialize BaseFilterFactory.")}addFilter(e){return"none"}addHCMFilter(e,t){return"none"}addHighlightHCMFilter(e,t,n,r){return"none"}destroy(e=!1){}}t.BaseFilterFactory=i;class a{constructor(){this.constructor===a&&(0,r.unreachable)("Cannot initialize BaseCanvasFactory.")}create(e,t){if(e<=0||t<=0)throw new Error("Invalid canvas size");const n=this._createCanvas(e,t);return{canvas:n,context:n.getContext("2d")}}reset(e,t,n){if(!e.canvas)throw new Error("Canvas is not specified");if(t<=0||n<=0)throw new Error("Invalid canvas size");e.canvas.width=t,e.canvas.height=n}destroy(e){if(!e.canvas)throw new Error("Canvas is not specified");e.canvas.width=0,e.canvas.height=0,e.canvas=null,e.context=null}_createCanvas(e,t){(0,r.unreachable)("Abstract method `_createCanvas` called.")}}t.BaseCanvasFactory=a;class s{constructor({baseUrl:e=null,isCompressed:t=!0}){this.constructor===s&&(0,r.unreachable)("Cannot initialize BaseCMapReaderFactory."),this.baseUrl=e,this.isCompressed=t}async fetch({name:e}){if(!this.baseUrl)throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');if(!e)throw new Error("CMap name must be specified.");const t=this.baseUrl+e+(this.isCompressed?".bcmap":""),n=this.isCompressed?r.CMapCompressionType.BINARY:r.CMapCompressionType.NONE;return this._fetchData(t,n).catch((e=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${t}`)}))}_fetchData(e,t){(0,r.unreachable)("Abstract method `_fetchData` called.")}}t.BaseCMapReaderFactory=s;class o{constructor({baseUrl:e=null}){this.constructor===o&&(0,r.unreachable)("Cannot initialize BaseStandardFontDataFactory."),this.baseUrl=e}async fetch({filename:e}){if(!this.baseUrl)throw new Error('The standard font "baseUrl" parameter must be specified, ensure that the "standardFontDataUrl" API parameter is provided.');if(!e)throw new Error("Font filename must be specified.");const t=`${this.baseUrl}${e}`;return this._fetchData(t).catch((e=>{throw new Error(`Unable to load font data at: ${t}`)}))}_fetchData(e){(0,r.unreachable)("Abstract method `_fetchData` called.")}}t.BaseStandardFontDataFactory=o;class l{constructor(){this.constructor===l&&(0,r.unreachable)("Cannot initialize BaseSVGFactory.")}create(e,t,n=!1){if(e<=0||t<=0)throw new Error("Invalid SVG dimensions");const r=this._createSVG("svg:svg");return r.setAttribute("version","1.1"),n||(r.setAttribute("width",`${e}px`),r.setAttribute("height",`${t}px`)),r.setAttribute("preserveAspectRatio","none"),r.setAttribute("viewBox",`0 0 ${e} ${t}`),r}createElement(e){if("string"!=typeof e)throw new Error("Invalid SVG element type");return this._createSVG(e)}_createSVG(e){(0,r.unreachable)("Abstract method `_createSVG` called.")}}t.BaseSVGFactory=l},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MurmurHash3_64=void 0;var r=n(1);const i=3285377520,a=4294901760,s=65535;t.MurmurHash3_64=class{constructor(e){this.h1=e?4294967295&e:i,this.h2=e?4294967295&e:i}update(e){let t,n;if("string"==typeof e){t=new Uint8Array(2*e.length),n=0;for(let r=0,i=e.length;r<i;r++){const i=e.charCodeAt(r);i<=255?t[n++]=i:(t[n++]=i>>>8,t[n++]=255&i)}}else{if(!(0,r.isArrayBuffer)(e))throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");t=e.slice(),n=t.byteLength}const i=n>>2,o=n-4*i,l=new Uint32Array(t.buffer,0,i);let c=0,u=0,d=this.h1,h=this.h2;const p=3432918353,f=461845907,g=11601,m=13715;for(let e=0;e<i;e++)1&e?(c=l[e],c=c*p&a|c*g&s,c=c<<15|c>>>17,c=c*f&a|c*m&s,d^=c,d=d<<13|d>>>19,d=5*d+3864292196):(u=l[e],u=u*p&a|u*g&s,u=u<<15|u>>>17,u=u*f&a|u*m&s,h^=u,h=h<<13|h>>>19,h=5*h+3864292196);switch(c=0,o){case 3:c^=t[4*i+2]<<16;case 2:c^=t[4*i+1]<<8;case 1:c^=t[4*i],c=c*p&a|c*g&s,c=c<<15|c>>>17,c=c*f&a|c*m&s,1&i?d^=c:h^=c}this.h1=d,this.h2=h}hexdigest(){let e=this.h1,t=this.h2;return e^=t>>>1,e=3981806797*e&a|36045*e&s,t=4283543511*t&a|(2950163797*(t<<16|e>>>16)&a)>>>16,e^=t>>>1,e=444984403*e&a|60499*e&s,t=3301882366*t&a|(3120437893*(t<<16|e>>>16)&a)>>>16,e^=t>>>1,(e>>>0).toString(16).padStart(8,"0")+(t>>>0).toString(16).padStart(8,"0")}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FontLoader=t.FontFaceObject=void 0;var r=n(1);t.FontLoader=class{#lt=new Set;constructor({ownerDocument:e=globalThis.document,styleElement:t=null}){this._document=e,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(e){this.nativeFontFaces.add(e),this._document.fonts.add(e)}removeNativeFontFace(e){this.nativeFontFaces.delete(e),this._document.fonts.delete(e)}insertRule(e){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const t=this.styleElement.sheet;t.insertRule(e,t.cssRules.length)}clear(){for(const e of this.nativeFontFaces)this._document.fonts.delete(e);this.nativeFontFaces.clear(),this.#lt.clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont(e){if(e&&!this.#lt.has(e.loadedName))if((0,r.assert)(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:t,src:n,style:i}=e,a=new FontFace(t,n,i);this.addNativeFontFace(a);try{await a.load(),this.#lt.add(t)}catch{(0,r.warn)(`Cannot load system font: ${e.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(a)}}else(0,r.unreachable)("Not implemented: loadSystemFont without the Font Loading API.")}async bind(e){if(e.attached||e.missingFile&&!e.systemFontInfo)return;if(e.attached=!0,e.systemFontInfo)return void await this.loadSystemFont(e.systemFontInfo);if(this.isFontLoadingAPISupported){const t=e.createNativeFontFace();if(t){this.addNativeFontFace(t);try{await t.loaded}catch(n){throw(0,r.warn)(`Failed to load font '${t.family}': '${n}'.`),e.disableFontFace=!0,n}}return}const t=e.createFontFaceRule();if(t){if(this.insertRule(t),this.isSyncFontLoadingSupported)return;await new Promise((t=>{const n=this._queueLoadingCallback(t);this._prepareFontLoadEvent(e,n)}))}}get isFontLoadingAPISupported(){const e=!!this._document?.fonts;return(0,r.shadow)(this,"isFontLoadingAPISupported",e)}get isSyncFontLoadingSupported(){let e=!1;return(r.isNodeJS||"undefined"!=typeof navigator&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(e=!0),(0,r.shadow)(this,"isSyncFontLoadingSupported",e)}_queueLoadingCallback(e){const{loadingRequests:t}=this,n={done:!1,complete:function(){for((0,r.assert)(!n.done,"completeRequest() cannot be called twice."),n.done=!0;t.length>0&&t[0].done;){const e=t.shift();setTimeout(e.callback,0)}},callback:e};return t.push(n),n}get _loadTestFont(){const e=atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");return(0,r.shadow)(this,"_loadTestFont",e)}_prepareFontLoadEvent(e,t){function n(e,t){return e.charCodeAt(t)<<24|e.charCodeAt(t+1)<<16|e.charCodeAt(t+2)<<8|255&e.charCodeAt(t+3)}function i(e,t,n,r){return e.substring(0,t)+r+e.substring(t+n)}let a,s;const o=this._document.createElement("canvas");o.width=1,o.height=1;const l=o.getContext("2d");let c=0;const u=`lt${Date.now()}${this.loadTestFontId++}`;let d=this._loadTestFont;d=i(d,976,u.length,u);const h=1482184792;let p=n(d,16);for(a=0,s=u.length-3;a<s;a+=4)p=p-h+n(u,a)|0;a<u.length&&(p=p-h+n(u+"XXX",a)|0),d=i(d,16,4,(0,r.string32)(p));const f=`@font-face {font-family:"${u}";src:url(data:font/opentype;base64,${btoa(d)});}`;this.insertRule(f);const g=this._document.createElement("div");g.style.visibility="hidden",g.style.width=g.style.height="10px",g.style.position="absolute",g.style.top=g.style.left="0px";for(const t of[e.loadedName,u]){const e=this._document.createElement("span");e.textContent="Hi",e.style.fontFamily=t,g.append(e)}this._document.body.append(g),function e(t,n){if(++c>30)return(0,r.warn)("Load test font never loaded."),void n();l.font="30px "+t,l.fillText(".",0,20),l.getImageData(0,0,1,1).data[3]>0?n():setTimeout(e.bind(null,t,n))}(u,(()=>{g.remove(),t.complete()}))}},t.FontFaceObject=class{constructor(e,{isEvalSupported:t=!0,disableFontFace:n=!1,ignoreErrors:r=!1,inspectFont:i=null}){this.compiledGlyphs=Object.create(null);for(const t in e)this[t]=e[t];this.isEvalSupported=!1!==t,this.disableFontFace=!0===n,this.ignoreErrors=!0===r,this._inspectFont=i}createNativeFontFace(){if(!this.data||this.disableFontFace)return null;let e;if(this.cssFontInfo){const t={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(t.style=`oblique ${this.cssFontInfo.italicAngle}deg`),e=new FontFace(this.cssFontInfo.fontFamily,this.data,t)}else e=new FontFace(this.loadedName,this.data,{});return this._inspectFont?.(this),e}createFontFaceRule(){if(!this.data||this.disableFontFace)return null;const e=(0,r.bytesToString)(this.data),t=`url(data:${this.mimetype};base64,${btoa(e)});`;let n;if(this.cssFontInfo){let e=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(e+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),n=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${e}src:${t}}`}else n=`@font-face {font-family:"${this.loadedName}";src:${t}}`;return this._inspectFont?.(this,t),n}getPathGenerator(e,t){if(void 0!==this.compiledGlyphs[t])return this.compiledGlyphs[t];let n;try{n=e.get(this.loadedName+"_path_"+t)}catch(e){if(!this.ignoreErrors)throw e;return(0,r.warn)(`getPathGenerator - ignoring character: "${e}".`),this.compiledGlyphs[t]=function(e,t){}}if(this.isEvalSupported&&r.FeatureTest.isEvalSupported){const e=[];for(const t of n){const n=void 0!==t.args?t.args.join(","):"";e.push("c.",t.cmd,"(",n,");\n")}return this.compiledGlyphs[t]=new Function("c","size",e.join(""))}return this.compiledGlyphs[t]=function(e,t){for(const r of n)"scale"===r.cmd&&(r.args=[t,-t]),e[r.cmd].apply(e,r.args)}}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NodeStandardFontDataFactory=t.NodeFilterFactory=t.NodeCanvasFactory=t.NodeCMapReaderFactory=void 0;var r=n(7);n(1);const i=function(e){return new Promise(((t,n)=>{__webpack_require__(237).readFile(e,((e,r)=>{!e&&r?t(new Uint8Array(r)):n(new Error(e))}))}))};class a extends r.BaseFilterFactory{}t.NodeFilterFactory=a;class s extends r.BaseCanvasFactory{_createCanvas(e,t){return __webpack_require__(640).createCanvas(e,t)}}t.NodeCanvasFactory=s;class o extends r.BaseCMapReaderFactory{_fetchData(e,t){return i(e).then((e=>({cMapData:e,compressionType:t})))}}t.NodeCMapReaderFactory=o;class l extends r.BaseStandardFontDataFactory{_fetchData(e){return i(e)}}t.NodeStandardFontDataFactory=l},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CanvasGraphics=void 0;var r=n(1),i=n(6),a=n(12),s=n(13);const o=4096,l=16;class c{constructor(e){this.canvasFactory=e,this.cache=Object.create(null)}getCanvas(e,t,n){let r;return void 0!==this.cache[e]?(r=this.cache[e],this.canvasFactory.reset(r,t,n)):(r=this.canvasFactory.create(t,n),this.cache[e]=r),r}delete(e){delete this.cache[e]}clear(){for(const e in this.cache){const t=this.cache[e];this.canvasFactory.destroy(t),delete this.cache[e]}}}function u(e,t,n,r,a,s,o,l,c,u){const[d,h,p,f,g,m]=(0,i.getCurrentTransform)(e);if(0===h&&0===p){const i=o*d+g,b=Math.round(i),v=l*f+m,y=Math.round(v),_=(o+c)*d+g,A=Math.abs(Math.round(_)-b)||1,w=(l+u)*f+m,S=Math.abs(Math.round(w)-y)||1;return e.setTransform(Math.sign(d),0,0,Math.sign(f),b,y),e.drawImage(t,n,r,a,s,0,0,A,S),e.setTransform(d,h,p,f,g,m),[A,S]}if(0===d&&0===f){const i=l*p+g,b=Math.round(i),v=o*h+m,y=Math.round(v),_=(l+u)*p+g,A=Math.abs(Math.round(_)-b)||1,w=(o+c)*h+m,S=Math.abs(Math.round(w)-y)||1;return e.setTransform(0,Math.sign(h),Math.sign(p),0,b,y),e.drawImage(t,n,r,a,s,0,0,S,A),e.setTransform(d,h,p,f,g,m),[S,A]}return e.drawImage(t,n,r,a,s,o,l,c,u),[Math.hypot(d,h)*c,Math.hypot(p,f)*u]}class d{constructor(e,t){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=r.IDENTITY_MATRIX,this.textMatrixScale=1,this.fontMatrix=r.FONT_IDENTITY_MATRIX,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=r.TextRenderingMode.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,e,t])}clone(){const e=Object.create(this);return e.clipBox=this.clipBox.slice(),e}setCurrentPoint(e,t){this.x=e,this.y=t}updatePathMinMax(e,t,n){[t,n]=r.Util.applyTransform([t,n],e),this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,n),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,n)}updateRectMinMax(e,t){const n=r.Util.applyTransform(t,e),i=r.Util.applyTransform(t.slice(2),e);this.minX=Math.min(this.minX,n[0],i[0]),this.minY=Math.min(this.minY,n[1],i[1]),this.maxX=Math.max(this.maxX,n[0],i[0]),this.maxY=Math.max(this.maxY,n[1],i[1])}updateScalingPathMinMax(e,t){r.Util.scaleMinMax(e,t),this.minX=Math.min(this.minX,t[0]),this.maxX=Math.max(this.maxX,t[1]),this.minY=Math.min(this.minY,t[2]),this.maxY=Math.max(this.maxY,t[3])}updateCurvePathMinMax(e,t,n,i,a,s,o,l,c,u){const d=r.Util.bezierBoundingBox(t,n,i,a,s,o,l,c);if(u)return u[0]=Math.min(u[0],d[0],d[2]),u[1]=Math.max(u[1],d[0],d[2]),u[2]=Math.min(u[2],d[1],d[3]),void(u[3]=Math.max(u[3],d[1],d[3]));this.updateRectMinMax(e,d)}getPathBoundingBox(e=a.PathType.FILL,t=null){const n=[this.minX,this.minY,this.maxX,this.maxY];if(e===a.PathType.STROKE){t||(0,r.unreachable)("Stroke bounding box must include transform.");const e=r.Util.singularValueDecompose2dScale(t),i=e[0]*this.lineWidth/2,a=e[1]*this.lineWidth/2;n[0]-=i,n[1]-=a,n[2]+=i,n[3]+=a}return n}updateClipFromPath(){const e=r.Util.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(e||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(e){this.clipBox=e,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(e=a.PathType.FILL,t=null){return r.Util.intersect(this.clipBox,this.getPathBoundingBox(e,t))}}function h(e,t){if("undefined"!=typeof ImageData&&t instanceof ImageData)return void e.putImageData(t,0,0);const n=t.height,i=t.width,a=n%l,s=(n-a)/l,o=0===a?s:s+1,c=e.createImageData(i,l);let u,d=0;const h=t.data,p=c.data;let f,g,m,b;if(t.kind===r.ImageKind.GRAYSCALE_1BPP){const t=h.byteLength,n=new Uint32Array(p.buffer,0,p.byteLength>>2),b=n.length,v=i+7>>3,y=4294967295,_=r.FeatureTest.isLittleEndian?4278190080:255;for(f=0;f<o;f++){for(m=f<s?l:a,u=0,g=0;g<m;g++){const e=t-d;let r=0;const a=e>v?i:8*e-7,s=-8&a;let o=0,l=0;for(;r<s;r+=8)l=h[d++],n[u++]=128&l?y:_,n[u++]=64&l?y:_,n[u++]=32&l?y:_,n[u++]=16&l?y:_,n[u++]=8&l?y:_,n[u++]=4&l?y:_,n[u++]=2&l?y:_,n[u++]=1&l?y:_;for(;r<a;r++)0===o&&(l=h[d++],o=128),n[u++]=l&o?y:_,o>>=1}for(;u<b;)n[u++]=0;e.putImageData(c,0,f*l)}}else if(t.kind===r.ImageKind.RGBA_32BPP){for(g=0,b=i*l*4,f=0;f<s;f++)p.set(h.subarray(d,d+b)),d+=b,e.putImageData(c,0,g),g+=l;f<o&&(b=i*a*4,p.set(h.subarray(d,d+b)),e.putImageData(c,0,g))}else{if(t.kind!==r.ImageKind.RGB_24BPP)throw new Error(`bad image kind: ${t.kind}`);for(m=l,b=i*m,f=0;f<o;f++){for(f>=s&&(m=a,b=i*m),u=0,g=b;g--;)p[u++]=h[d++],p[u++]=h[d++],p[u++]=h[d++],p[u++]=255;e.putImageData(c,0,f*l)}}}function p(e,t){if(t.bitmap)return void e.drawImage(t.bitmap,0,0);const n=t.height,r=t.width,i=n%l,a=(n-i)/l,o=0===i?a:a+1,c=e.createImageData(r,l);let u=0;const d=t.data,h=c.data;for(let t=0;t<o;t++){const n=t<a?l:i;({srcPos:u}=(0,s.convertBlackAndWhiteToRGBA)({src:d,srcPos:u,dest:h,width:r,height:n,nonBlackColor:0})),e.putImageData(c,0,t*l)}}function f(e,t){const n=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const r of n)void 0!==e[r]&&(t[r]=e[r]);void 0!==e.setLineDash&&(t.setLineDash(e.getLineDash()),t.lineDashOffset=e.lineDashOffset)}function g(e){if(e.strokeStyle=e.fillStyle="#000000",e.fillRule="nonzero",e.globalAlpha=1,e.lineWidth=1,e.lineCap="butt",e.lineJoin="miter",e.miterLimit=10,e.globalCompositeOperation="source-over",e.font="10px sans-serif",void 0!==e.setLineDash&&(e.setLineDash([]),e.lineDashOffset=0),!r.isNodeJS){const{filter:t}=e;"none"!==t&&""!==t&&(e.filter="none")}}function m(e,t,n,r){const i=e.length;for(let a=3;a<i;a+=4){const i=e[a];if(0===i)e[a-3]=t,e[a-2]=n,e[a-1]=r;else if(i<255){const s=255-i;e[a-3]=e[a-3]*i+t*s>>8,e[a-2]=e[a-2]*i+n*s>>8,e[a-1]=e[a-1]*i+r*s>>8}}}function b(e,t,n){const r=e.length,i=1/255;for(let a=3;a<r;a+=4){const r=n?n[e[a]]:e[a];t[a]=t[a]*r*i|0}}function v(e,t,n){const r=e.length;for(let i=3;i<r;i+=4){const r=77*e[i-3]+152*e[i-2]+28*e[i-1];t[i]=n?t[i]*n[r>>8]>>8:t[i]*r>>16}}function y(e,t){const n=r.Util.singularValueDecompose2dScale(e);n[0]=Math.fround(n[0]),n[1]=Math.fround(n[1]);const a=Math.fround((globalThis.devicePixelRatio||1)*i.PixelsPerInch.PDF_TO_CSS_UNITS);return void 0!==t?t:n[0]<=a||n[1]<=a}const _=["butt","round","square"],A=["miter","round","bevel"],w={},S={};class x{constructor(e,t,n,r,i,{optionalContentConfig:a,markedContentStack:s=null},o,l){this.ctx=e,this.current=new d(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=t,this.objs=n,this.canvasFactory=r,this.filterFactory=i,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=s||[],this.optionalContentConfig=a,this.cachedCanvases=new c(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=o,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=l,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(e,t=null){return"string"==typeof e?e.startsWith("g_")?this.commonObjs.get(e):this.objs.get(e):t}beginDrawing({transform:e,viewport:t,transparency:n=!1,background:r=null}){const a=this.ctx.canvas.width,s=this.ctx.canvas.height,o=this.ctx.fillStyle;if(this.ctx.fillStyle=r||"#ffffff",this.ctx.fillRect(0,0,a,s),this.ctx.fillStyle=o,n){const e=this.cachedCanvases.getCanvas("transparent",a,s);this.compositeCtx=this.ctx,this.transparentCanvas=e.canvas,this.ctx=e.context,this.ctx.save(),this.ctx.transform(...(0,i.getCurrentTransform)(this.compositeCtx))}this.ctx.save(),g(this.ctx),e&&(this.ctx.transform(...e),this.outputScaleX=e[0],this.outputScaleY=e[0]),this.ctx.transform(...t.transform),this.viewportScale=t.scale,this.baseTransform=(0,i.getCurrentTransform)(this.ctx)}executeOperatorList(e,t,n,i){const a=e.argsArray,s=e.fnArray;let o=t||0;const l=a.length;if(l===o)return o;const c=l-o>10&&"function"==typeof n,u=c?Date.now()+15:0;let d=0;const h=this.commonObjs,p=this.objs;let f;for(;;){if(void 0!==i&&o===i.nextBreakPoint)return i.breakIt(o,n),o;if(f=s[o],f!==r.OPS.dependency)this[f].apply(this,a[o]);else for(const e of a[o]){const t=e.startsWith("g_")?h:p;if(!t.has(e))return t.get(e,n),o}if(o++,o===l)return o;if(c&&++d>10){if(Date.now()>u)return n(),o;d=0}}}#ct(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)}endDrawing(){this.#ct(),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const e of this._cachedBitmapsMap.values()){for(const t of e.values())"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement&&(t.width=t.height=0);e.clear()}this._cachedBitmapsMap.clear(),this.#ut()}#ut(){if(this.pageColors){const e=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if("none"!==e){const t=this.ctx.filter;this.ctx.filter=e,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=t}}}_scaleImage(e,t){const n=e.width,r=e.height;let i,a,s=Math.max(Math.hypot(t[0],t[1]),1),o=Math.max(Math.hypot(t[2],t[3]),1),l=n,c=r,u="prescale1";for(;s>2&&l>1||o>2&&c>1;){let t=l,n=c;s>2&&l>1&&(t=l>=16384?Math.floor(l/2)-1||1:Math.ceil(l/2),s/=l/t),o>2&&c>1&&(n=c>=16384?Math.floor(c/2)-1||1:Math.ceil(c)/2,o/=c/n),i=this.cachedCanvases.getCanvas(u,t,n),a=i.context,a.clearRect(0,0,t,n),a.drawImage(e,0,0,l,c,0,0,t,n),e=i.canvas,l=t,c=n,u="prescale1"===u?"prescale2":"prescale1"}return{img:e,paintWidth:l,paintHeight:c}}_createMaskCanvas(e){const t=this.ctx,{width:n,height:s}=e,o=this.current.fillColor,l=this.current.patternFill,c=(0,i.getCurrentTransform)(t);let d,h,f,g;if((e.bitmap||e.data)&&e.count>1){const t=e.bitmap||e.data.buffer;h=JSON.stringify(l?c:[c.slice(0,4),o]),d=this._cachedBitmapsMap.get(t),d||(d=new Map,this._cachedBitmapsMap.set(t,d));const n=d.get(h);if(n&&!l)return{canvas:n,offsetX:Math.round(Math.min(c[0],c[2])+c[4]),offsetY:Math.round(Math.min(c[1],c[3])+c[5])};f=n}f||(g=this.cachedCanvases.getCanvas("maskCanvas",n,s),p(g.context,e));let m=r.Util.transform(c,[1/n,0,0,-1/s,0,0]);m=r.Util.transform(m,[1,0,0,1,0,-s]);const b=r.Util.applyTransform([0,0],m),v=r.Util.applyTransform([n,s],m),_=r.Util.normalizeRect([b[0],b[1],v[0],v[1]]),A=Math.round(_[2]-_[0])||1,w=Math.round(_[3]-_[1])||1,S=this.cachedCanvases.getCanvas("fillCanvas",A,w),x=S.context,E=Math.min(b[0],v[0]),k=Math.min(b[1],v[1]);x.translate(-E,-k),x.transform(...m),f||(f=this._scaleImage(g.canvas,(0,i.getCurrentTransformInverse)(x)),f=f.img,d&&l&&d.set(h,f)),x.imageSmoothingEnabled=y((0,i.getCurrentTransform)(x),e.interpolate),u(x,f,0,0,f.width,f.height,0,0,n,s),x.globalCompositeOperation="source-in";const C=r.Util.transform((0,i.getCurrentTransformInverse)(x),[1,0,0,1,-E,-k]);return x.fillStyle=l?o.getPattern(t,this,C,a.PathType.FILL):o,x.fillRect(0,0,n,s),d&&!l&&(this.cachedCanvases.delete("fillCanvas"),d.set(h,S.canvas)),{canvas:S.canvas,offsetX:Math.round(E),offsetY:Math.round(k)}}setLineWidth(e){e!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=e,this.ctx.lineWidth=e}setLineCap(e){this.ctx.lineCap=_[e]}setLineJoin(e){this.ctx.lineJoin=A[e]}setMiterLimit(e){this.ctx.miterLimit=e}setDash(e,t){const n=this.ctx;void 0!==n.setLineDash&&(n.setLineDash(e),n.lineDashOffset=t)}setRenderingIntent(e){}setFlatness(e){}setGState(e){for(const[t,n]of e)switch(t){case"LW":this.setLineWidth(n);break;case"LC":this.setLineCap(n);break;case"LJ":this.setLineJoin(n);break;case"ML":this.setMiterLimit(n);break;case"D":this.setDash(n[0],n[1]);break;case"RI":this.setRenderingIntent(n);break;case"FL":this.setFlatness(n);break;case"Font":this.setFont(n[0],n[1]);break;case"CA":this.current.strokeAlpha=n;break;case"ca":this.current.fillAlpha=n,this.ctx.globalAlpha=n;break;case"BM":this.ctx.globalCompositeOperation=n;break;case"SMask":this.current.activeSMask=n?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(n)}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const e=this.inSMaskMode;this.current.activeSMask&&!e?this.beginSMaskMode():!this.current.activeSMask&&e&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const e=this.ctx.canvas.width,t=this.ctx.canvas.height,n="smaskGroupAt"+this.groupLevel,r=this.cachedCanvases.getCanvas(n,e,t);this.suspendedCtx=this.ctx,this.ctx=r.context;const a=this.ctx;a.setTransform(...(0,i.getCurrentTransform)(this.suspendedCtx)),f(this.suspendedCtx,a),function(e,t){if(e._removeMirroring)throw new Error("Context is already forwarding operations.");e.__originalSave=e.save,e.__originalRestore=e.restore,e.__originalRotate=e.rotate,e.__originalScale=e.scale,e.__originalTranslate=e.translate,e.__originalTransform=e.transform,e.__originalSetTransform=e.setTransform,e.__originalResetTransform=e.resetTransform,e.__originalClip=e.clip,e.__originalMoveTo=e.moveTo,e.__originalLineTo=e.lineTo,e.__originalBezierCurveTo=e.bezierCurveTo,e.__originalRect=e.rect,e.__originalClosePath=e.closePath,e.__originalBeginPath=e.beginPath,e._removeMirroring=()=>{e.save=e.__originalSave,e.restore=e.__originalRestore,e.rotate=e.__originalRotate,e.scale=e.__originalScale,e.translate=e.__originalTranslate,e.transform=e.__originalTransform,e.setTransform=e.__originalSetTransform,e.resetTransform=e.__originalResetTransform,e.clip=e.__originalClip,e.moveTo=e.__originalMoveTo,e.lineTo=e.__originalLineTo,e.bezierCurveTo=e.__originalBezierCurveTo,e.rect=e.__originalRect,e.closePath=e.__originalClosePath,e.beginPath=e.__originalBeginPath,delete e._removeMirroring},e.save=function(){t.save(),this.__originalSave()},e.restore=function(){t.restore(),this.__originalRestore()},e.translate=function(e,n){t.translate(e,n),this.__originalTranslate(e,n)},e.scale=function(e,n){t.scale(e,n),this.__originalScale(e,n)},e.transform=function(e,n,r,i,a,s){t.transform(e,n,r,i,a,s),this.__originalTransform(e,n,r,i,a,s)},e.setTransform=function(e,n,r,i,a,s){t.setTransform(e,n,r,i,a,s),this.__originalSetTransform(e,n,r,i,a,s)},e.resetTransform=function(){t.resetTransform(),this.__originalResetTransform()},e.rotate=function(e){t.rotate(e),this.__originalRotate(e)},e.clip=function(e){t.clip(e),this.__originalClip(e)},e.moveTo=function(e,n){t.moveTo(e,n),this.__originalMoveTo(e,n)},e.lineTo=function(e,n){t.lineTo(e,n),this.__originalLineTo(e,n)},e.bezierCurveTo=function(e,n,r,i,a,s){t.bezierCurveTo(e,n,r,i,a,s),this.__originalBezierCurveTo(e,n,r,i,a,s)},e.rect=function(e,n,r,i){t.rect(e,n,r,i),this.__originalRect(e,n,r,i)},e.closePath=function(){t.closePath(),this.__originalClosePath()},e.beginPath=function(){t.beginPath(),this.__originalBeginPath()}}(a,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),f(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(e){if(!this.current.activeSMask)return;e?(e[0]=Math.floor(e[0]),e[1]=Math.floor(e[1]),e[2]=Math.ceil(e[2]),e[3]=Math.ceil(e[3])):e=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const t=this.current.activeSMask;(function(e,t,n,r){const i=r[0],a=r[1],s=r[2]-i,o=r[3]-a;0!==s&&0!==o&&(function(e,t,n,r,i,a,s,o,l,c,u){const d=!!a,h=d?a[0]:0,p=d?a[1]:0,f=d?a[2]:0,g="Luminosity"===i?v:b,y=Math.min(r,Math.ceil(1048576/n));for(let i=0;i<r;i+=y){const a=Math.min(y,r-i),b=e.getImageData(o-c,i+(l-u),n,a),v=t.getImageData(o,i+l,n,a);d&&m(b.data,h,p,f),g(b.data,v.data,s),t.putImageData(v,o,i+l)}}(t.context,n,s,o,t.subtype,t.backdrop,t.transferMap,i,a,t.offsetX,t.offsetY),e.save(),e.globalAlpha=1,e.globalCompositeOperation="source-over",e.setTransform(1,0,0,1,0,0),e.drawImage(n.canvas,0,0),e.restore())})(this.suspendedCtx,t,this.ctx,e),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}save(){this.inSMaskMode?(f(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const e=this.current;this.stateStack.push(e),this.current=e.clone()}restore(){0===this.stateStack.length&&this.inSMaskMode&&this.endSMaskMode(),0!==this.stateStack.length&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),f(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(e,t,n,r,i,a){this.ctx.transform(e,t,n,r,i,a),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(e,t,n){const a=this.ctx,s=this.current;let o,l,c=s.x,u=s.y;const d=(0,i.getCurrentTransform)(a),h=0===d[0]&&0===d[3]||0===d[1]&&0===d[2],p=h?n.slice(0):null;for(let n=0,i=0,f=e.length;n<f;n++)switch(0|e[n]){case r.OPS.rectangle:c=t[i++],u=t[i++];const e=t[i++],n=t[i++],f=c+e,g=u+n;a.moveTo(c,u),0===e||0===n?a.lineTo(f,g):(a.lineTo(f,u),a.lineTo(f,g),a.lineTo(c,g)),h||s.updateRectMinMax(d,[c,u,f,g]),a.closePath();break;case r.OPS.moveTo:c=t[i++],u=t[i++],a.moveTo(c,u),h||s.updatePathMinMax(d,c,u);break;case r.OPS.lineTo:c=t[i++],u=t[i++],a.lineTo(c,u),h||s.updatePathMinMax(d,c,u);break;case r.OPS.curveTo:o=c,l=u,c=t[i+4],u=t[i+5],a.bezierCurveTo(t[i],t[i+1],t[i+2],t[i+3],c,u),s.updateCurvePathMinMax(d,o,l,t[i],t[i+1],t[i+2],t[i+3],c,u,p),i+=6;break;case r.OPS.curveTo2:o=c,l=u,a.bezierCurveTo(c,u,t[i],t[i+1],t[i+2],t[i+3]),s.updateCurvePathMinMax(d,o,l,c,u,t[i],t[i+1],t[i+2],t[i+3],p),c=t[i+2],u=t[i+3],i+=4;break;case r.OPS.curveTo3:o=c,l=u,c=t[i+2],u=t[i+3],a.bezierCurveTo(t[i],t[i+1],c,u,c,u),s.updateCurvePathMinMax(d,o,l,t[i],t[i+1],c,u,c,u,p),i+=4;break;case r.OPS.closePath:a.closePath()}h&&s.updateScalingPathMinMax(d,p),s.setCurrentPoint(c,u)}closePath(){this.ctx.closePath()}stroke(e=!0){const t=this.ctx,n=this.current.strokeColor;t.globalAlpha=this.current.strokeAlpha,this.contentVisible&&("object"==typeof n&&n?.getPattern?(t.save(),t.strokeStyle=n.getPattern(t,this,(0,i.getCurrentTransformInverse)(t),a.PathType.STROKE),this.rescaleAndStroke(!1),t.restore()):this.rescaleAndStroke(!0)),e&&this.consumePath(this.current.getClippedPathBoundingBox()),t.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(e=!0){const t=this.ctx,n=this.current.fillColor;let r=!1;this.current.patternFill&&(t.save(),t.fillStyle=n.getPattern(t,this,(0,i.getCurrentTransformInverse)(t),a.PathType.FILL),r=!0);const s=this.current.getClippedPathBoundingBox();this.contentVisible&&null!==s&&(this.pendingEOFill?(t.fill("evenodd"),this.pendingEOFill=!1):t.fill()),r&&t.restore(),e&&this.consumePath(s)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=w}eoClip(){this.pendingClip=S}beginText(){this.current.textMatrix=r.IDENTITY_MATRIX,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const e=this.pendingTextPaths,t=this.ctx;if(void 0!==e){t.save(),t.beginPath();for(const n of e)t.setTransform(...n.transform),t.translate(n.x,n.y),n.addToPath(t,n.fontSize);t.restore(),t.clip(),t.beginPath(),delete this.pendingTextPaths}else t.beginPath()}setCharSpacing(e){this.current.charSpacing=e}setWordSpacing(e){this.current.wordSpacing=e}setHScale(e){this.current.textHScale=e/100}setLeading(e){this.current.leading=-e}setFont(e,t){const n=this.commonObjs.get(e),i=this.current;if(!n)throw new Error(`Can't find font for ${e}`);if(i.fontMatrix=n.fontMatrix||r.FONT_IDENTITY_MATRIX,0!==i.fontMatrix[0]&&0!==i.fontMatrix[3]||(0,r.warn)("Invalid font matrix for font "+e),t<0?(t=-t,i.fontDirection=-1):i.fontDirection=1,this.current.font=n,this.current.fontSize=t,n.isType3Font)return;const a=n.loadedName||"sans-serif",s=n.systemFontInfo?.css||`"${a}", ${n.fallbackName}`;let o="normal";n.black?o="900":n.bold&&(o="bold");const l=n.italic?"italic":"normal";let c=t;t<16?c=16:t>100&&(c=100),this.current.fontSizeScale=t/c,this.ctx.font=`${l} ${o} ${c}px ${s}`}setTextRenderingMode(e){this.current.textRenderingMode=e}setTextRise(e){this.current.textRise=e}moveText(e,t){this.current.x=this.current.lineX+=e,this.current.y=this.current.lineY+=t}setLeadingMoveText(e,t){this.setLeading(-t),this.moveText(e,t)}setTextMatrix(e,t,n,r,i,a){this.current.textMatrix=[e,t,n,r,i,a],this.current.textMatrixScale=Math.hypot(e,t),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(e,t,n,a){const s=this.ctx,o=this.current,l=o.font,c=o.textRenderingMode,u=o.fontSize/o.fontSizeScale,d=c&r.TextRenderingMode.FILL_STROKE_MASK,h=!!(c&r.TextRenderingMode.ADD_TO_PATH_FLAG),p=o.patternFill&&!l.missingFile;let f;(l.disableFontFace||h||p)&&(f=l.getPathGenerator(this.commonObjs,e)),l.disableFontFace||p?(s.save(),s.translate(t,n),s.beginPath(),f(s,u),a&&s.setTransform(...a),d!==r.TextRenderingMode.FILL&&d!==r.TextRenderingMode.FILL_STROKE||s.fill(),d!==r.TextRenderingMode.STROKE&&d!==r.TextRenderingMode.FILL_STROKE||s.stroke(),s.restore()):(d!==r.TextRenderingMode.FILL&&d!==r.TextRenderingMode.FILL_STROKE||s.fillText(e,t,n),d!==r.TextRenderingMode.STROKE&&d!==r.TextRenderingMode.FILL_STROKE||s.strokeText(e,t,n)),h&&(this.pendingTextPaths||=[]).push({transform:(0,i.getCurrentTransform)(s),x:t,y:n,fontSize:u,addToPath:f})}get isFontSubpixelAAEnabled(){const{context:e}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);e.scale(1.5,1),e.fillText("I",0,10);const t=e.getImageData(0,0,10,10).data;let n=!1;for(let e=3;e<t.length;e+=4)if(t[e]>0&&t[e]<255){n=!0;break}return(0,r.shadow)(this,"isFontSubpixelAAEnabled",n)}showText(e){const t=this.current,n=t.font;if(n.isType3Font)return this.showType3Text(e);const s=t.fontSize;if(0===s)return;const o=this.ctx,l=t.fontSizeScale,c=t.charSpacing,u=t.wordSpacing,d=t.fontDirection,h=t.textHScale*d,p=e.length,f=n.vertical,g=f?1:-1,m=n.defaultVMetrics,b=s*t.fontMatrix[0],v=t.textRenderingMode===r.TextRenderingMode.FILL&&!n.disableFontFace&&!t.patternFill;let y;if(o.save(),o.transform(...t.textMatrix),o.translate(t.x,t.y+t.textRise),d>0?o.scale(h,-1):o.scale(h,1),t.patternFill){o.save();const e=t.fillColor.getPattern(o,this,(0,i.getCurrentTransformInverse)(o),a.PathType.FILL);y=(0,i.getCurrentTransform)(o),o.restore(),o.fillStyle=e}let _=t.lineWidth;const A=t.textMatrixScale;if(0===A||0===_){const e=t.textRenderingMode&r.TextRenderingMode.FILL_STROKE_MASK;e!==r.TextRenderingMode.STROKE&&e!==r.TextRenderingMode.FILL_STROKE||(_=this.getSinglePixelWidth())}else _/=A;if(1!==l&&(o.scale(l,l),_/=l),o.lineWidth=_,n.isInvalidPDFjsFont){const n=[];let r=0;for(const t of e)n.push(t.unicode),r+=t.width;return o.fillText(n.join(""),0,0),t.x+=r*b*h,o.restore(),void this.compose()}let w,S=0;for(w=0;w<p;++w){const t=e[w];if("number"==typeof t){S+=g*t*s/1e3;continue}let r=!1;const i=(t.isSpace?u:0)+c,a=t.fontChar,h=t.accent;let p,_,A=t.width;if(f){const e=t.vmetric||m,n=-(t.vmetric?e[1]:.5*A)*b,r=e[2]*b;A=e?-e[0]:A,p=n/l,_=(S+r)/l}else p=S/l,_=0;if(n.remeasure&&A>0){const e=1e3*o.measureText(a).width/s*l;if(A<e&&this.isFontSubpixelAAEnabled){const t=A/e;r=!0,o.save(),o.scale(t,1),p/=t}else A!==e&&(p+=(A-e)/2e3*s/l)}if(this.contentVisible&&(t.isInFont||n.missingFile))if(v&&!h)o.fillText(a,p,_);else if(this.paintChar(a,p,_,y),h){const e=p+s*h.offset.x/l,t=_-s*h.offset.y/l;this.paintChar(h.fontChar,e,t,y)}S+=f?A*b-i*d:A*b+i*d,r&&o.restore()}f?t.y-=S:t.x+=S*h,o.restore(),this.compose()}showType3Text(e){const t=this.ctx,n=this.current,i=n.font,a=n.fontSize,s=n.fontDirection,o=i.vertical?1:-1,l=n.charSpacing,c=n.wordSpacing,u=n.textHScale*s,d=n.fontMatrix||r.FONT_IDENTITY_MATRIX,h=e.length;let p,f,g,m;if(n.textRenderingMode!==r.TextRenderingMode.INVISIBLE&&0!==a){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,t.save(),t.transform(...n.textMatrix),t.translate(n.x,n.y),t.scale(u,s),p=0;p<h;++p){if(f=e[p],"number"==typeof f){m=o*f*a/1e3,this.ctx.translate(m,0),n.x+=m*u;continue}const s=(f.isSpace?c:0)+l,h=i.charProcOperatorList[f.operatorListId];h?(this.contentVisible&&(this.processingType3=f,this.save(),t.scale(a,a),t.transform(...d),this.executeOperatorList(h),this.restore()),g=r.Util.applyTransform([f.width,0],d)[0]*a+s,t.translate(g,0),n.x+=g*u):(0,r.warn)(`Type3 character "${f.operatorListId}" is not available.`)}t.restore(),this.processingType3=null}}setCharWidth(e,t){}setCharWidthAndBounds(e,t,n,r,i,a){this.ctx.rect(n,r,i-n,a-r),this.ctx.clip(),this.endPath()}getColorN_Pattern(e){let t;if("TilingPattern"===e[0]){const n=e[1],r=this.baseTransform||(0,i.getCurrentTransform)(this.ctx),s={createCanvasGraphics:e=>new x(e,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};t=new a.TilingPattern(e,n,this.ctx,s,r)}else t=this._getPattern(e[1],e[2]);return t}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments)}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(e,t,n){const i=r.Util.makeHexColor(e,t,n);this.ctx.strokeStyle=i,this.current.strokeColor=i}setFillRGBColor(e,t,n){const i=r.Util.makeHexColor(e,t,n);this.ctx.fillStyle=i,this.current.fillColor=i,this.current.patternFill=!1}_getPattern(e,t=null){let n;return this.cachedPatterns.has(e)?n=this.cachedPatterns.get(e):(n=(0,a.getShadingPattern)(this.getObject(e)),this.cachedPatterns.set(e,n)),t&&(n.matrix=t),n}shadingFill(e){if(!this.contentVisible)return;const t=this.ctx;this.save();const n=this._getPattern(e);t.fillStyle=n.getPattern(t,this,(0,i.getCurrentTransformInverse)(t),a.PathType.SHADING);const s=(0,i.getCurrentTransformInverse)(t);if(s){const{width:e,height:n}=t.canvas,[i,a,o,l]=r.Util.getAxialAlignedBoundingBox([0,0,e,n],s);this.ctx.fillRect(i,a,o-i,l-a)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){(0,r.unreachable)("Should not call beginInlineImage")}beginImageData(){(0,r.unreachable)("Should not call beginImageData")}paintFormXObjectBegin(e,t){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),Array.isArray(e)&&6===e.length&&this.transform(...e),this.baseTransform=(0,i.getCurrentTransform)(this.ctx),t)){const e=t[2]-t[0],n=t[3]-t[1];this.ctx.rect(t[0],t[1],e,n),this.current.updateRectMinMax((0,i.getCurrentTransform)(this.ctx),t),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(e){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const t=this.ctx;e.isolated||(0,r.info)("TODO: Support non-isolated groups."),e.knockout&&(0,r.warn)("Knockout groups not supported.");const n=(0,i.getCurrentTransform)(t);if(e.matrix&&t.transform(...e.matrix),!e.bbox)throw new Error("Bounding box is required.");let a=r.Util.getAxialAlignedBoundingBox(e.bbox,(0,i.getCurrentTransform)(t));const s=[0,0,t.canvas.width,t.canvas.height];a=r.Util.intersect(a,s)||[0,0,0,0];const l=Math.floor(a[0]),c=Math.floor(a[1]);let u=Math.max(Math.ceil(a[2])-l,1),d=Math.max(Math.ceil(a[3])-c,1),h=1,p=1;u>o&&(h=u/o,u=o),d>o&&(p=d/o,d=o),this.current.startNewPathAndClipBox([0,0,u,d]);let g="groupAt"+this.groupLevel;e.smask&&(g+="_smask_"+this.smaskCounter++%2);const m=this.cachedCanvases.getCanvas(g,u,d),b=m.context;b.scale(1/h,1/p),b.translate(-l,-c),b.transform(...n),e.smask?this.smaskStack.push({canvas:m.canvas,context:b,offsetX:l,offsetY:c,scaleX:h,scaleY:p,subtype:e.smask.subtype,backdrop:e.smask.backdrop,transferMap:e.smask.transferMap||null,startTransformInverse:null}):(t.setTransform(1,0,0,1,0,0),t.translate(l,c),t.scale(h,p),t.save()),f(t,b),this.ctx=b,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(t),this.groupLevel++}endGroup(e){if(!this.contentVisible)return;this.groupLevel--;const t=this.ctx,n=this.groupStack.pop();if(this.ctx=n,this.ctx.imageSmoothingEnabled=!1,e.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const e=(0,i.getCurrentTransform)(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...e);const n=r.Util.getAxialAlignedBoundingBox([0,0,t.canvas.width,t.canvas.height],e);this.ctx.drawImage(t.canvas,0,0),this.ctx.restore(),this.compose(n)}}beginAnnotation(e,t,n,a,s){if(this.#ct(),g(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),Array.isArray(t)&&4===t.length){const a=t[2]-t[0],o=t[3]-t[1];if(s&&this.annotationCanvasMap){(n=n.slice())[4]-=t[0],n[5]-=t[1],(t=t.slice())[0]=t[1]=0,t[2]=a,t[3]=o;const[s,l]=r.Util.singularValueDecompose2dScale((0,i.getCurrentTransform)(this.ctx)),{viewportScale:c}=this,u=Math.ceil(a*this.outputScaleX*c),d=Math.ceil(o*this.outputScaleY*c);this.annotationCanvas=this.canvasFactory.create(u,d);const{canvas:h,context:p}=this.annotationCanvas;this.annotationCanvasMap.set(e,h),this.annotationCanvas.savedCtx=this.ctx,this.ctx=p,this.ctx.save(),this.ctx.setTransform(s,0,0,-l,0,o*l),g(this.ctx)}else g(this.ctx),this.ctx.rect(t[0],t[1],a,o),this.ctx.clip(),this.endPath()}this.current=new d(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...n),this.transform(...a)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),this.#ut(),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(e){if(!this.contentVisible)return;const t=e.count;(e=this.getObject(e.data,e)).count=t;const n=this.ctx,r=this.processingType3;if(r&&(void 0===r.compiled&&(r.compiled=function(e){const{width:t,height:n}=e;if(t>1e3||n>1e3)return null;const r=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),i=t+1;let a,s,o,l=new Uint8Array(i*(n+1));const c=t+7&-8;let u=new Uint8Array(c*n),d=0;for(const t of e.data){let e=128;for(;e>0;)u[d++]=t&e?0:255,e>>=1}let h=0;for(d=0,0!==u[d]&&(l[0]=1,++h),s=1;s<t;s++)u[d]!==u[d+1]&&(l[s]=u[d]?2:1,++h),d++;for(0!==u[d]&&(l[s]=2,++h),a=1;a<n;a++){d=a*c,o=a*i,u[d-c]!==u[d]&&(l[o]=u[d]?1:8,++h);let e=(u[d]?4:0)+(u[d-c]?8:0);for(s=1;s<t;s++)e=(e>>2)+(u[d+1]?4:0)+(u[d-c+1]?8:0),r[e]&&(l[o+s]=r[e],++h),d++;if(u[d-c]!==u[d]&&(l[o+s]=u[d]?2:4,++h),h>1e3)return null}for(d=c*(n-1),o=a*i,0!==u[d]&&(l[o]=8,++h),s=1;s<t;s++)u[d]!==u[d+1]&&(l[o+s]=u[d]?4:8,++h),d++;if(0!==u[d]&&(l[o+s]=4,++h),h>1e3)return null;const p=new Int32Array([0,i,-1,0,-i,0,0,0,1]),f=new Path2D;for(a=0;h&&a<=n;a++){let e=a*i;const n=e+t;for(;e<n&&!l[e];)e++;if(e===n)continue;f.moveTo(e%i,a);const r=e;let s=l[e];do{const t=p[s];do{e+=t}while(!l[e]);const n=l[e];5!==n&&10!==n?(s=n,l[e]=0):(s=n&51*s>>4,l[e]&=s>>2|s<<2),f.lineTo(e%i,e/i|0),l[e]||--h}while(r!==e);--a}return u=null,l=null,function(e){e.save(),e.scale(1/t,-1/n),e.translate(0,-n),e.fill(f),e.beginPath(),e.restore()}}(e)),r.compiled))return void r.compiled(n);const i=this._createMaskCanvas(e),a=i.canvas;n.save(),n.setTransform(1,0,0,1,0,0),n.drawImage(a,i.offsetX,i.offsetY),n.restore(),this.compose()}paintImageMaskXObjectRepeat(e,t,n=0,a=0,s,o){if(!this.contentVisible)return;e=this.getObject(e.data,e);const l=this.ctx;l.save();const c=(0,i.getCurrentTransform)(l);l.transform(t,n,a,s,0,0);const u=this._createMaskCanvas(e);l.setTransform(1,0,0,1,u.offsetX-c[4],u.offsetY-c[5]);for(let e=0,i=o.length;e<i;e+=2){const i=r.Util.transform(c,[t,n,a,s,o[e],o[e+1]]),[d,h]=r.Util.applyTransform([0,0],i);l.drawImage(u.canvas,d,h)}l.restore(),this.compose()}paintImageMaskXObjectGroup(e){if(!this.contentVisible)return;const t=this.ctx,n=this.current.fillColor,r=this.current.patternFill;for(const s of e){const{data:e,width:o,height:l,transform:c}=s,d=this.cachedCanvases.getCanvas("maskCanvas",o,l),h=d.context;h.save(),p(h,this.getObject(e,s)),h.globalCompositeOperation="source-in",h.fillStyle=r?n.getPattern(h,this,(0,i.getCurrentTransformInverse)(t),a.PathType.FILL):n,h.fillRect(0,0,o,l),h.restore(),t.save(),t.transform(...c),t.scale(1,-1),u(t,d.canvas,0,0,o,l,0,-1,1,1),t.restore()}this.compose()}paintImageXObject(e){if(!this.contentVisible)return;const t=this.getObject(e);t?this.paintInlineImageXObject(t):(0,r.warn)("Dependent image isn't ready yet")}paintImageXObjectRepeat(e,t,n,i){if(!this.contentVisible)return;const a=this.getObject(e);if(!a)return void(0,r.warn)("Dependent image isn't ready yet");const s=a.width,o=a.height,l=[];for(let e=0,r=i.length;e<r;e+=2)l.push({transform:[t,0,0,n,i[e],i[e+1]],x:0,y:0,w:s,h:o});this.paintInlineImageXObjectGroup(a,l)}applyTransferMapsToCanvas(e){return"none"!==this.current.transferMaps&&(e.filter=this.current.transferMaps,e.drawImage(e.canvas,0,0),e.filter="none"),e.canvas}applyTransferMapsToBitmap(e){if("none"===this.current.transferMaps)return e.bitmap;const{bitmap:t,width:n,height:r}=e,i=this.cachedCanvases.getCanvas("inlineImage",n,r),a=i.context;return a.filter=this.current.transferMaps,a.drawImage(t,0,0),a.filter="none",i.canvas}paintInlineImageXObject(e){if(!this.contentVisible)return;const t=e.width,n=e.height,a=this.ctx;if(this.save(),!r.isNodeJS){const{filter:e}=a;"none"!==e&&""!==e&&(a.filter="none")}let s;if(a.scale(1/t,-1/n),e.bitmap)s=this.applyTransferMapsToBitmap(e);else if("function"==typeof HTMLElement&&e instanceof HTMLElement||!e.data)s=e;else{const r=this.cachedCanvases.getCanvas("inlineImage",t,n).context;h(r,e),s=this.applyTransferMapsToCanvas(r)}const o=this._scaleImage(s,(0,i.getCurrentTransformInverse)(a));a.imageSmoothingEnabled=y((0,i.getCurrentTransform)(a),e.interpolate),u(a,o.img,0,0,o.paintWidth,o.paintHeight,0,-n,t,n),this.compose(),this.restore()}paintInlineImageXObjectGroup(e,t){if(!this.contentVisible)return;const n=this.ctx;let r;if(e.bitmap)r=e.bitmap;else{const t=e.width,n=e.height,i=this.cachedCanvases.getCanvas("inlineImage",t,n).context;h(i,e),r=this.applyTransferMapsToCanvas(i)}for(const e of t)n.save(),n.transform(...e.transform),n.scale(1,-1),u(n,r,e.x,e.y,e.w,e.h,0,-1,1,1),n.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(e){}markPointProps(e,t){}beginMarkedContent(e){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(e,t){"OC"===e?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(t)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(e){const t=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(e);const n=this.ctx;this.pendingClip&&(t||(this.pendingClip===S?n.clip("evenodd"):n.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),n.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const e=(0,i.getCurrentTransform)(this.ctx);if(0===e[1]&&0===e[2])this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(e[0]),Math.abs(e[3]));else{const t=Math.abs(e[0]*e[3]-e[2]*e[1]),n=Math.hypot(e[0],e[2]),r=Math.hypot(e[1],e[3]);this._cachedGetSinglePixelWidth=Math.max(n,r)/t}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(-1===this._cachedScaleForStroking[0]){const{lineWidth:e}=this.current,{a:t,b:n,c:r,d:i}=this.ctx.getTransform();let a,s;if(0===n&&0===r){const n=Math.abs(t),r=Math.abs(i);if(n===r)if(0===e)a=s=1/n;else{const t=n*e;a=s=t<1?1/t:1}else if(0===e)a=1/n,s=1/r;else{const t=n*e,i=r*e;a=t<1?1/t:1,s=i<1?1/i:1}}else{const o=Math.abs(t*i-n*r),l=Math.hypot(t,n),c=Math.hypot(r,i);if(0===e)a=c/o,s=l/o;else{const t=e*o;a=c>t?c/t:1,s=l>t?l/t:1}}this._cachedScaleForStroking[0]=a,this._cachedScaleForStroking[1]=s}return this._cachedScaleForStroking}rescaleAndStroke(e){const{ctx:t}=this,{lineWidth:n}=this.current,[r,i]=this.getScaleForStroking();if(t.lineWidth=n||1,1===r&&1===i)return void t.stroke();const a=t.getLineDash();if(e&&t.save(),t.scale(r,i),a.length>0){const e=Math.max(r,i);t.setLineDash(a.map((t=>t/e))),t.lineDashOffset/=e}t.stroke(),e&&t.restore()}isContentVisible(){for(let e=this.markedContentStack.length-1;e>=0;e--)if(!this.markedContentStack[e].visible)return!1;return!0}}t.CanvasGraphics=x;for(const e in r.OPS)void 0!==x.prototype[e]&&(x.prototype[r.OPS[e]]=x.prototype[e])},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TilingPattern=t.PathType=void 0,t.getShadingPattern=function(e){switch(e[0]){case"RadialAxial":return new l(e);case"Mesh":return new d(e);case"Dummy":return new h}throw new Error(`Unknown IR type: ${e[0]}`)};var r=n(1),i=n(6);const a={FILL:"Fill",STROKE:"Stroke",SHADING:"Shading"};function s(e,t){if(!t)return;const n=t[2]-t[0],r=t[3]-t[1],i=new Path2D;i.rect(t[0],t[1],n,r),e.clip(i)}t.PathType=a;class o{constructor(){this.constructor===o&&(0,r.unreachable)("Cannot initialize BaseShadingPattern.")}getPattern(){(0,r.unreachable)("Abstract method `getPattern` called.")}}class l extends o{constructor(e){super(),this._type=e[1],this._bbox=e[2],this._colorStops=e[3],this._p0=e[4],this._p1=e[5],this._r0=e[6],this._r1=e[7],this.matrix=null}_createGradient(e){let t;"axial"===this._type?t=e.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):"radial"===this._type&&(t=e.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const e of this._colorStops)t.addColorStop(e[0],e[1]);return t}getPattern(e,t,n,o){let l;if(o===a.STROKE||o===a.FILL){const a=t.current.getClippedPathBoundingBox(o,(0,i.getCurrentTransform)(e))||[0,0,0,0],c=Math.ceil(a[2]-a[0])||1,u=Math.ceil(a[3]-a[1])||1,d=t.cachedCanvases.getCanvas("pattern",c,u,!0),h=d.context;h.clearRect(0,0,h.canvas.width,h.canvas.height),h.beginPath(),h.rect(0,0,h.canvas.width,h.canvas.height),h.translate(-a[0],-a[1]),n=r.Util.transform(n,[1,0,0,1,a[0],a[1]]),h.transform(...t.baseTransform),this.matrix&&h.transform(...this.matrix),s(h,this._bbox),h.fillStyle=this._createGradient(h),h.fill(),l=e.createPattern(d.canvas,"no-repeat");const p=new DOMMatrix(n);l.setTransform(p)}else s(e,this._bbox),l=this._createGradient(e);return l}}function c(e,t,n,r,i,a,s,o){const l=t.coords,c=t.colors,u=e.data,d=4*e.width;let h;l[n+1]>l[r+1]&&(h=n,n=r,r=h,h=a,a=s,s=h),l[r+1]>l[i+1]&&(h=r,r=i,i=h,h=s,s=o,o=h),l[n+1]>l[r+1]&&(h=n,n=r,r=h,h=a,a=s,s=h);const p=(l[n]+t.offsetX)*t.scaleX,f=(l[n+1]+t.offsetY)*t.scaleY,g=(l[r]+t.offsetX)*t.scaleX,m=(l[r+1]+t.offsetY)*t.scaleY,b=(l[i]+t.offsetX)*t.scaleX,v=(l[i+1]+t.offsetY)*t.scaleY;if(f>=v)return;const y=c[a],_=c[a+1],A=c[a+2],w=c[s],S=c[s+1],x=c[s+2],E=c[o],k=c[o+1],C=c[o+2],P=Math.round(f),T=Math.round(v);let M,R,F,D,I,L,O,N;for(let e=P;e<=T;e++){if(e<m){const t=e<f?0:(f-e)/(f-m);M=p-(p-g)*t,R=y-(y-w)*t,F=_-(_-S)*t,D=A-(A-x)*t}else{let t;t=e>v?1:m===v?0:(m-e)/(m-v),M=g-(g-b)*t,R=w-(w-E)*t,F=S-(S-k)*t,D=x-(x-C)*t}let t;t=e<f?0:e>v?1:(f-e)/(f-v),I=p-(p-b)*t,L=y-(y-E)*t,O=_-(_-k)*t,N=A-(A-C)*t;const n=Math.round(Math.min(M,I)),r=Math.round(Math.max(M,I));let i=d*e+4*n;for(let e=n;e<=r;e++)t=(M-e)/(M-I),t<0?t=0:t>1&&(t=1),u[i++]=R-(R-L)*t|0,u[i++]=F-(F-O)*t|0,u[i++]=D-(D-N)*t|0,u[i++]=255}}function u(e,t,n){const r=t.coords,i=t.colors;let a,s;switch(t.type){case"lattice":const o=t.verticesPerRow,l=Math.floor(r.length/o)-1,u=o-1;for(a=0;a<l;a++){let t=a*o;for(let a=0;a<u;a++,t++)c(e,n,r[t],r[t+1],r[t+o],i[t],i[t+1],i[t+o]),c(e,n,r[t+o+1],r[t+1],r[t+o],i[t+o+1],i[t+1],i[t+o])}break;case"triangles":for(a=0,s=r.length;a<s;a+=3)c(e,n,r[a],r[a+1],r[a+2],i[a],i[a+1],i[a+2]);break;default:throw new Error("illegal figure")}}class d extends o{constructor(e){super(),this._coords=e[2],this._colors=e[3],this._figures=e[4],this._bounds=e[5],this._bbox=e[7],this._background=e[8],this.matrix=null}_createMeshCanvas(e,t,n){const r=Math.floor(this._bounds[0]),i=Math.floor(this._bounds[1]),a=Math.ceil(this._bounds[2])-r,s=Math.ceil(this._bounds[3])-i,o=Math.min(Math.ceil(Math.abs(a*e[0]*1.1)),3e3),l=Math.min(Math.ceil(Math.abs(s*e[1]*1.1)),3e3),c=a/o,d=s/l,h={coords:this._coords,colors:this._colors,offsetX:-r,offsetY:-i,scaleX:1/c,scaleY:1/d},p=o+4,f=l+4,g=n.getCanvas("mesh",p,f,!1),m=g.context,b=m.createImageData(o,l);if(t){const e=b.data;for(let n=0,r=e.length;n<r;n+=4)e[n]=t[0],e[n+1]=t[1],e[n+2]=t[2],e[n+3]=255}for(const e of this._figures)u(b,e,h);return m.putImageData(b,2,2),{canvas:g.canvas,offsetX:r-2*c,offsetY:i-2*d,scaleX:c,scaleY:d}}getPattern(e,t,n,o){let l;if(s(e,this._bbox),o===a.SHADING)l=r.Util.singularValueDecompose2dScale((0,i.getCurrentTransform)(e));else if(l=r.Util.singularValueDecompose2dScale(t.baseTransform),this.matrix){const e=r.Util.singularValueDecompose2dScale(this.matrix);l=[l[0]*e[0],l[1]*e[1]]}const c=this._createMeshCanvas(l,o===a.SHADING?null:this._background,t.cachedCanvases);return o!==a.SHADING&&(e.setTransform(...t.baseTransform),this.matrix&&e.transform(...this.matrix)),e.translate(c.offsetX,c.offsetY),e.scale(c.scaleX,c.scaleY),e.createPattern(c.canvas,"no-repeat")}}class h extends o{getPattern(){return"hotpink"}}class p{static MAX_PATTERN_SIZE=3e3;constructor(e,t,n,r,i){this.operatorList=e[2],this.matrix=e[3]||[1,0,0,1,0,0],this.bbox=e[4],this.xstep=e[5],this.ystep=e[6],this.paintType=e[7],this.tilingType=e[8],this.color=t,this.ctx=n,this.canvasGraphicsFactory=r,this.baseTransform=i}createPatternCanvas(e){const t=this.operatorList,n=this.bbox,a=this.xstep,s=this.ystep,o=this.paintType,l=this.tilingType,c=this.color,u=this.canvasGraphicsFactory;(0,r.info)("TilingType: "+l);const d=n[0],h=n[1],p=n[2],f=n[3],g=r.Util.singularValueDecompose2dScale(this.matrix),m=r.Util.singularValueDecompose2dScale(this.baseTransform),b=[g[0]*m[0],g[1]*m[1]],v=this.getSizeAndScale(a,this.ctx.canvas.width,b[0]),y=this.getSizeAndScale(s,this.ctx.canvas.height,b[1]),_=e.cachedCanvases.getCanvas("pattern",v.size,y.size,!0),A=_.context,w=u.createCanvasGraphics(A);w.groupLevel=e.groupLevel,this.setFillAndStrokeStyleToContext(w,o,c);let S=d,x=h,E=p,k=f;return d<0&&(S=0,E+=Math.abs(d)),h<0&&(x=0,k+=Math.abs(h)),A.translate(-v.scale*S,-y.scale*x),w.transform(v.scale,0,0,y.scale,0,0),A.save(),this.clipBbox(w,S,x,E,k),w.baseTransform=(0,i.getCurrentTransform)(w.ctx),w.executeOperatorList(t),w.endDrawing(),{canvas:_.canvas,scaleX:v.scale,scaleY:y.scale,offsetX:S,offsetY:x}}getSizeAndScale(e,t,n){e=Math.abs(e);const r=Math.max(p.MAX_PATTERN_SIZE,t);let i=Math.ceil(e*n);return i>=r?i=r:n=i/e,{scale:n,size:i}}clipBbox(e,t,n,r,a){const s=r-t,o=a-n;e.ctx.rect(t,n,s,o),e.current.updateRectMinMax((0,i.getCurrentTransform)(e.ctx),[t,n,r,a]),e.clip(),e.endPath()}setFillAndStrokeStyleToContext(e,t,n){const i=e.ctx,a=e.current;switch(t){case 1:const e=this.ctx;i.fillStyle=e.fillStyle,i.strokeStyle=e.strokeStyle,a.fillColor=e.fillStyle,a.strokeColor=e.strokeStyle;break;case 2:const s=r.Util.makeHexColor(n[0],n[1],n[2]);i.fillStyle=s,i.strokeStyle=s,a.fillColor=s,a.strokeColor=s;break;default:throw new r.FormatError(`Unsupported paint type: ${t}`)}}getPattern(e,t,n,i){let s=n;i!==a.SHADING&&(s=r.Util.transform(s,t.baseTransform),this.matrix&&(s=r.Util.transform(s,this.matrix)));const o=this.createPatternCanvas(t);let l=new DOMMatrix(s);l=l.translate(o.offsetX,o.offsetY),l=l.scale(1/o.scaleX,1/o.scaleY);const c=e.createPattern(o.canvas,"repeat");return c.setTransform(l),c}}t.TilingPattern=p},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertBlackAndWhiteToRGBA=i,t.convertToRGBA=function(e){switch(e.kind){case r.ImageKind.GRAYSCALE_1BPP:return i(e);case r.ImageKind.RGB_24BPP:return function({src:e,srcPos:t=0,dest:n,destPos:i=0,width:a,height:s}){let o=0;const l=e.length>>2,c=new Uint32Array(e.buffer,t,l);if(r.FeatureTest.isLittleEndian){for(;o<l-2;o+=3,i+=4){const e=c[o],t=c[o+1],r=c[o+2];n[i]=4278190080|e,n[i+1]=e>>>24|t<<8|4278190080,n[i+2]=t>>>16|r<<16|4278190080,n[i+3]=r>>>8|4278190080}for(let t=4*o,r=e.length;t<r;t+=3)n[i++]=e[t]|e[t+1]<<8|e[t+2]<<16|4278190080}else{for(;o<l-2;o+=3,i+=4){const e=c[o],t=c[o+1],r=c[o+2];n[i]=255|e,n[i+1]=e<<24|t>>>8|255,n[i+2]=t<<16|r>>>16|255,n[i+3]=r<<8|255}for(let t=4*o,r=e.length;t<r;t+=3)n[i++]=e[t]<<24|e[t+1]<<16|e[t+2]<<8|255}return{srcPos:t,destPos:i}}(e)}return null},t.grayToRGBA=function(e,t){if(r.FeatureTest.isLittleEndian)for(let n=0,r=e.length;n<r;n++)t[n]=65793*e[n]|4278190080;else for(let n=0,r=e.length;n<r;n++)t[n]=16843008*e[n]|255};var r=n(1);function i({src:e,srcPos:t=0,dest:n,width:i,height:a,nonBlackColor:s=4294967295,inverseDecode:o=!1}){const l=r.FeatureTest.isLittleEndian?4278190080:255,[c,u]=o?[s,l]:[l,s],d=i>>3,h=7&i,p=e.length;n=new Uint32Array(n.buffer);let f=0;for(let r=0;r<a;r++){for(const r=t+d;t<r;t++){const r=t<p?e[t]:255;n[f++]=128&r?u:c,n[f++]=64&r?u:c,n[f++]=32&r?u:c,n[f++]=16&r?u:c,n[f++]=8&r?u:c,n[f++]=4&r?u:c,n[f++]=2&r?u:c,n[f++]=1&r?u:c}if(0===h)continue;const r=t<p?e[t++]:255;for(let e=0;e<h;e++)n[f++]=r&1<<7-e?u:c}return{srcPos:t,destPos:f}}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GlobalWorkerOptions=void 0;const n=Object.create(null);t.GlobalWorkerOptions=n,n.workerPort=null,n.workerSrc=""},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MessageHandler=void 0;var r=n(1);function i(e){switch(e instanceof Error||"object"==typeof e&&null!==e||(0,r.unreachable)('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),e.name){case"AbortException":return new r.AbortException(e.message);case"MissingPDFException":return new r.MissingPDFException(e.message);case"PasswordException":return new r.PasswordException(e.message,e.code);case"UnexpectedResponseException":return new r.UnexpectedResponseException(e.message,e.status);case"UnknownErrorException":return new r.UnknownErrorException(e.message,e.details);default:return new r.UnknownErrorException(e.message,e.toString())}}t.MessageHandler=class{constructor(e,t,n){this.sourceName=e,this.targetName=t,this.comObj=n,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=e=>{const t=e.data;if(t.targetName!==this.sourceName)return;if(t.stream)return void this.#dt(t);if(t.callback){const e=t.callbackId,n=this.callbackCapabilities[e];if(!n)throw new Error(`Cannot resolve callback ${e}`);if(delete this.callbackCapabilities[e],1===t.callback)n.resolve(t.data);else{if(2!==t.callback)throw new Error("Unexpected callback case");n.reject(i(t.reason))}return}const r=this.actionHandler[t.action];if(!r)throw new Error(`Unknown action from worker: ${t.action}`);if(t.callbackId){const e=this.sourceName,a=t.sourceName;new Promise((function(e){e(r(t.data))})).then((function(r){n.postMessage({sourceName:e,targetName:a,callback:1,callbackId:t.callbackId,data:r})}),(function(r){n.postMessage({sourceName:e,targetName:a,callback:2,callbackId:t.callbackId,reason:i(r)})}))}else t.streamId?this.#ht(t):r(t.data)},n.addEventListener("message",this._onComObjOnMessage)}on(e,t){const n=this.actionHandler;if(n[e])throw new Error(`There is already an actionName called "${e}"`);n[e]=t}send(e,t,n){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,data:t},n)}sendWithPromise(e,t,n){const i=this.callbackId++,a=new r.PromiseCapability;this.callbackCapabilities[i]=a;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,callbackId:i,data:t},n)}catch(e){a.reject(e)}return a.promise}sendWithStream(e,t,n,a){const s=this.streamId++,o=this.sourceName,l=this.targetName,c=this.comObj;return new ReadableStream({start:n=>{const i=new r.PromiseCapability;return this.streamControllers[s]={controller:n,startCall:i,pullCall:null,cancelCall:null,isClosed:!1},c.postMessage({sourceName:o,targetName:l,action:e,streamId:s,data:t,desiredSize:n.desiredSize},a),i.promise},pull:e=>{const t=new r.PromiseCapability;return this.streamControllers[s].pullCall=t,c.postMessage({sourceName:o,targetName:l,stream:6,streamId:s,desiredSize:e.desiredSize}),t.promise},cancel:e=>{(0,r.assert)(e instanceof Error,"cancel must have a valid reason");const t=new r.PromiseCapability;return this.streamControllers[s].cancelCall=t,this.streamControllers[s].isClosed=!0,c.postMessage({sourceName:o,targetName:l,stream:1,streamId:s,reason:i(e)}),t.promise}},n)}#ht(e){const t=e.streamId,n=this.sourceName,a=e.sourceName,s=this.comObj,o=this,l=this.actionHandler[e.action],c={enqueue(e,i=1,o){if(this.isCancelled)return;const l=this.desiredSize;this.desiredSize-=i,l>0&&this.desiredSize<=0&&(this.sinkCapability=new r.PromiseCapability,this.ready=this.sinkCapability.promise),s.postMessage({sourceName:n,targetName:a,stream:4,streamId:t,chunk:e},o)},close(){this.isCancelled||(this.isCancelled=!0,s.postMessage({sourceName:n,targetName:a,stream:3,streamId:t}),delete o.streamSinks[t])},error(e){(0,r.assert)(e instanceof Error,"error must have a valid reason"),this.isCancelled||(this.isCancelled=!0,s.postMessage({sourceName:n,targetName:a,stream:5,streamId:t,reason:i(e)}))},sinkCapability:new r.PromiseCapability,onPull:null,onCancel:null,isCancelled:!1,desiredSize:e.desiredSize,ready:null};c.sinkCapability.resolve(),c.ready=c.sinkCapability.promise,this.streamSinks[t]=c,new Promise((function(t){t(l(e.data,c))})).then((function(){s.postMessage({sourceName:n,targetName:a,stream:8,streamId:t,success:!0})}),(function(e){s.postMessage({sourceName:n,targetName:a,stream:8,streamId:t,reason:i(e)})}))}#dt(e){const t=e.streamId,n=this.sourceName,a=e.sourceName,s=this.comObj,o=this.streamControllers[t],l=this.streamSinks[t];switch(e.stream){case 8:e.success?o.startCall.resolve():o.startCall.reject(i(e.reason));break;case 7:e.success?o.pullCall.resolve():o.pullCall.reject(i(e.reason));break;case 6:if(!l){s.postMessage({sourceName:n,targetName:a,stream:7,streamId:t,success:!0});break}l.desiredSize<=0&&e.desiredSize>0&&l.sinkCapability.resolve(),l.desiredSize=e.desiredSize,new Promise((function(e){e(l.onPull?.())})).then((function(){s.postMessage({sourceName:n,targetName:a,stream:7,streamId:t,success:!0})}),(function(e){s.postMessage({sourceName:n,targetName:a,stream:7,streamId:t,reason:i(e)})}));break;case 4:if((0,r.assert)(o,"enqueue should have stream controller"),o.isClosed)break;o.controller.enqueue(e.chunk);break;case 3:if((0,r.assert)(o,"close should have stream controller"),o.isClosed)break;o.isClosed=!0,o.controller.close(),this.#pt(o,t);break;case 5:(0,r.assert)(o,"error should have stream controller"),o.controller.error(i(e.reason)),this.#pt(o,t);break;case 2:e.success?o.cancelCall.resolve():o.cancelCall.reject(i(e.reason)),this.#pt(o,t);break;case 1:if(!l)break;new Promise((function(t){t(l.onCancel?.(i(e.reason)))})).then((function(){s.postMessage({sourceName:n,targetName:a,stream:2,streamId:t,success:!0})}),(function(e){s.postMessage({sourceName:n,targetName:a,stream:2,streamId:t,reason:i(e)})})),l.sinkCapability.reject(i(e.reason)),l.isCancelled=!0,delete this.streamSinks[t];break;default:throw new Error("Unexpected stream case")}}async#pt(e,t){await Promise.allSettled([e.startCall?.promise,e.pullCall?.promise,e.cancelCall?.promise]),delete this.streamControllers[t]}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Metadata=void 0;var r=n(1);t.Metadata=class{#ft;#gt;constructor({parsedData:e,rawData:t}){this.#ft=e,this.#gt=t}getRaw(){return this.#gt}get(e){return this.#ft.get(e)??null}getAll(){return(0,r.objectFromMap)(this.#ft)}has(e){return this.#ft.has(e)}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OptionalContentConfig=void 0;var r=n(1),i=n(8);const a=Symbol("INTERNAL");class s{#mt=!0;constructor(e,t){this.name=e,this.intent=t}get visible(){return this.#mt}_setVisible(e,t){e!==a&&(0,r.unreachable)("Internal method `_setVisible` called."),this.#mt=t}}t.OptionalContentConfig=class{#bt=null;#vt=new Map;#yt=null;#_t=null;constructor(e){if(this.name=null,this.creator=null,null!==e){this.name=e.name,this.creator=e.creator,this.#_t=e.order;for(const t of e.groups)this.#vt.set(t.id,new s(t.name,t.intent));if("OFF"===e.baseState)for(const e of this.#vt.values())e._setVisible(a,!1);for(const t of e.on)this.#vt.get(t)._setVisible(a,!0);for(const t of e.off)this.#vt.get(t)._setVisible(a,!1);this.#yt=this.getHash()}}#At(e){const t=e.length;if(t<2)return!0;const n=e[0];for(let i=1;i<t;i++){const t=e[i];let a;if(Array.isArray(t))a=this.#At(t);else{if(!this.#vt.has(t))return(0,r.warn)(`Optional content group not found: ${t}`),!0;a=this.#vt.get(t).visible}switch(n){case"And":if(!a)return!1;break;case"Or":if(a)return!0;break;case"Not":return!a;default:return!0}}return"And"===n}isVisible(e){if(0===this.#vt.size)return!0;if(!e)return(0,r.warn)("Optional content group not defined."),!0;if("OCG"===e.type)return this.#vt.has(e.id)?this.#vt.get(e.id).visible:((0,r.warn)(`Optional content group not found: ${e.id}`),!0);if("OCMD"===e.type){if(e.expression)return this.#At(e.expression);if(!e.policy||"AnyOn"===e.policy){for(const t of e.ids){if(!this.#vt.has(t))return(0,r.warn)(`Optional content group not found: ${t}`),!0;if(this.#vt.get(t).visible)return!0}return!1}if("AllOn"===e.policy){for(const t of e.ids){if(!this.#vt.has(t))return(0,r.warn)(`Optional content group not found: ${t}`),!0;if(!this.#vt.get(t).visible)return!1}return!0}if("AnyOff"===e.policy){for(const t of e.ids){if(!this.#vt.has(t))return(0,r.warn)(`Optional content group not found: ${t}`),!0;if(!this.#vt.get(t).visible)return!0}return!1}if("AllOff"===e.policy){for(const t of e.ids){if(!this.#vt.has(t))return(0,r.warn)(`Optional content group not found: ${t}`),!0;if(this.#vt.get(t).visible)return!1}return!0}return(0,r.warn)(`Unknown optional content policy ${e.policy}.`),!0}return(0,r.warn)(`Unknown group type ${e.type}.`),!0}setVisibility(e,t=!0){this.#vt.has(e)?(this.#vt.get(e)._setVisible(a,!!t),this.#bt=null):(0,r.warn)(`Optional content group not found: ${e}`)}get hasInitialVisibility(){return null===this.#yt||this.getHash()===this.#yt}getOrder(){return this.#vt.size?this.#_t?this.#_t.slice():[...this.#vt.keys()]:null}getGroups(){return this.#vt.size>0?(0,r.objectFromMap)(this.#vt):null}getGroup(e){return this.#vt.get(e)||null}getHash(){if(null!==this.#bt)return this.#bt;const e=new i.MurmurHash3_64;for(const[t,n]of this.#vt)e.update(`${t}:${n.visible}`);return this.#bt=e.hexdigest()}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PDFDataTransportStream=void 0;var r=n(1),i=n(6);t.PDFDataTransportStream=class{constructor({length:e,initialData:t,progressiveDone:n=!1,contentDispositionFilename:i=null,disableRange:a=!1,disableStream:s=!1},o){if((0,r.assert)(o,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.'),this._queuedChunks=[],this._progressiveDone=n,this._contentDispositionFilename=i,t?.length>0){const e=t instanceof Uint8Array&&t.byteLength===t.buffer.byteLength?t.buffer:new Uint8Array(t).buffer;this._queuedChunks.push(e)}this._pdfDataRangeTransport=o,this._isStreamingSupported=!s,this._isRangeSupported=!a,this._contentLength=e,this._fullRequestReader=null,this._rangeReaders=[],this._pdfDataRangeTransport.addRangeListener(((e,t)=>{this._onReceiveData({begin:e,chunk:t})})),this._pdfDataRangeTransport.addProgressListener(((e,t)=>{this._onProgress({loaded:e,total:t})})),this._pdfDataRangeTransport.addProgressiveReadListener((e=>{this._onReceiveData({chunk:e})})),this._pdfDataRangeTransport.addProgressiveDoneListener((()=>{this._onProgressiveDone()})),this._pdfDataRangeTransport.transportReady()}_onReceiveData({begin:e,chunk:t}){const n=t instanceof Uint8Array&&t.byteLength===t.buffer.byteLength?t.buffer:new Uint8Array(t).buffer;if(void 0===e)this._fullRequestReader?this._fullRequestReader._enqueue(n):this._queuedChunks.push(n);else{const t=this._rangeReaders.some((function(t){return t._begin===e&&(t._enqueue(n),!0)}));(0,r.assert)(t,"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}_onProgress(e){void 0===e.total?this._rangeReaders[0]?.onProgress?.({loaded:e.loaded}):this._fullRequestReader?.onProgress?.({loaded:e.loaded,total:e.total})}_onProgressiveDone(){this._fullRequestReader?.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(e){const t=this._rangeReaders.indexOf(e);t>=0&&this._rangeReaders.splice(t,1)}getFullReader(){(0,r.assert)(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const e=this._queuedChunks;return this._queuedChunks=null,new a(this,e,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(e,t){if(t<=this._progressiveDataLength)return null;const n=new s(this,e,t);return this._pdfDataRangeTransport.requestDataRange(e,t),this._rangeReaders.push(n),n}cancelAllRequests(e){this._fullRequestReader?.cancel(e);for(const t of this._rangeReaders.slice(0))t.cancel(e);this._pdfDataRangeTransport.abort()}};class a{constructor(e,t,n=!1,r=null){this._stream=e,this._done=n||!1,this._filename=(0,i.isPdfFile)(r)?r:null,this._queuedChunks=t||[],this._loaded=0;for(const e of this._queuedChunks)this._loaded+=e.byteLength;this._requests=[],this._headersReady=Promise.resolve(),e._fullRequestReader=this,this.onProgress=null}_enqueue(e){this._done||(this._requests.length>0?this._requests.shift().resolve({value:e,done:!1}):this._queuedChunks.push(e),this._loaded+=e.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const e=new r.PromiseCapability;return this._requests.push(e),e.promise}cancel(e){this._done=!0;for(const e of this._requests)e.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class s{constructor(e,t,n){this._stream=e,this._begin=t,this._end=n,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(e){if(!this._done){if(0===this._requests.length)this._queuedChunk=e;else{this._requests.shift().resolve({value:e,done:!1});for(const e of this._requests)e.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const e=this._queuedChunk;return this._queuedChunk=null,{value:e,done:!1}}if(this._done)return{value:void 0,done:!0};const e=new r.PromiseCapability;return this._requests.push(e),e.promise}cancel(e){this._done=!0;for(const e of this._requests)e.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PDFFetchStream=void 0;var r=n(1),i=n(20);function a(e,t,n){return{method:"GET",headers:e,signal:n.signal,mode:"cors",credentials:t?"include":"same-origin",redirect:"follow"}}function s(e){const t=new Headers;for(const n in e){const r=e[n];void 0!==r&&t.append(n,r)}return t}function o(e){return e instanceof Uint8Array?e.buffer:e instanceof ArrayBuffer?e:((0,r.warn)(`getArrayBuffer - unexpected data format: ${e}`),new Uint8Array(e).buffer)}t.PDFFetchStream=class{constructor(e){this.source=e,this.isHttp=/^https?:/i.test(e.url),this.httpHeaders=this.isHttp&&e.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){return(0,r.assert)(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new l(this),this._fullRequestReader}getRangeReader(e,t){if(t<=this._progressiveDataLength)return null;const n=new c(this,e,t);return this._rangeRequestReaders.push(n),n}cancelAllRequests(e){this._fullRequestReader?.cancel(e);for(const t of this._rangeRequestReaders.slice(0))t.cancel(e)}};class l{constructor(e){this._stream=e,this._reader=null,this._loaded=0,this._filename=null;const t=e.source;this._withCredentials=t.withCredentials||!1,this._contentLength=t.length,this._headersCapability=new r.PromiseCapability,this._disableRange=t.disableRange||!1,this._rangeChunkSize=t.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!t.disableStream,this._isRangeSupported=!t.disableRange,this._headers=s(this._stream.httpHeaders);const n=t.url;fetch(n,a(this._headers,this._withCredentials,this._abortController)).then((e=>{if(!(0,i.validateResponseStatus)(e.status))throw(0,i.createResponseStatusError)(e.status,n);this._reader=e.body.getReader(),this._headersCapability.resolve();const t=t=>e.headers.get(t),{allowRangeRequests:a,suggestedLength:s}=(0,i.validateRangeRequestCapabilities)({getResponseHeader:t,isHttp:this._stream.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=a,this._contentLength=s||this._contentLength,this._filename=(0,i.extractFilenameFromHeader)(t),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new r.AbortException("Streaming is disabled."))})).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._headersCapability.promise;const{value:e,done:t}=await this._reader.read();return t?{value:e,done:t}:(this._loaded+=e.byteLength,this.onProgress?.({loaded:this._loaded,total:this._contentLength}),{value:o(e),done:!1})}cancel(e){this._reader?.cancel(e),this._abortController.abort()}}class c{constructor(e,t,n){this._stream=e,this._reader=null,this._loaded=0;const o=e.source;this._withCredentials=o.withCredentials||!1,this._readCapability=new r.PromiseCapability,this._isStreamingSupported=!o.disableStream,this._abortController=new AbortController,this._headers=s(this._stream.httpHeaders),this._headers.append("Range",`bytes=${t}-${n-1}`);const l=o.url;fetch(l,a(this._headers,this._withCredentials,this._abortController)).then((e=>{if(!(0,i.validateResponseStatus)(e.status))throw(0,i.createResponseStatusError)(e.status,l);this._readCapability.resolve(),this._reader=e.body.getReader()})).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;const{value:e,done:t}=await this._reader.read();return t?{value:e,done:t}:(this._loaded+=e.byteLength,this.onProgress?.({loaded:this._loaded}),{value:o(e),done:!1})}cancel(e){this._reader?.cancel(e),this._abortController.abort()}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createResponseStatusError=function(e,t){return 404===e||0===e&&t.startsWith("file:")?new r.MissingPDFException('Missing PDF "'+t+'".'):new r.UnexpectedResponseException(`Unexpected server response (${e}) while retrieving PDF "${t}".`,e)},t.extractFilenameFromHeader=function(e){const t=e("Content-Disposition");if(t){let e=(0,i.getFilenameFromContentDispositionHeader)(t);if(e.includes("%"))try{e=decodeURIComponent(e)}catch{}if((0,a.isPdfFile)(e))return e}return null},t.validateRangeRequestCapabilities=function({getResponseHeader:e,isHttp:t,rangeChunkSize:n,disableRange:r}){const i={allowRangeRequests:!1,suggestedLength:void 0},a=parseInt(e("Content-Length"),10);return Number.isInteger(a)?(i.suggestedLength=a,a<=2*n||r||!t||"bytes"!==e("Accept-Ranges")||"identity"!==(e("Content-Encoding")||"identity")||(i.allowRangeRequests=!0),i):i},t.validateResponseStatus=function(e){return 200===e||206===e};var r=n(1),i=n(21),a=n(6)},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getFilenameFromContentDispositionHeader=function(e){let t=!0,n=i("filename\\*","i").exec(e);if(n){n=n[1];let e=o(n);return e=unescape(e),e=l(e),e=c(e),s(e)}if(n=function(e){const t=[];let n;const r=i("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;null!==(n=r.exec(e));){let[,e,r,i]=n;if(e=parseInt(e,10),e in t){if(0===e)break}else t[e]=[r,i]}const a=[];for(let e=0;e<t.length&&e in t;++e){let[n,r]=t[e];r=o(r),n&&(r=unescape(r),0===e&&(r=l(r))),a.push(r)}return a.join("")}(e),n)return s(c(n));if(n=i("filename","i").exec(e),n){n=n[1];let e=o(n);return e=c(e),s(e)}function i(e,t){return new RegExp("(?:^|;)\\s*"+e+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',t)}function a(e,n){if(e){if(!/^[\x00-\xFF]+$/.test(n))return n;try{const i=new TextDecoder(e,{fatal:!0}),a=(0,r.stringToBytes)(n);n=i.decode(a),t=!1}catch{}}return n}function s(e){return t&&/[\x80-\xff]/.test(e)&&(e=a("utf-8",e),t&&(e=a("iso-8859-1",e))),e}function o(e){if(e.startsWith('"')){const t=e.slice(1).split('\\"');for(let e=0;e<t.length;++e){const n=t[e].indexOf('"');-1!==n&&(t[e]=t[e].slice(0,n),t.length=e+1),t[e]=t[e].replaceAll(/\\(.)/g,"$1")}e=t.join('"')}return e}function l(e){const t=e.indexOf("'");return-1===t?e:a(e.slice(0,t),e.slice(t+1).replace(/^[^']*'/,""))}function c(e){return!e.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(e)?e:e.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,(function(e,t,n,r){if("q"===n||"Q"===n)return a(t,r=(r=r.replaceAll("_"," ")).replaceAll(/=([0-9a-fA-F]{2})/g,(function(e,t){return String.fromCharCode(parseInt(t,16))})));try{r=atob(r)}catch{}return a(t,r)}))}return""};var r=n(1)},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PDFNetworkStream=void 0;var r=n(1),i=n(20);class a{constructor(e,t={}){this.url=e,this.isHttp=/^https?:/i.test(e),this.httpHeaders=this.isHttp&&t.httpHeaders||Object.create(null),this.withCredentials=t.withCredentials||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}requestRange(e,t,n){const r={begin:e,end:t};for(const e in n)r[e]=n[e];return this.request(r)}requestFull(e){return this.request(e)}request(e){const t=new XMLHttpRequest,n=this.currXhrId++,r=this.pendingRequests[n]={xhr:t};t.open("GET",this.url),t.withCredentials=this.withCredentials;for(const e in this.httpHeaders){const n=this.httpHeaders[e];void 0!==n&&t.setRequestHeader(e,n)}return this.isHttp&&"begin"in e&&"end"in e?(t.setRequestHeader("Range",`bytes=${e.begin}-${e.end-1}`),r.expectedStatus=206):r.expectedStatus=200,t.responseType="arraybuffer",e.onError&&(t.onerror=function(n){e.onError(t.status)}),t.onreadystatechange=this.onStateChange.bind(this,n),t.onprogress=this.onProgress.bind(this,n),r.onHeadersReceived=e.onHeadersReceived,r.onDone=e.onDone,r.onError=e.onError,r.onProgress=e.onProgress,t.send(null),n}onProgress(e,t){const n=this.pendingRequests[e];n&&n.onProgress?.(t)}onStateChange(e,t){const n=this.pendingRequests[e];if(!n)return;const i=n.xhr;if(i.readyState>=2&&n.onHeadersReceived&&(n.onHeadersReceived(),delete n.onHeadersReceived),4!==i.readyState)return;if(!(e in this.pendingRequests))return;if(delete this.pendingRequests[e],0===i.status&&this.isHttp)return void n.onError?.(i.status);const a=i.status||200;if((200!==a||206!==n.expectedStatus)&&a!==n.expectedStatus)return void n.onError?.(i.status);const s=function(e){const t=e.response;return"string"!=typeof t?t:(0,r.stringToBytes)(t).buffer}(i);if(206===a){const e=i.getResponseHeader("Content-Range"),t=/bytes (\d+)-(\d+)\/(\d+)/.exec(e);n.onDone({begin:parseInt(t[1],10),chunk:s})}else s?n.onDone({begin:0,chunk:s}):n.onError?.(i.status)}getRequestXhr(e){return this.pendingRequests[e].xhr}isPendingRequest(e){return e in this.pendingRequests}abortRequest(e){const t=this.pendingRequests[e].xhr;delete this.pendingRequests[e],t.abort()}}t.PDFNetworkStream=class{constructor(e){this._source=e,this._manager=new a(e.url,{httpHeaders:e.httpHeaders,withCredentials:e.withCredentials}),this._rangeChunkSize=e.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(e){const t=this._rangeRequestReaders.indexOf(e);t>=0&&this._rangeRequestReaders.splice(t,1)}getFullReader(){return(0,r.assert)(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new s(this._manager,this._source),this._fullRequestReader}getRangeReader(e,t){const n=new o(this._manager,e,t);return n.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(n),n}cancelAllRequests(e){this._fullRequestReader?.cancel(e);for(const t of this._rangeRequestReaders.slice(0))t.cancel(e)}};class s{constructor(e,t){this._manager=e;const n={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=t.url,this._fullRequestId=e.requestFull(n),this._headersReceivedCapability=new r.PromiseCapability,this._disableRange=t.disableRange||!1,this._contentLength=t.length,this._rangeChunkSize=t.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const e=this._fullRequestId,t=this._manager.getRequestXhr(e),n=e=>t.getResponseHeader(e),{allowRangeRequests:r,suggestedLength:a}=(0,i.validateRangeRequestCapabilities)({getResponseHeader:n,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});r&&(this._isRangeSupported=!0),this._contentLength=a||this._contentLength,this._filename=(0,i.extractFilenameFromHeader)(n),this._isRangeSupported&&this._manager.abortRequest(e),this._headersReceivedCapability.resolve()}_onDone(e){if(e&&(this._requests.length>0?this._requests.shift().resolve({value:e.chunk,done:!1}):this._cachedChunks.push(e.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const e of this._requests)e.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(e){this._storedError=(0,i.createResponseStatusError)(e,this._url),this._headersReceivedCapability.reject(this._storedError);for(const e of this._requests)e.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(e){this.onProgress?.({loaded:e.loaded,total:e.lengthComputable?e.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersReceivedCapability.promise}async read(){if(this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const e=new r.PromiseCapability;return this._requests.push(e),e.promise}cancel(e){this._done=!0,this._headersReceivedCapability.reject(e);for(const e of this._requests)e.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class o{constructor(e,t,n){this._manager=e;const r={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=e.url,this._requestId=e.requestRange(t,n,r),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_close(){this.onClosed?.(this)}_onDone(e){const t=e.chunk;this._requests.length>0?this._requests.shift().resolve({value:t,done:!1}):this._queuedChunk=t,this._done=!0;for(const e of this._requests)e.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(e){this._storedError=(0,i.createResponseStatusError)(e,this._url);for(const e of this._requests)e.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(e){this.isStreamingSupported||this.onProgress?.({loaded:e.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(null!==this._queuedChunk){const e=this._queuedChunk;return this._queuedChunk=null,{value:e,done:!1}}if(this._done)return{value:void 0,done:!0};const e=new r.PromiseCapability;return this._requests.push(e),e.promise}cancel(e){this._done=!0;for(const e of this._requests)e.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PDFNodeStream=void 0;var r=n(1),i=n(20);const a=/^file:\/\/\/[a-zA-Z]:\//;t.PDFNodeStream=class{constructor(e){this.source=e,this.url=function(e){const t=__webpack_require__(671),n=t.parse(e);return"file:"===n.protocol||n.host?n:/^[a-z]:[/\\]/i.test(e)?t.parse(`file:///${e}`):(n.host||(n.protocol="file:"),n)}(e.url),this.isHttp="http:"===this.url.protocol||"https:"===this.url.protocol,this.isFsUrl="file:"===this.url.protocol,this.httpHeaders=this.isHttp&&e.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){return(0,r.assert)(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=this.isFsUrl?new d(this):new c(this),this._fullRequestReader}getRangeReader(e,t){if(t<=this._progressiveDataLength)return null;const n=this.isFsUrl?new h(this,e,t):new u(this,e,t);return this._rangeRequestReaders.push(n),n}cancelAllRequests(e){this._fullRequestReader?.cancel(e);for(const t of this._rangeRequestReaders.slice(0))t.cancel(e)}};class s{constructor(e){this._url=e.url,this._done=!1,this._storedError=null,this.onProgress=null;const t=e.source;this._contentLength=t.length,this._loaded=0,this._filename=null,this._disableRange=t.disableRange||!1,this._rangeChunkSize=t.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!t.disableStream,this._isRangeSupported=!t.disableRange,this._readableStream=null,this._readCapability=new r.PromiseCapability,this._headersCapability=new r.PromiseCapability}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const e=this._readableStream.read();return null===e?(this._readCapability=new r.PromiseCapability,this.read()):(this._loaded+=e.length,this.onProgress?.({loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(e).buffer,done:!1})}cancel(e){this._readableStream?this._readableStream.destroy(e):this._error(e)}_error(e){this._storedError=e,this._readCapability.resolve()}_setReadableStream(e){this._readableStream=e,e.on("readable",(()=>{this._readCapability.resolve()})),e.on("end",(()=>{e.destroy(),this._done=!0,this._readCapability.resolve()})),e.on("error",(e=>{this._error(e)})),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new r.AbortException("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class o{constructor(e){this._url=e.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=new r.PromiseCapability;const t=e.source;this._isStreamingSupported=!t.disableStream}get isStreamingSupported(){return this._isStreamingSupported}async read(){if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const e=this._readableStream.read();return null===e?(this._readCapability=new r.PromiseCapability,this.read()):(this._loaded+=e.length,this.onProgress?.({loaded:this._loaded}),{value:new Uint8Array(e).buffer,done:!1})}cancel(e){this._readableStream?this._readableStream.destroy(e):this._error(e)}_error(e){this._storedError=e,this._readCapability.resolve()}_setReadableStream(e){this._readableStream=e,e.on("readable",(()=>{this._readCapability.resolve()})),e.on("end",(()=>{e.destroy(),this._done=!0,this._readCapability.resolve()})),e.on("error",(e=>{this._error(e)})),this._storedError&&this._readableStream.destroy(this._storedError)}}function l(e,t){return{protocol:e.protocol,auth:e.auth,host:e.hostname,port:e.port,path:e.path,method:"GET",headers:t}}class c extends s{constructor(e){super(e);const t=t=>{if(404===t.statusCode){const e=new r.MissingPDFException(`Missing PDF "${this._url}".`);return this._storedError=e,void this._headersCapability.reject(e)}this._headersCapability.resolve(),this._setReadableStream(t);const n=e=>this._readableStream.headers[e.toLowerCase()],{allowRangeRequests:a,suggestedLength:s}=(0,i.validateRangeRequestCapabilities)({getResponseHeader:n,isHttp:e.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=a,this._contentLength=s||this._contentLength,this._filename=(0,i.extractFilenameFromHeader)(n)};if(this._request=null,"http:"===this._url.protocol){const n=__webpack_require__(492);this._request=n.request(l(this._url,e.httpHeaders),t)}else{const n=__webpack_require__(815);this._request=n.request(l(this._url,e.httpHeaders),t)}this._request.on("error",(e=>{this._storedError=e,this._headersCapability.reject(e)})),this._request.end()}}class u extends o{constructor(e,t,n){super(e),this._httpHeaders={};for(const t in e.httpHeaders){const n=e.httpHeaders[t];void 0!==n&&(this._httpHeaders[t]=n)}this._httpHeaders.Range=`bytes=${t}-${n-1}`;const i=e=>{if(404!==e.statusCode)this._setReadableStream(e);else{const e=new r.MissingPDFException(`Missing PDF "${this._url}".`);this._storedError=e}};if(this._request=null,"http:"===this._url.protocol){const e=__webpack_require__(492);this._request=e.request(l(this._url,this._httpHeaders),i)}else{const e=__webpack_require__(815);this._request=e.request(l(this._url,this._httpHeaders),i)}this._request.on("error",(e=>{this._storedError=e})),this._request.end()}}class d extends s{constructor(e){super(e);let t=decodeURIComponent(this._url.path);a.test(this._url.href)&&(t=t.replace(/^\//,""));const n=__webpack_require__(237);n.lstat(t,((e,i)=>{if(e)return"ENOENT"===e.code&&(e=new r.MissingPDFException(`Missing PDF "${t}".`)),this._storedError=e,void this._headersCapability.reject(e);this._contentLength=i.size,this._setReadableStream(n.createReadStream(t)),this._headersCapability.resolve()}))}}class h extends o{constructor(e,t,n){super(e);let r=decodeURIComponent(this._url.path);a.test(this._url.href)&&(r=r.replace(/^\//,""));const i=__webpack_require__(237);this._setReadableStream(i.createReadStream(r,{start:t,end:n-1}))}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SVGGraphics=void 0;var r=n(6),i=n(1);const a="normal",s="#000000",o=["butt","round","square"],l=["miter","round","bevel"],c=function(e,t="",n=!1){if(URL.createObjectURL&&"undefined"!=typeof Blob&&!n)return URL.createObjectURL(new Blob([e],{type:t}));const r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";let i=`data:${t};base64,`;for(let t=0,n=e.length;t<n;t+=3){const a=255&e[t],s=255&e[t+1],o=255&e[t+2];i+=r[a>>2]+r[(3&a)<<4|s>>4]+r[t+1<n?(15&s)<<2|o>>6:64]+r[t+2<n?63&o:64]}return i},u=function(){const e=new Uint8Array([137,80,78,71,13,10,26,10]),t=new Int32Array(256);for(let e=0;e<256;e++){let n=e;for(let e=0;e<8;e++)n=1&n?3988292384^n>>1&2147483647:n>>1&2147483647;t[e]=n}function n(e,n,r,i){let a=i;const s=n.length;r[a]=s>>24&255,r[a+1]=s>>16&255,r[a+2]=s>>8&255,r[a+3]=255&s,a+=4,r[a]=255&e.charCodeAt(0),r[a+1]=255&e.charCodeAt(1),r[a+2]=255&e.charCodeAt(2),r[a+3]=255&e.charCodeAt(3),a+=4,r.set(n,a),a+=n.length;const o=function(e,n,r){let i=-1;for(let a=n;a<r;a++){const n=255&(i^e[a]);i=i>>>8^t[n]}return~i}(r,i+4,a);r[a]=o>>24&255,r[a+1]=o>>16&255,r[a+2]=o>>8&255,r[a+3]=255&o}function r(e){let t=e.length;const n=65535,r=Math.ceil(t/n),i=new Uint8Array(2+t+5*r+4);let a=0;i[a++]=120,i[a++]=156;let s=0;for(;t>n;)i[a++]=0,i[a++]=255,i[a++]=255,i[a++]=0,i[a++]=0,i.set(e.subarray(s,s+n),a),a+=n,s+=n,t-=n;i[a++]=1,i[a++]=255&t,i[a++]=t>>8&255,i[a++]=255&~t,i[a++]=(65535&~t)>>8&255,i.set(e.subarray(s),a),a+=e.length-s;const o=function(e,t,n){let r=1,i=0;for(let t=0;t<n;++t)r=(r+(255&e[t]))%65521,i=(i+r)%65521;return i<<16|r}(e,0,e.length);return i[a++]=o>>24&255,i[a++]=o>>16&255,i[a++]=o>>8&255,i[a++]=255&o,i}return function(t,a,s){return function(t,a,s,o){const l=t.width,u=t.height;let d,h,p;const f=t.data;switch(a){case i.ImageKind.GRAYSCALE_1BPP:h=0,d=1,p=l+7>>3;break;case i.ImageKind.RGB_24BPP:h=2,d=8,p=3*l;break;case i.ImageKind.RGBA_32BPP:h=6,d=8,p=4*l;break;default:throw new Error("invalid format")}const g=new Uint8Array((1+p)*u);let m=0,b=0;for(let e=0;e<u;++e)g[m++]=0,g.set(f.subarray(b,b+p),m),b+=p,m+=p;if(a===i.ImageKind.GRAYSCALE_1BPP&&o){m=0;for(let e=0;e<u;e++){m++;for(let e=0;e<p;e++)g[m++]^=255}}const v=new Uint8Array([l>>24&255,l>>16&255,l>>8&255,255&l,u>>24&255,u>>16&255,u>>8&255,255&u,d,h,0,0,0]),y=function(e){if(!i.isNodeJS)return r(e);try{const t=parseInt(process.versions.node)>=8?e:Buffer.from(e),n=__webpack_require__(787).deflateSync(t,{level:9});return n instanceof Uint8Array?n:new Uint8Array(n)}catch(e){(0,i.warn)("Not compressing PNG because zlib.deflateSync is unavailable: "+e)}return r(e)}(g),_=e.length+36+v.length+y.length,A=new Uint8Array(_);let w=0;return A.set(e,w),w+=e.length,n("IHDR",v,A,w),w+=12+v.length,n("IDATA",y,A,w),w+=12+y.length,n("IEND",new Uint8Array(0),A,w),c(A,"image/png",s)}(t,void 0===t.kind?i.ImageKind.GRAYSCALE_1BPP:t.kind,a,s)}}();class d{constructor(){this.fontSizeScale=1,this.fontWeight=a,this.fontSize=0,this.textMatrix=i.IDENTITY_MATRIX,this.fontMatrix=i.FONT_IDENTITY_MATRIX,this.leading=0,this.textRenderingMode=i.TextRenderingMode.FILL,this.textMatrixScale=1,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRise=0,this.fillColor=s,this.strokeColor="#000000",this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.lineJoin="",this.lineCap="",this.miterLimit=0,this.dashArray=[],this.dashPhase=0,this.dependencies=[],this.activeClipUrl=null,this.clipGroup=null,this.maskId=""}clone(){return Object.create(this)}setCurrentPoint(e,t){this.x=e,this.y=t}}function h(e){if(Number.isInteger(e))return e.toString();const t=e.toFixed(10);let n=t.length-1;if("0"!==t[n])return t;do{n--}while("0"===t[n]);return t.substring(0,"."===t[n]?n:n+1)}function p(e){if(0===e[4]&&0===e[5]){if(0===e[1]&&0===e[2])return 1===e[0]&&1===e[3]?"":`scale(${h(e[0])} ${h(e[3])})`;if(e[0]===e[3]&&e[1]===-e[2])return`rotate(${h(180*Math.acos(e[0])/Math.PI)})`}else if(1===e[0]&&0===e[1]&&0===e[2]&&1===e[3])return`translate(${h(e[4])} ${h(e[5])})`;return`matrix(${h(e[0])} ${h(e[1])} ${h(e[2])} ${h(e[3])} ${h(e[4])} ${h(e[5])})`}let f=0,g=0,m=0;t.SVGGraphics=class{constructor(e,t,n=!1){(0,r.deprecated)("The SVG back-end is no longer maintained and *may* be removed in the future."),this.svgFactory=new r.DOMSVGFactory,this.current=new d,this.transformMatrix=i.IDENTITY_MATRIX,this.transformStack=[],this.extraStack=[],this.commonObjs=e,this.objs=t,this.pendingClip=null,this.pendingEOFill=!1,this.embedFonts=!1,this.embeddedFonts=Object.create(null),this.cssStyle=null,this.forceDataSchema=!!n,this._operatorIdMapping=[];for(const e in i.OPS)this._operatorIdMapping[i.OPS[e]]=e}getObject(e,t=null){return"string"==typeof e?e.startsWith("g_")?this.commonObjs.get(e):this.objs.get(e):t}save(){this.transformStack.push(this.transformMatrix);const e=this.current;this.extraStack.push(e),this.current=e.clone()}restore(){this.transformMatrix=this.transformStack.pop(),this.current=this.extraStack.pop(),this.pendingClip=null,this.tgrp=null}group(e){this.save(),this.executeOpTree(e),this.restore()}loadDependencies(e){const t=e.fnArray,n=e.argsArray;for(let e=0,r=t.length;e<r;e++)if(t[e]===i.OPS.dependency)for(const t of n[e]){const e=t.startsWith("g_")?this.commonObjs:this.objs,n=new Promise((n=>{e.get(t,n)}));this.current.dependencies.push(n)}return Promise.all(this.current.dependencies)}transform(e,t,n,r,a,s){const o=[e,t,n,r,a,s];this.transformMatrix=i.Util.transform(this.transformMatrix,o),this.tgrp=null}getSVG(e,t){this.viewport=t;const n=this._initialize(t);return this.loadDependencies(e).then((()=>(this.transformMatrix=i.IDENTITY_MATRIX,this.executeOpTree(this.convertOpList(e)),n)))}convertOpList(e){const t=this._operatorIdMapping,n=e.argsArray,r=e.fnArray,i=[];for(let e=0,a=r.length;e<a;e++){const a=r[e];i.push({fnId:a,fn:t[a],args:n[e]})}return function(e){let t=[];const n=[];for(const r of e)"save"!==r.fn?"restore"===r.fn?t=n.pop():t.push(r):(t.push({fnId:92,fn:"group",items:[]}),n.push(t),t=t.at(-1).items);return t}(i)}executeOpTree(e){for(const t of e){const e=t.fn,n=t.fnId,r=t.args;switch(0|n){case i.OPS.beginText:this.beginText();break;case i.OPS.dependency:break;case i.OPS.setLeading:this.setLeading(r);break;case i.OPS.setLeadingMoveText:this.setLeadingMoveText(r[0],r[1]);break;case i.OPS.setFont:this.setFont(r);break;case i.OPS.showText:case i.OPS.showSpacedText:this.showText(r[0]);break;case i.OPS.endText:this.endText();break;case i.OPS.moveText:this.moveText(r[0],r[1]);break;case i.OPS.setCharSpacing:this.setCharSpacing(r[0]);break;case i.OPS.setWordSpacing:this.setWordSpacing(r[0]);break;case i.OPS.setHScale:this.setHScale(r[0]);break;case i.OPS.setTextMatrix:this.setTextMatrix(r[0],r[1],r[2],r[3],r[4],r[5]);break;case i.OPS.setTextRise:this.setTextRise(r[0]);break;case i.OPS.setTextRenderingMode:this.setTextRenderingMode(r[0]);break;case i.OPS.setLineWidth:this.setLineWidth(r[0]);break;case i.OPS.setLineJoin:this.setLineJoin(r[0]);break;case i.OPS.setLineCap:this.setLineCap(r[0]);break;case i.OPS.setMiterLimit:this.setMiterLimit(r[0]);break;case i.OPS.setFillRGBColor:this.setFillRGBColor(r[0],r[1],r[2]);break;case i.OPS.setStrokeRGBColor:this.setStrokeRGBColor(r[0],r[1],r[2]);break;case i.OPS.setStrokeColorN:this.setStrokeColorN(r);break;case i.OPS.setFillColorN:this.setFillColorN(r);break;case i.OPS.shadingFill:this.shadingFill(r[0]);break;case i.OPS.setDash:this.setDash(r[0],r[1]);break;case i.OPS.setRenderingIntent:this.setRenderingIntent(r[0]);break;case i.OPS.setFlatness:this.setFlatness(r[0]);break;case i.OPS.setGState:this.setGState(r[0]);break;case i.OPS.fill:this.fill();break;case i.OPS.eoFill:this.eoFill();break;case i.OPS.stroke:this.stroke();break;case i.OPS.fillStroke:this.fillStroke();break;case i.OPS.eoFillStroke:this.eoFillStroke();break;case i.OPS.clip:this.clip("nonzero");break;case i.OPS.eoClip:this.clip("evenodd");break;case i.OPS.paintSolidColorImageMask:this.paintSolidColorImageMask();break;case i.OPS.paintImageXObject:this.paintImageXObject(r[0]);break;case i.OPS.paintInlineImageXObject:this.paintInlineImageXObject(r[0]);break;case i.OPS.paintImageMaskXObject:this.paintImageMaskXObject(r[0]);break;case i.OPS.paintFormXObjectBegin:this.paintFormXObjectBegin(r[0],r[1]);break;case i.OPS.paintFormXObjectEnd:this.paintFormXObjectEnd();break;case i.OPS.closePath:this.closePath();break;case i.OPS.closeStroke:this.closeStroke();break;case i.OPS.closeFillStroke:this.closeFillStroke();break;case i.OPS.closeEOFillStroke:this.closeEOFillStroke();break;case i.OPS.nextLine:this.nextLine();break;case i.OPS.transform:this.transform(r[0],r[1],r[2],r[3],r[4],r[5]);break;case i.OPS.constructPath:this.constructPath(r[0],r[1]);break;case i.OPS.endPath:this.endPath();break;case 92:this.group(t.items);break;default:(0,i.warn)(`Unimplemented operator ${e}`)}}}setWordSpacing(e){this.current.wordSpacing=e}setCharSpacing(e){this.current.charSpacing=e}nextLine(){this.moveText(0,this.current.leading)}setTextMatrix(e,t,n,r,i,a){const s=this.current;s.textMatrix=s.lineMatrix=[e,t,n,r,i,a],s.textMatrixScale=Math.hypot(e,t),s.x=s.lineX=0,s.y=s.lineY=0,s.xcoords=[],s.ycoords=[],s.tspan=this.svgFactory.createElement("svg:tspan"),s.tspan.setAttributeNS(null,"font-family",s.fontFamily),s.tspan.setAttributeNS(null,"font-size",`${h(s.fontSize)}px`),s.tspan.setAttributeNS(null,"y",h(-s.y)),s.txtElement=this.svgFactory.createElement("svg:text"),s.txtElement.append(s.tspan)}beginText(){const e=this.current;e.x=e.lineX=0,e.y=e.lineY=0,e.textMatrix=i.IDENTITY_MATRIX,e.lineMatrix=i.IDENTITY_MATRIX,e.textMatrixScale=1,e.tspan=this.svgFactory.createElement("svg:tspan"),e.txtElement=this.svgFactory.createElement("svg:text"),e.txtgrp=this.svgFactory.createElement("svg:g"),e.xcoords=[],e.ycoords=[]}moveText(e,t){const n=this.current;n.x=n.lineX+=e,n.y=n.lineY+=t,n.xcoords=[],n.ycoords=[],n.tspan=this.svgFactory.createElement("svg:tspan"),n.tspan.setAttributeNS(null,"font-family",n.fontFamily),n.tspan.setAttributeNS(null,"font-size",`${h(n.fontSize)}px`),n.tspan.setAttributeNS(null,"y",h(-n.y))}showText(e){const t=this.current,n=t.font,r=t.fontSize;if(0===r)return;const o=t.fontSizeScale,l=t.charSpacing,c=t.wordSpacing,u=t.fontDirection,d=t.textHScale*u,f=n.vertical,g=f?1:-1,m=n.defaultVMetrics,b=r*t.fontMatrix[0];let v=0;for(const i of e){if(null===i){v+=u*c;continue}if("number"==typeof i){v+=g*i*r/1e3;continue}const e=(i.isSpace?c:0)+l,a=i.fontChar;let s,d,h=i.width;if(f){let e;const t=i.vmetric||m;e=i.vmetric?t[1]:.5*h,e=-e*b;const n=t[2]*b;h=t?-t[0]:h,s=e/o,d=(v+n)/o}else s=v/o,d=0;(i.isInFont||n.missingFile)&&(t.xcoords.push(t.x+s),f&&t.ycoords.push(-t.y+d),t.tspan.textContent+=a),v+=f?h*b-e*u:h*b+e*u}t.tspan.setAttributeNS(null,"x",t.xcoords.map(h).join(" ")),f?t.tspan.setAttributeNS(null,"y",t.ycoords.map(h).join(" ")):t.tspan.setAttributeNS(null,"y",h(-t.y)),f?t.y-=v:t.x+=v*d,t.tspan.setAttributeNS(null,"font-family",t.fontFamily),t.tspan.setAttributeNS(null,"font-size",`${h(t.fontSize)}px`),"normal"!==t.fontStyle&&t.tspan.setAttributeNS(null,"font-style",t.fontStyle),t.fontWeight!==a&&t.tspan.setAttributeNS(null,"font-weight",t.fontWeight);const y=t.textRenderingMode&i.TextRenderingMode.FILL_STROKE_MASK;if(y===i.TextRenderingMode.FILL||y===i.TextRenderingMode.FILL_STROKE?(t.fillColor!==s&&t.tspan.setAttributeNS(null,"fill",t.fillColor),t.fillAlpha<1&&t.tspan.setAttributeNS(null,"fill-opacity",t.fillAlpha)):t.textRenderingMode===i.TextRenderingMode.ADD_TO_PATH?t.tspan.setAttributeNS(null,"fill","transparent"):t.tspan.setAttributeNS(null,"fill","none"),y===i.TextRenderingMode.STROKE||y===i.TextRenderingMode.FILL_STROKE){const e=1/(t.textMatrixScale||1);this._setStrokeAttributes(t.tspan,e)}let _=t.textMatrix;0!==t.textRise&&(_=_.slice(),_[5]+=t.textRise),t.txtElement.setAttributeNS(null,"transform",`${p(_)} scale(${h(d)}, -1)`),t.txtElement.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.txtElement.append(t.tspan),t.txtgrp.append(t.txtElement),this._ensureTransformGroup().append(t.txtElement)}setLeadingMoveText(e,t){this.setLeading(-t),this.moveText(e,t)}addFontStyle(e){if(!e.data)throw new Error('addFontStyle: No font data available, ensure that the "fontExtraProperties" API parameter is set.');this.cssStyle||(this.cssStyle=this.svgFactory.createElement("svg:style"),this.cssStyle.setAttributeNS(null,"type","text/css"),this.defs.append(this.cssStyle));const t=c(e.data,e.mimetype,this.forceDataSchema);this.cssStyle.textContent+=`@font-face { font-family: "${e.loadedName}"; src: url(${t}); }\n`}setFont(e){const t=this.current,n=this.commonObjs.get(e[0]);let r=e[1];t.font=n,!this.embedFonts||n.missingFile||this.embeddedFonts[n.loadedName]||(this.addFontStyle(n),this.embeddedFonts[n.loadedName]=n),t.fontMatrix=n.fontMatrix||i.FONT_IDENTITY_MATRIX;let a="normal";n.black?a="900":n.bold&&(a="bold");const s=n.italic?"italic":"normal";r<0?(r=-r,t.fontDirection=-1):t.fontDirection=1,t.fontSize=r,t.fontFamily=n.loadedName,t.fontWeight=a,t.fontStyle=s,t.tspan=this.svgFactory.createElement("svg:tspan"),t.tspan.setAttributeNS(null,"y",h(-t.y)),t.xcoords=[],t.ycoords=[]}endText(){const e=this.current;e.textRenderingMode&i.TextRenderingMode.ADD_TO_PATH_FLAG&&e.txtElement?.hasChildNodes()&&(e.element=e.txtElement,this.clip("nonzero"),this.endPath())}setLineWidth(e){e>0&&(this.current.lineWidth=e)}setLineCap(e){this.current.lineCap=o[e]}setLineJoin(e){this.current.lineJoin=l[e]}setMiterLimit(e){this.current.miterLimit=e}setStrokeAlpha(e){this.current.strokeAlpha=e}setStrokeRGBColor(e,t,n){this.current.strokeColor=i.Util.makeHexColor(e,t,n)}setFillAlpha(e){this.current.fillAlpha=e}setFillRGBColor(e,t,n){this.current.fillColor=i.Util.makeHexColor(e,t,n),this.current.tspan=this.svgFactory.createElement("svg:tspan"),this.current.xcoords=[],this.current.ycoords=[]}setStrokeColorN(e){this.current.strokeColor=this._makeColorN_Pattern(e)}setFillColorN(e){this.current.fillColor=this._makeColorN_Pattern(e)}shadingFill(e){const{width:t,height:n}=this.viewport,r=i.Util.inverseTransform(this.transformMatrix),[a,s,o,l]=i.Util.getAxialAlignedBoundingBox([0,0,t,n],r),c=this.svgFactory.createElement("svg:rect");c.setAttributeNS(null,"x",a),c.setAttributeNS(null,"y",s),c.setAttributeNS(null,"width",o-a),c.setAttributeNS(null,"height",l-s),c.setAttributeNS(null,"fill",this._makeShadingPattern(e)),this.current.fillAlpha<1&&c.setAttributeNS(null,"fill-opacity",this.current.fillAlpha),this._ensureTransformGroup().append(c)}_makeColorN_Pattern(e){return"TilingPattern"===e[0]?this._makeTilingPattern(e):this._makeShadingPattern(e)}_makeTilingPattern(e){const t=e[1],n=e[2],r=e[3]||i.IDENTITY_MATRIX,[a,s,o,l]=e[4],c=e[5],u=e[6],d=e[7],h="shading"+m++,[p,f,g,b]=i.Util.normalizeRect([...i.Util.applyTransform([a,s],r),...i.Util.applyTransform([o,l],r)]),[v,y]=i.Util.singularValueDecompose2dScale(r),_=c*v,A=u*y,w=this.svgFactory.createElement("svg:pattern");w.setAttributeNS(null,"id",h),w.setAttributeNS(null,"patternUnits","userSpaceOnUse"),w.setAttributeNS(null,"width",_),w.setAttributeNS(null,"height",A),w.setAttributeNS(null,"x",`${p}`),w.setAttributeNS(null,"y",`${f}`);const S=this.svg,x=this.transformMatrix,E=this.current.fillColor,k=this.current.strokeColor,C=this.svgFactory.create(g-p,b-f);if(this.svg=C,this.transformMatrix=r,2===d){const e=i.Util.makeHexColor(...t);this.current.fillColor=e,this.current.strokeColor=e}return this.executeOpTree(this.convertOpList(n)),this.svg=S,this.transformMatrix=x,this.current.fillColor=E,this.current.strokeColor=k,w.append(C.childNodes[0]),this.defs.append(w),`url(#${h})`}_makeShadingPattern(e){switch("string"==typeof e&&(e=this.objs.get(e)),e[0]){case"RadialAxial":const t="shading"+m++,n=e[3];let r;switch(e[1]){case"axial":const n=e[4],i=e[5];r=this.svgFactory.createElement("svg:linearGradient"),r.setAttributeNS(null,"id",t),r.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),r.setAttributeNS(null,"x1",n[0]),r.setAttributeNS(null,"y1",n[1]),r.setAttributeNS(null,"x2",i[0]),r.setAttributeNS(null,"y2",i[1]);break;case"radial":const a=e[4],s=e[5],o=e[6],l=e[7];r=this.svgFactory.createElement("svg:radialGradient"),r.setAttributeNS(null,"id",t),r.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),r.setAttributeNS(null,"cx",s[0]),r.setAttributeNS(null,"cy",s[1]),r.setAttributeNS(null,"r",l),r.setAttributeNS(null,"fx",a[0]),r.setAttributeNS(null,"fy",a[1]),r.setAttributeNS(null,"fr",o);break;default:throw new Error(`Unknown RadialAxial type: ${e[1]}`)}for(const e of n){const t=this.svgFactory.createElement("svg:stop");t.setAttributeNS(null,"offset",e[0]),t.setAttributeNS(null,"stop-color",e[1]),r.append(t)}return this.defs.append(r),`url(#${t})`;case"Mesh":return(0,i.warn)("Unimplemented pattern Mesh"),null;case"Dummy":return"hotpink";default:throw new Error(`Unknown IR type: ${e[0]}`)}}setDash(e,t){this.current.dashArray=e,this.current.dashPhase=t}constructPath(e,t){const n=this.current;let r=n.x,a=n.y,s=[],o=0;for(const n of e)switch(0|n){case i.OPS.rectangle:r=t[o++],a=t[o++];const e=r+t[o++],n=a+t[o++];s.push("M",h(r),h(a),"L",h(e),h(a),"L",h(e),h(n),"L",h(r),h(n),"Z");break;case i.OPS.moveTo:r=t[o++],a=t[o++],s.push("M",h(r),h(a));break;case i.OPS.lineTo:r=t[o++],a=t[o++],s.push("L",h(r),h(a));break;case i.OPS.curveTo:r=t[o+4],a=t[o+5],s.push("C",h(t[o]),h(t[o+1]),h(t[o+2]),h(t[o+3]),h(r),h(a)),o+=6;break;case i.OPS.curveTo2:s.push("C",h(r),h(a),h(t[o]),h(t[o+1]),h(t[o+2]),h(t[o+3])),r=t[o+2],a=t[o+3],o+=4;break;case i.OPS.curveTo3:r=t[o+2],a=t[o+3],s.push("C",h(t[o]),h(t[o+1]),h(r),h(a),h(r),h(a)),o+=4;break;case i.OPS.closePath:s.push("Z")}s=s.join(" "),n.path&&e.length>0&&e[0]!==i.OPS.rectangle&&e[0]!==i.OPS.moveTo?s=n.path.getAttributeNS(null,"d")+s:(n.path=this.svgFactory.createElement("svg:path"),this._ensureTransformGroup().append(n.path)),n.path.setAttributeNS(null,"d",s),n.path.setAttributeNS(null,"fill","none"),n.element=n.path,n.setCurrentPoint(r,a)}endPath(){const e=this.current;if(e.path=null,!this.pendingClip)return;if(!e.element)return void(this.pendingClip=null);const t="clippath"+f++,n=this.svgFactory.createElement("svg:clipPath");n.setAttributeNS(null,"id",t),n.setAttributeNS(null,"transform",p(this.transformMatrix));const r=e.element.cloneNode(!0);if("evenodd"===this.pendingClip?r.setAttributeNS(null,"clip-rule","evenodd"):r.setAttributeNS(null,"clip-rule","nonzero"),this.pendingClip=null,n.append(r),this.defs.append(n),e.activeClipUrl){e.clipGroup=null;for(const e of this.extraStack)e.clipGroup=null;n.setAttributeNS(null,"clip-path",e.activeClipUrl)}e.activeClipUrl=`url(#${t})`,this.tgrp=null}clip(e){this.pendingClip=e}closePath(){const e=this.current;if(e.path){const t=`${e.path.getAttributeNS(null,"d")}Z`;e.path.setAttributeNS(null,"d",t)}}setLeading(e){this.current.leading=-e}setTextRise(e){this.current.textRise=e}setTextRenderingMode(e){this.current.textRenderingMode=e}setHScale(e){this.current.textHScale=e/100}setRenderingIntent(e){}setFlatness(e){}setGState(e){for(const[t,n]of e)switch(t){case"LW":this.setLineWidth(n);break;case"LC":this.setLineCap(n);break;case"LJ":this.setLineJoin(n);break;case"ML":this.setMiterLimit(n);break;case"D":this.setDash(n[0],n[1]);break;case"RI":this.setRenderingIntent(n);break;case"FL":this.setFlatness(n);break;case"Font":this.setFont(n);break;case"CA":this.setStrokeAlpha(n);break;case"ca":this.setFillAlpha(n);break;default:(0,i.warn)(`Unimplemented graphic state operator ${t}`)}}fill(){const e=this.current;e.element&&(e.element.setAttributeNS(null,"fill",e.fillColor),e.element.setAttributeNS(null,"fill-opacity",e.fillAlpha),this.endPath())}stroke(){const e=this.current;e.element&&(this._setStrokeAttributes(e.element),e.element.setAttributeNS(null,"fill","none"),this.endPath())}_setStrokeAttributes(e,t=1){const n=this.current;let r=n.dashArray;1!==t&&r.length>0&&(r=r.map((function(e){return t*e}))),e.setAttributeNS(null,"stroke",n.strokeColor),e.setAttributeNS(null,"stroke-opacity",n.strokeAlpha),e.setAttributeNS(null,"stroke-miterlimit",h(n.miterLimit)),e.setAttributeNS(null,"stroke-linecap",n.lineCap),e.setAttributeNS(null,"stroke-linejoin",n.lineJoin),e.setAttributeNS(null,"stroke-width",h(t*n.lineWidth)+"px"),e.setAttributeNS(null,"stroke-dasharray",r.map(h).join(" ")),e.setAttributeNS(null,"stroke-dashoffset",h(t*n.dashPhase)+"px")}eoFill(){this.current.element?.setAttributeNS(null,"fill-rule","evenodd"),this.fill()}fillStroke(){this.stroke(),this.fill()}eoFillStroke(){this.current.element?.setAttributeNS(null,"fill-rule","evenodd"),this.fillStroke()}closeStroke(){this.closePath(),this.stroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.closePath(),this.eoFillStroke()}paintSolidColorImageMask(){const e=this.svgFactory.createElement("svg:rect");e.setAttributeNS(null,"x","0"),e.setAttributeNS(null,"y","0"),e.setAttributeNS(null,"width","1px"),e.setAttributeNS(null,"height","1px"),e.setAttributeNS(null,"fill",this.current.fillColor),this._ensureTransformGroup().append(e)}paintImageXObject(e){const t=this.getObject(e);t?this.paintInlineImageXObject(t):(0,i.warn)(`Dependent image with object ID ${e} is not ready yet`)}paintInlineImageXObject(e,t){const n=e.width,r=e.height,i=u(e,this.forceDataSchema,!!t),a=this.svgFactory.createElement("svg:rect");a.setAttributeNS(null,"x","0"),a.setAttributeNS(null,"y","0"),a.setAttributeNS(null,"width",h(n)),a.setAttributeNS(null,"height",h(r)),this.current.element=a,this.clip("nonzero");const s=this.svgFactory.createElement("svg:image");s.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",i),s.setAttributeNS(null,"x","0"),s.setAttributeNS(null,"y",h(-r)),s.setAttributeNS(null,"width",h(n)+"px"),s.setAttributeNS(null,"height",h(r)+"px"),s.setAttributeNS(null,"transform",`scale(${h(1/n)} ${h(-1/r)})`),t?t.append(s):this._ensureTransformGroup().append(s)}paintImageMaskXObject(e){const t=this.getObject(e.data,e);if(t.bitmap)return void(0,i.warn)("paintImageMaskXObject: ImageBitmap support is not implemented, ensure that the `isOffscreenCanvasSupported` API parameter is disabled.");const n=this.current,r=t.width,a=t.height,s=n.fillColor;n.maskId="mask"+g++;const o=this.svgFactory.createElement("svg:mask");o.setAttributeNS(null,"id",n.maskId);const l=this.svgFactory.createElement("svg:rect");l.setAttributeNS(null,"x","0"),l.setAttributeNS(null,"y","0"),l.setAttributeNS(null,"width",h(r)),l.setAttributeNS(null,"height",h(a)),l.setAttributeNS(null,"fill",s),l.setAttributeNS(null,"mask",`url(#${n.maskId})`),this.defs.append(o),this._ensureTransformGroup().append(l),this.paintInlineImageXObject(t,o)}paintFormXObjectBegin(e,t){if(Array.isArray(e)&&6===e.length&&this.transform(e[0],e[1],e[2],e[3],e[4],e[5]),t){const e=t[2]-t[0],n=t[3]-t[1],r=this.svgFactory.createElement("svg:rect");r.setAttributeNS(null,"x",t[0]),r.setAttributeNS(null,"y",t[1]),r.setAttributeNS(null,"width",h(e)),r.setAttributeNS(null,"height",h(n)),this.current.element=r,this.clip("nonzero"),this.endPath()}}paintFormXObjectEnd(){}_initialize(e){const t=this.svgFactory.create(e.width,e.height),n=this.svgFactory.createElement("svg:defs");t.append(n),this.defs=n;const r=this.svgFactory.createElement("svg:g");return r.setAttributeNS(null,"transform",p(e.transform)),t.append(r),this.svg=r,t}_ensureClipGroup(){if(!this.current.clipGroup){const e=this.svgFactory.createElement("svg:g");e.setAttributeNS(null,"clip-path",this.current.activeClipUrl),this.svg.append(e),this.current.clipGroup=e}return this.current.clipGroup}_ensureTransformGroup(){return this.tgrp||(this.tgrp=this.svgFactory.createElement("svg:g"),this.tgrp.setAttributeNS(null,"transform",p(this.transformMatrix)),this.current.activeClipUrl?this._ensureClipGroup().append(this.tgrp):this.svg.append(this.tgrp)),this.tgrp}}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.XfaText=void 0;class n{static textContent(e){const t=[],r={items:t,styles:Object.create(null)};return function e(r){if(!r)return;let i=null;const a=r.name;if("#text"===a)i=r.value;else{if(!n.shouldBuildText(a))return;r?.attributes?.textContent?i=r.attributes.textContent:r.value&&(i=r.value)}if(null!==i&&t.push({str:i}),r.children)for(const t of r.children)e(t)}(e),r}static shouldBuildText(e){return!("textarea"===e||"input"===e||"option"===e||"select"===e)}}t.XfaText=n},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TextLayerRenderTask=void 0,t.renderTextLayer=function(e){e.textContentSource||!e.textContent&&!e.textContentStream||((0,i.deprecated)("The TextLayerRender `textContent`/`textContentStream` parameters will be removed in the future, please use `textContentSource` instead."),e.textContentSource=e.textContent||e.textContentStream);const{container:t,viewport:n}=e,r=getComputedStyle(t),a=r.getPropertyValue("visibility"),s=parseFloat(r.getPropertyValue("--scale-factor"));"visible"===a&&(!s||Math.abs(s-n.scale)>1e-5)&&console.error("The `--scale-factor` CSS-variable must be set, to the same value as `viewport.scale`, either on the `container`-element itself or higher up in the DOM.");const o=new u(e);return o._render(),o},t.updateTextLayer=function({container:e,viewport:t,textDivs:n,textDivProperties:r,isOffscreenCanvasSupported:a,mustRotate:s=!0,mustRescale:l=!0}){if(s&&(0,i.setLayerDimensions)(e,{rotation:t.rotation}),l){const e=o(0,a),i={prevFontSize:null,prevFontFamily:null,div:null,scale:t.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:e};for(const e of n)i.properties=r.get(e),i.div=e,c(i)}};var r=n(1),i=n(6);const a=30,s=new Map;function o(e,t){let n;if(t&&r.FeatureTest.isOffscreenCanvasSupported)n=new OffscreenCanvas(e,e).getContext("2d",{alpha:!1});else{const t=document.createElement("canvas");t.width=t.height=e,n=t.getContext("2d",{alpha:!1})}return n}function l(e,t,n){const i=document.createElement("span"),l={angle:0,canvasWidth:0,hasText:""!==t.str,hasEOL:t.hasEOL,fontSize:0};e._textDivs.push(i);const c=r.Util.transform(e._transform,t.transform);let u=Math.atan2(c[1],c[0]);const d=n[t.fontName];d.vertical&&(u+=Math.PI/2);const h=Math.hypot(c[2],c[3]),p=h*function(e,t){const n=s.get(e);if(n)return n;const r=o(a,t);r.font=`30px ${e}`;const i=r.measureText("");let l=i.fontBoundingBoxAscent,c=Math.abs(i.fontBoundingBoxDescent);if(l){const t=l/(l+c);return s.set(e,t),r.canvas.width=r.canvas.height=0,t}r.strokeStyle="red",r.clearRect(0,0,a,a),r.strokeText("g",0,0);let u=r.getImageData(0,0,a,a).data;c=0;for(let e=u.length-1-3;e>=0;e-=4)if(u[e]>0){c=Math.ceil(e/4/a);break}r.clearRect(0,0,a,a),r.strokeText("A",0,a),u=r.getImageData(0,0,a,a).data,l=0;for(let e=0,t=u.length;e<t;e+=4)if(u[e]>0){l=a-Math.floor(e/4/a);break}if(r.canvas.width=r.canvas.height=0,l){const t=l/(l+c);return s.set(e,t),t}return s.set(e,.8),.8}(d.fontFamily,e._isOffscreenCanvasSupported);let f,g;0===u?(f=c[4],g=c[5]-p):(f=c[4]+p*Math.sin(u),g=c[5]-p*Math.cos(u));const m="calc(var(--scale-factor)*",b=i.style;e._container===e._rootContainer?(b.left=`${(100*f/e._pageWidth).toFixed(2)}%`,b.top=`${(100*g/e._pageHeight).toFixed(2)}%`):(b.left=`${m}${f.toFixed(2)}px)`,b.top=`${m}${g.toFixed(2)}px)`),b.fontSize=`${m}${h.toFixed(2)}px)`,b.fontFamily=d.fontFamily,l.fontSize=h,i.setAttribute("role","presentation"),i.textContent=t.str,i.dir=t.dir,e._fontInspectorEnabled&&(i.dataset.fontName=t.fontName),0!==u&&(l.angle=u*(180/Math.PI));let v=!1;if(t.str.length>1)v=!0;else if(" "!==t.str&&t.transform[0]!==t.transform[3]){const e=Math.abs(t.transform[0]),n=Math.abs(t.transform[3]);e!==n&&Math.max(e,n)/Math.min(e,n)>1.5&&(v=!0)}v&&(l.canvasWidth=d.vertical?t.height:t.width),e._textDivProperties.set(i,l),e._isReadableStream&&e._layoutText(i)}function c(e){const{div:t,scale:n,properties:r,ctx:i,prevFontSize:a,prevFontFamily:s}=e,{style:o}=t;let l="";if(0!==r.canvasWidth&&r.hasText){const{fontFamily:c}=o,{canvasWidth:u,fontSize:d}=r;a===d&&s===c||(i.font=`${d*n}px ${c}`,e.prevFontSize=d,e.prevFontFamily=c);const{width:h}=i.measureText(t.textContent);h>0&&(l=`scaleX(${u*n/h})`)}0!==r.angle&&(l=`rotate(${r.angle}deg) ${l}`),l.length>0&&(o.transform=l)}class u{constructor({textContentSource:e,container:t,viewport:n,textDivs:a,textDivProperties:s,textContentItemsStr:l,isOffscreenCanvasSupported:c}){this._textContentSource=e,this._isReadableStream=e instanceof ReadableStream,this._container=this._rootContainer=t,this._textDivs=a||[],this._textContentItemsStr=l||[],this._isOffscreenCanvasSupported=c,this._fontInspectorEnabled=!!globalThis.FontInspector?.enabled,this._reader=null,this._textDivProperties=s||new WeakMap,this._canceled=!1,this._capability=new r.PromiseCapability,this._layoutTextParams={prevFontSize:null,prevFontFamily:null,div:null,scale:n.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:o(0,c)};const{pageWidth:u,pageHeight:d,pageX:h,pageY:p}=n.rawDims;this._transform=[1,0,0,-1,-h,p+d],this._pageWidth=u,this._pageHeight=d,(0,i.setLayerDimensions)(t,n),this._capability.promise.finally((()=>{this._layoutTextParams=null})).catch((()=>{}))}get promise(){return this._capability.promise}cancel(){this._canceled=!0,this._reader&&(this._reader.cancel(new r.AbortException("TextLayer task cancelled.")).catch((()=>{})),this._reader=null),this._capability.reject(new r.AbortException("TextLayer task cancelled."))}_processItems(e,t){for(const n of e)if(void 0!==n.str)this._textContentItemsStr.push(n.str),l(this,n,t);else if("beginMarkedContentProps"===n.type||"beginMarkedContent"===n.type){const e=this._container;this._container=document.createElement("span"),this._container.classList.add("markedContent"),null!==n.id&&this._container.setAttribute("id",`${n.id}`),e.append(this._container)}else"endMarkedContent"===n.type&&(this._container=this._container.parentNode)}_layoutText(e){const t=this._layoutTextParams.properties=this._textDivProperties.get(e);if(this._layoutTextParams.div=e,c(this._layoutTextParams),t.hasText&&this._container.append(e),t.hasEOL){const e=document.createElement("br");e.setAttribute("role","presentation"),this._container.append(e)}}_render(){const e=new r.PromiseCapability;let t=Object.create(null);if(this._isReadableStream){const n=()=>{this._reader.read().then((({value:r,done:i})=>{i?e.resolve():(Object.assign(t,r.styles),this._processItems(r.items,t),n())}),e.reject)};this._reader=this._textContentSource.getReader(),n()}else{if(!this._textContentSource)throw new Error('No "textContentSource" parameter specified.');{const{items:t,styles:n}=this._textContentSource;this._processItems(t,n),e.resolve()}}e.promise.then((()=>{t=null,function(e){if(e._canceled)return;const t=e._textDivs,n=e._capability;if(t.length>1e5)n.resolve();else{if(!e._isReadableStream)for(const n of t)e._layoutText(n);n.resolve()}}(this)}),this._capability.reject)}}t.TextLayerRenderTask=u},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AnnotationEditorLayer=void 0;var r=n(1),i=n(4),a=n(28),s=n(33),o=n(6),l=n(34);class c{#wt;#St=!1;#xt=null;#Et=this.pointerup.bind(this);#kt=this.pointerdown.bind(this);#Ct=new Map;#Pt=!1;#Tt=!1;#Mt=!1;#Rt;static _initialized=!1;constructor({uiManager:e,pageIndex:t,div:n,accessibilityManager:r,annotationLayer:i,viewport:o,l10n:u}){const d=[a.FreeTextEditor,s.InkEditor,l.StampEditor];if(!c._initialized){c._initialized=!0;for(const e of d)e.initialize(u)}e.registerEditorTypes(d),this.#Rt=e,this.pageIndex=t,this.div=n,this.#wt=r,this.#xt=i,this.viewport=o,this.#Rt.addLayer(this)}get isEmpty(){return 0===this.#Ct.size}updateToolbar(e){this.#Rt.updateToolbar(e)}updateMode(e=this.#Rt.getMode()){this.#Ft(),e===r.AnnotationEditorType.INK?(this.addInkEditorIfNeeded(!1),this.disableClick()):this.enableClick(),e!==r.AnnotationEditorType.NONE&&(this.div.classList.toggle("freeTextEditing",e===r.AnnotationEditorType.FREETEXT),this.div.classList.toggle("inkEditing",e===r.AnnotationEditorType.INK),this.div.classList.toggle("stampEditing",e===r.AnnotationEditorType.STAMP),this.div.hidden=!1)}addInkEditorIfNeeded(e){if(e||this.#Rt.getMode()===r.AnnotationEditorType.INK){if(!e)for(const e of this.#Ct.values())if(e.isEmpty())return void e.setInBackground();this.#Dt({offsetX:0,offsetY:0},!1).setInBackground()}}setEditingState(e){this.#Rt.setEditingState(e)}addCommands(e){this.#Rt.addCommands(e)}enable(){this.div.style.pointerEvents="auto";const e=new Set;for(const t of this.#Ct.values())t.enableEditing(),t.annotationElementId&&e.add(t.annotationElementId);if(!this.#xt)return;const t=this.#xt.getEditableAnnotations();for(const n of t){if(n.hide(),this.#Rt.isDeletedAnnotationElement(n.data.id))continue;if(e.has(n.data.id))continue;const t=this.deserialize(n);t&&(this.addOrRebuild(t),t.enableEditing())}}disable(){this.#Mt=!0,this.div.style.pointerEvents="none";const e=new Set;for(const t of this.#Ct.values())t.disableEditing(),t.annotationElementId&&null===t.serialize()?(this.getEditableAnnotation(t.annotationElementId)?.show(),t.remove()):e.add(t.annotationElementId);if(this.#xt){const t=this.#xt.getEditableAnnotations();for(const n of t){const{id:t}=n.data;e.has(t)||this.#Rt.isDeletedAnnotationElement(t)||n.show()}}this.#Ft(),this.isEmpty&&(this.div.hidden=!0),this.#Mt=!1}getEditableAnnotation(e){return this.#xt?.getEditableAnnotation(e)||null}setActiveEditor(e){this.#Rt.getActive()!==e&&this.#Rt.setActiveEditor(e)}enableClick(){this.div.addEventListener("pointerdown",this.#kt),this.div.addEventListener("pointerup",this.#Et)}disableClick(){this.div.removeEventListener("pointerdown",this.#kt),this.div.removeEventListener("pointerup",this.#Et)}attach(e){this.#Ct.set(e.id,e);const{annotationElementId:t}=e;t&&this.#Rt.isDeletedAnnotationElement(t)&&this.#Rt.removeDeletedAnnotationElement(e)}detach(e){this.#Ct.delete(e.id),this.#wt?.removePointerInTextLayer(e.contentDiv),!this.#Mt&&e.annotationElementId&&this.#Rt.addDeletedAnnotationElement(e)}remove(e){this.detach(e),this.#Rt.removeEditor(e),e.div.contains(document.activeElement)&&setTimeout((()=>{this.#Rt.focusMainContainer()}),0),e.div.remove(),e.isAttachedToDOM=!1,this.#Tt||this.addInkEditorIfNeeded(!1)}changeParent(e){e.parent!==this&&(e.annotationElementId&&(this.#Rt.addDeletedAnnotationElement(e.annotationElementId),i.AnnotationEditor.deleteAnnotationElement(e),e.annotationElementId=null),this.attach(e),e.parent?.detach(e),e.setParent(this),e.div&&e.isAttachedToDOM&&(e.div.remove(),this.div.append(e.div)))}add(e){if(this.changeParent(e),this.#Rt.addEditor(e),this.attach(e),!e.isAttachedToDOM){const t=e.render();this.div.append(t),e.isAttachedToDOM=!0}e.fixAndSetPosition(),e.onceAdded(),this.#Rt.addToAnnotationStorage(e)}moveEditorInDOM(e){if(!e.isAttachedToDOM)return;const{activeElement:t}=document;e.div.contains(t)&&(e._focusEventsAllowed=!1,setTimeout((()=>{e.div.contains(document.activeElement)?e._focusEventsAllowed=!0:(e.div.addEventListener("focusin",(()=>{e._focusEventsAllowed=!0}),{once:!0}),t.focus())}),0)),e._structTreeParentId=this.#wt?.moveElementInDOM(this.div,e.div,e.contentDiv,!0)}addOrRebuild(e){e.needsToBeRebuilt()?e.rebuild():this.add(e)}addUndoableEditor(e){this.addCommands({cmd:()=>e._uiManager.rebuild(e),undo:()=>{e.remove()},mustExec:!1})}getNextId(){return this.#Rt.getId()}#It(e){switch(this.#Rt.getMode()){case r.AnnotationEditorType.FREETEXT:return new a.FreeTextEditor(e);case r.AnnotationEditorType.INK:return new s.InkEditor(e);case r.AnnotationEditorType.STAMP:return new l.StampEditor(e)}return null}pasteEditor(e,t){this.#Rt.updateToolbar(e),this.#Rt.updateMode(e);const{offsetX:n,offsetY:r}=this.#Lt(),i=this.getNextId(),a=this.#It({parent:this,id:i,x:n,y:r,uiManager:this.#Rt,isCentered:!0,...t});a&&this.add(a)}deserialize(e){switch(e.annotationType??e.annotationEditorType){case r.AnnotationEditorType.FREETEXT:return a.FreeTextEditor.deserialize(e,this,this.#Rt);case r.AnnotationEditorType.INK:return s.InkEditor.deserialize(e,this,this.#Rt);case r.AnnotationEditorType.STAMP:return l.StampEditor.deserialize(e,this,this.#Rt)}return null}#Dt(e,t){const n=this.getNextId(),r=this.#It({parent:this,id:n,x:e.offsetX,y:e.offsetY,uiManager:this.#Rt,isCentered:t});return r&&this.add(r),r}#Lt(){const{x:e,y:t,width:n,height:r}=this.div.getBoundingClientRect(),i=Math.max(0,e),a=Math.max(0,t),s=(i+Math.min(window.innerWidth,e+n))/2-e,o=(a+Math.min(window.innerHeight,t+r))/2-t,[l,c]=this.viewport.rotation%180==0?[s,o]:[o,s];return{offsetX:l,offsetY:c}}addNewEditor(){this.#Dt(this.#Lt(),!0)}setSelected(e){this.#Rt.setSelected(e)}toggleSelected(e){this.#Rt.toggleSelected(e)}isSelected(e){return this.#Rt.isSelected(e)}unselect(e){this.#Rt.unselect(e)}pointerup(e){const{isMac:t}=r.FeatureTest.platform;0!==e.button||e.ctrlKey&&t||e.target===this.div&&this.#Pt&&(this.#Pt=!1,this.#St?this.#Rt.getMode()!==r.AnnotationEditorType.STAMP?this.#Dt(e,!1):this.#Rt.unselectAll():this.#St=!0)}pointerdown(e){if(this.#Pt)return void(this.#Pt=!1);const{isMac:t}=r.FeatureTest.platform;if(0!==e.button||e.ctrlKey&&t)return;if(e.target!==this.div)return;this.#Pt=!0;const n=this.#Rt.getActive();this.#St=!n||n.isEmpty()}findNewParent(e,t,n){const r=this.#Rt.findParent(t,n);return null!==r&&r!==this&&(r.changeParent(e),!0)}destroy(){this.#Rt.getActive()?.parent===this&&(this.#Rt.commitOrRemove(),this.#Rt.setActiveEditor(null));for(const e of this.#Ct.values())this.#wt?.removePointerInTextLayer(e.contentDiv),e.setParent(null),e.isAttachedToDOM=!1,e.div.remove();this.div=null,this.#Ct.clear(),this.#Rt.removeLayer(this)}#Ft(){this.#Tt=!0;for(const e of this.#Ct.values())e.isEmpty()&&e.remove();this.#Tt=!1}render({viewport:e}){this.viewport=e,(0,o.setLayerDimensions)(this.div,e);for(const e of this.#Rt.getEditors(this.pageIndex))this.add(e);this.updateMode()}update({viewport:e}){this.#Rt.commitOrRemove(),this.viewport=e,(0,o.setLayerDimensions)(this.div,{rotation:e.rotation}),this.updateMode()}get pageDimensions(){const{pageWidth:e,pageHeight:t}=this.viewport.rawDims;return[e,t]}}t.AnnotationEditorLayer=c},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FreeTextEditor=void 0;var r=n(1),i=n(5),a=n(4),s=n(29);class o extends a.AnnotationEditor{#Ot=this.editorDivBlur.bind(this);#Nt=this.editorDivFocus.bind(this);#zt=this.editorDivInput.bind(this);#jt=this.editorDivKeydown.bind(this);#Ut;#Bt="";#Ht=`${this.id}-editor`;#Vt;#Wt=null;static _freeTextDefaultContent="";static _internalPadding=0;static _defaultColor=null;static _defaultFontSize=10;static get _keyboardManager(){const e=o.prototype,t=e=>e.isEmpty(),n=i.AnnotationEditorUIManager.TRANSLATE_SMALL,a=i.AnnotationEditorUIManager.TRANSLATE_BIG;return(0,r.shadow)(this,"_keyboardManager",new i.KeyboardManager([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],e.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],e.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],e._translateEmpty,{args:[-n,0],checker:t}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],e._translateEmpty,{args:[-a,0],checker:t}],[["ArrowRight","mac+ArrowRight"],e._translateEmpty,{args:[n,0],checker:t}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],e._translateEmpty,{args:[a,0],checker:t}],[["ArrowUp","mac+ArrowUp"],e._translateEmpty,{args:[0,-n],checker:t}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],e._translateEmpty,{args:[0,-a],checker:t}],[["ArrowDown","mac+ArrowDown"],e._translateEmpty,{args:[0,n],checker:t}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],e._translateEmpty,{args:[0,a],checker:t}]]))}static _type="freetext";constructor(e){super({...e,name:"freeTextEditor"}),this.#Ut=e.color||o._defaultColor||a.AnnotationEditor._defaultLineColor,this.#Vt=e.fontSize||o._defaultFontSize}static initialize(e){a.AnnotationEditor.initialize(e,{strings:["free_text2_default_content","editor_free_text2_aria_label"]});const t=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(t.getPropertyValue("--freetext-padding"))}static updateDefaultParams(e,t){switch(e){case r.AnnotationEditorParamsType.FREETEXT_SIZE:o._defaultFontSize=t;break;case r.AnnotationEditorParamsType.FREETEXT_COLOR:o._defaultColor=t}}updateParams(e,t){switch(e){case r.AnnotationEditorParamsType.FREETEXT_SIZE:this.#qt(t);break;case r.AnnotationEditorParamsType.FREETEXT_COLOR:this.#$t(t)}}static get defaultPropertiesToUpdate(){return[[r.AnnotationEditorParamsType.FREETEXT_SIZE,o._defaultFontSize],[r.AnnotationEditorParamsType.FREETEXT_COLOR,o._defaultColor||a.AnnotationEditor._defaultLineColor]]}get propertiesToUpdate(){return[[r.AnnotationEditorParamsType.FREETEXT_SIZE,this.#Vt],[r.AnnotationEditorParamsType.FREETEXT_COLOR,this.#Ut]]}#qt(e){const t=e=>{this.editorDiv.style.fontSize=`calc(${e}px * var(--scale-factor))`,this.translate(0,-(e-this.#Vt)*this.parentScale),this.#Vt=e,this.#Gt()},n=this.#Vt;this.addCommands({cmd:()=>{t(e)},undo:()=>{t(n)},mustExec:!0,type:r.AnnotationEditorParamsType.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})}#$t(e){const t=this.#Ut;this.addCommands({cmd:()=>{this.#Ut=this.editorDiv.style.color=e},undo:()=>{this.#Ut=this.editorDiv.style.color=t},mustExec:!0,type:r.AnnotationEditorParamsType.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})}_translateEmpty(e,t){this._uiManager.translateSelectedEditors(e,t,!0)}getInitialTranslation(){const e=this.parentScale;return[-o._internalPadding*e,-(o._internalPadding+this.#Vt)*e]}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(this.isAttachedToDOM||this.parent.add(this)))}enableEditMode(){this.isInEditMode()||(this.parent.setEditingState(!1),this.parent.updateToolbar(r.AnnotationEditorType.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this._isDraggable=!1,this.div.removeAttribute("aria-activedescendant"),this.editorDiv.addEventListener("keydown",this.#jt),this.editorDiv.addEventListener("focus",this.#Nt),this.editorDiv.addEventListener("blur",this.#Ot),this.editorDiv.addEventListener("input",this.#zt))}disableEditMode(){this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",this.#Ht),this._isDraggable=!0,this.editorDiv.removeEventListener("keydown",this.#jt),this.editorDiv.removeEventListener("focus",this.#Nt),this.editorDiv.removeEventListener("blur",this.#Ot),this.editorDiv.removeEventListener("input",this.#zt),this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freeTextEditing"))}focusin(e){this._focusEventsAllowed&&(super.focusin(e),e.target!==this.editorDiv&&this.editorDiv.focus())}onceAdded(){this.width?this.#Xt():(this.enableEditMode(),this.editorDiv.focus(),this._initialOptions?.isCentered&&this.center(),this._initialOptions=null)}isEmpty(){return!this.editorDiv||""===this.editorDiv.innerText.trim()}remove(){this.isEditing=!1,this.parent&&(this.parent.setEditingState(!0),this.parent.div.classList.add("freeTextEditing")),super.remove()}#Kt(){const e=this.editorDiv.getElementsByTagName("div");if(0===e.length)return this.editorDiv.innerText;const t=[];for(const n of e)t.push(n.innerText.replace(/\r\n?|\n/,""));return t.join("\n")}#Gt(){const[e,t]=this.parentDimensions;let n;if(this.isAttachedToDOM)n=this.div.getBoundingClientRect();else{const{currentLayer:e,div:t}=this,r=t.style.display;t.style.display="hidden",e.div.append(this.div),n=t.getBoundingClientRect(),t.remove(),t.style.display=r}this.rotation%180==this.parentRotation%180?(this.width=n.width/e,this.height=n.height/t):(this.width=n.height/e,this.height=n.width/t),this.fixAndSetPosition()}commit(){if(!this.isInEditMode())return;super.commit(),this.disableEditMode();const e=this.#Bt,t=this.#Bt=this.#Kt().trimEnd();if(e===t)return;const n=e=>{this.#Bt=e,e?(this.#Yt(),this._uiManager.rebuild(this),this.#Gt()):this.remove()};this.addCommands({cmd:()=>{n(t)},undo:()=>{n(e)},mustExec:!1}),this.#Gt()}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode(),this.editorDiv.focus()}dblclick(e){this.enterInEditMode()}keydown(e){e.target===this.div&&"Enter"===e.key&&(this.enterInEditMode(),e.preventDefault())}editorDivKeydown(e){o._keyboardManager.exec(this,e)}editorDivFocus(e){this.isEditing=!0}editorDivBlur(e){this.isEditing=!1}editorDivInput(e){this.parent.div.classList.toggle("freeTextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let e,t;this.width&&(e=this.x,t=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",this.#Ht),this.enableEditing(),a.AnnotationEditor._l10nPromise.get("editor_free_text2_aria_label").then((e=>this.editorDiv?.setAttribute("aria-label",e))),a.AnnotationEditor._l10nPromise.get("free_text2_default_content").then((e=>this.editorDiv?.setAttribute("default-content",e))),this.editorDiv.contentEditable=!0;const{style:n}=this.editorDiv;if(n.fontSize=`calc(${this.#Vt}px * var(--scale-factor))`,n.color=this.#Ut,this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),(0,i.bindEvents)(this,this.div,["dblclick","keydown"]),this.width){const[n,r]=this.parentDimensions;if(this.annotationElementId){const{position:i}=this.#Wt;let[a,s]=this.getInitialTranslation();[a,s]=this.pageTranslationToScreen(a,s);const[o,l]=this.pageDimensions,[c,u]=this.pageTranslation;let d,h;switch(this.rotation){case 0:d=e+(i[0]-c)/o,h=t+this.height-(i[1]-u)/l;break;case 90:d=e+(i[0]-c)/o,h=t-(i[1]-u)/l,[a,s]=[s,-a];break;case 180:d=e-this.width+(i[0]-c)/o,h=t-(i[1]-u)/l,[a,s]=[-a,-s];break;case 270:d=e+(i[0]-c-this.height*l)/o,h=t+(i[1]-u-this.width*o)/l,[a,s]=[-s,a]}this.setAt(d*n,h*r,a,s)}else this.setAt(e*n,t*r,this.width*n,this.height*r);this.#Yt(),this._isDraggable=!0,this.editorDiv.contentEditable=!1}else this._isDraggable=!1,this.editorDiv.contentEditable=!0;return this.div}#Yt(){if(this.editorDiv.replaceChildren(),this.#Bt)for(const e of this.#Bt.split("\n")){const t=document.createElement("div");t.append(e?document.createTextNode(e):document.createElement("br")),this.editorDiv.append(t)}}get contentDiv(){return this.editorDiv}static deserialize(e,t,n){let i=null;if(e instanceof s.FreeTextAnnotationElement){const{data:{defaultAppearanceData:{fontSize:t,fontColor:n},rect:a,rotation:s,id:o},textContent:l,textPosition:c,parent:{page:{pageNumber:u}}}=e;if(!l||0===l.length)return null;i=e={annotationType:r.AnnotationEditorType.FREETEXT,color:Array.from(n),fontSize:t,value:l.join("\n"),position:c,pageIndex:u-1,rect:a,rotation:s,id:o,deleted:!1}}const a=super.deserialize(e,t,n);return a.#Vt=e.fontSize,a.#Ut=r.Util.makeHexColor(...e.color),a.#Bt=e.value,a.annotationElementId=e.id||null,a.#Wt=i,a}serialize(e=!1){if(this.isEmpty())return null;if(this.deleted)return{pageIndex:this.pageIndex,id:this.annotationElementId,deleted:!0};const t=o._internalPadding*this.parentScale,n=this.getRect(t,t),i=a.AnnotationEditor._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:this.#Ut),s={annotationType:r.AnnotationEditorType.FREETEXT,color:i,fontSize:this.#Vt,value:this.#Bt,pageIndex:this.pageIndex,rect:n,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return e?s:this.annotationElementId&&!this.#Qt(s)?null:(s.id=this.annotationElementId,s)}#Qt(e){const{value:t,fontSize:n,color:r,rect:i,pageIndex:a}=this.#Wt;return e.value!==t||e.fontSize!==n||e.rect.some(((e,t)=>Math.abs(e-i[t])>=1))||e.color.some(((e,t)=>e!==r[t]))||e.pageIndex!==a}#Xt(e=!1){if(!this.annotationElementId)return;if(this.#Gt(),!e&&(0===this.width||0===this.height))return void setTimeout((()=>this.#Xt(!0)),0);const t=o._internalPadding*this.parentScale;this.#Wt.rect=this.getRect(t,t)}}t.FreeTextEditor=o},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StampAnnotationElement=t.InkAnnotationElement=t.FreeTextAnnotationElement=t.AnnotationLayer=void 0;var r=n(1),i=n(6),a=n(3),s=n(30),o=n(31),l=n(32);const c=1e3,u=new WeakSet;function d(e){return{width:e[2]-e[0],height:e[3]-e[1]}}class h{static create(e){switch(e.data.annotationType){case r.AnnotationType.LINK:return new f(e);case r.AnnotationType.TEXT:return new g(e);case r.AnnotationType.WIDGET:switch(e.data.fieldType){case"Tx":return new b(e);case"Btn":return e.data.radioButton?new _(e):e.data.checkBox?new y(e):new A(e);case"Ch":return new w(e);case"Sig":return new v(e)}return new m(e);case r.AnnotationType.POPUP:return new S(e);case r.AnnotationType.FREETEXT:return new E(e);case r.AnnotationType.LINE:return new k(e);case r.AnnotationType.SQUARE:return new C(e);case r.AnnotationType.CIRCLE:return new P(e);case r.AnnotationType.POLYLINE:return new T(e);case r.AnnotationType.CARET:return new R(e);case r.AnnotationType.INK:return new F(e);case r.AnnotationType.POLYGON:return new M(e);case r.AnnotationType.HIGHLIGHT:return new D(e);case r.AnnotationType.UNDERLINE:return new I(e);case r.AnnotationType.SQUIGGLY:return new L(e);case r.AnnotationType.STRIKEOUT:return new O(e);case r.AnnotationType.STAMP:return new N(e);case r.AnnotationType.FILEATTACHMENT:return new z(e);default:return new p(e)}}}class p{#Jt=!1;constructor(e,{isRenderable:t=!1,ignoreBorder:n=!1,createQuadrilaterals:r=!1}={}){this.isRenderable=t,this.data=e.data,this.layer=e.layer,this.linkService=e.linkService,this.downloadManager=e.downloadManager,this.imageResourcesPath=e.imageResourcesPath,this.renderForms=e.renderForms,this.svgFactory=e.svgFactory,this.annotationStorage=e.annotationStorage,this.enableScripting=e.enableScripting,this.hasJSActions=e.hasJSActions,this._fieldObjects=e.fieldObjects,this.parent=e.parent,t&&(this.container=this._createContainer(n)),r&&this._createQuadrilaterals()}static _hasPopupData({titleObj:e,contentsObj:t,richText:n}){return!!(e?.str||t?.str||n?.str)}get hasPopupData(){return p._hasPopupData(this.data)}_createContainer(e){const{data:t,parent:{page:n,viewport:i}}=this,a=document.createElement("section");a.setAttribute("data-annotation-id",t.id),this instanceof m||(a.tabIndex=c),a.style.zIndex=this.parent.zIndex++,this.data.popupRef&&a.setAttribute("aria-haspopup","dialog"),t.noRotate&&a.classList.add("norotate");const{pageWidth:s,pageHeight:o,pageX:l,pageY:u}=i.rawDims;if(!t.rect||this instanceof S){const{rotation:e}=t;return t.hasOwnCanvas||0===e||this.setRotation(e,a),a}const{width:h,height:p}=d(t.rect),f=r.Util.normalizeRect([t.rect[0],n.view[3]-t.rect[1]+n.view[1],t.rect[2],n.view[3]-t.rect[3]+n.view[1]]);if(!e&&t.borderStyle.width>0){a.style.borderWidth=`${t.borderStyle.width}px`;const e=t.borderStyle.horizontalCornerRadius,n=t.borderStyle.verticalCornerRadius;if(e>0||n>0){const t=`calc(${e}px * var(--scale-factor)) / calc(${n}px * var(--scale-factor))`;a.style.borderRadius=t}else if(this instanceof _){const e=`calc(${h}px * var(--scale-factor)) / calc(${p}px * var(--scale-factor))`;a.style.borderRadius=e}switch(t.borderStyle.style){case r.AnnotationBorderStyleType.SOLID:a.style.borderStyle="solid";break;case r.AnnotationBorderStyleType.DASHED:a.style.borderStyle="dashed";break;case r.AnnotationBorderStyleType.BEVELED:(0,r.warn)("Unimplemented border style: beveled");break;case r.AnnotationBorderStyleType.INSET:(0,r.warn)("Unimplemented border style: inset");break;case r.AnnotationBorderStyleType.UNDERLINE:a.style.borderBottomStyle="solid"}const i=t.borderColor||null;i?(this.#Jt=!0,a.style.borderColor=r.Util.makeHexColor(0|i[0],0|i[1],0|i[2])):a.style.borderWidth=0}a.style.left=100*(f[0]-l)/s+"%",a.style.top=100*(f[1]-u)/o+"%";const{rotation:g}=t;return t.hasOwnCanvas||0===g?(a.style.width=100*h/s+"%",a.style.height=100*p/o+"%"):this.setRotation(g,a),a}setRotation(e,t=this.container){if(!this.data.rect)return;const{pageWidth:n,pageHeight:r}=this.parent.viewport.rawDims,{width:i,height:a}=d(this.data.rect);let s,o;e%180==0?(s=100*i/n,o=100*a/r):(s=100*a/n,o=100*i/r),t.style.width=`${s}%`,t.style.height=`${o}%`,t.setAttribute("data-main-rotation",(360-e)%360)}get _commonActions(){const e=(e,t,n)=>{const r=n.detail[e],i=r[0],a=r.slice(1);n.target.style[t]=s.ColorConverters[`${i}_HTML`](a),this.annotationStorage.setValue(this.data.id,{[t]:s.ColorConverters[`${i}_rgb`](a)})};return(0,r.shadow)(this,"_commonActions",{display:e=>{const{display:t}=e.detail,n=t%2==1;this.container.style.visibility=n?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noView:n,noPrint:1===t||2===t})},print:e=>{this.annotationStorage.setValue(this.data.id,{noPrint:!e.detail.print})},hidden:e=>{const{hidden:t}=e.detail;this.container.style.visibility=t?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noPrint:t,noView:t})},focus:e=>{setTimeout((()=>e.target.focus({preventScroll:!1})),0)},userName:e=>{e.target.title=e.detail.userName},readonly:e=>{e.target.disabled=e.detail.readonly},required:e=>{this._setRequired(e.target,e.detail.required)},bgColor:t=>{e("bgColor","backgroundColor",t)},fillColor:t=>{e("fillColor","backgroundColor",t)},fgColor:t=>{e("fgColor","color",t)},textColor:t=>{e("textColor","color",t)},borderColor:t=>{e("borderColor","borderColor",t)},strokeColor:t=>{e("strokeColor","borderColor",t)},rotation:e=>{const t=e.detail.rotation;this.setRotation(t),this.annotationStorage.setValue(this.data.id,{rotation:t})}})}_dispatchEventFromSandbox(e,t){const n=this._commonActions;for(const r of Object.keys(t.detail)){const i=e[r]||n[r];i?.(t)}}_setDefaultPropertiesFromJS(e){if(!this.enableScripting)return;const t=this.annotationStorage.getRawValue(this.data.id);if(!t)return;const n=this._commonActions;for(const[r,i]of Object.entries(t)){const a=n[r];a&&(a({detail:{[r]:i},target:e}),delete t[r])}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:e}=this.data;if(!e)return;const[t,n,r,i]=this.data.rect;if(1===e.length){const[,{x:a,y:s},{x:o,y:l}]=e[0];if(r===a&&i===s&&t===o&&n===l)return}const{style:a}=this.container;let s;if(this.#Jt){const{borderColor:e,borderWidth:t}=a;a.borderWidth=0,s=["url('data:image/svg+xml;utf8,",'<svg xmlns="http://www.w3.org/2000/svg"',' preserveAspectRatio="none" viewBox="0 0 1 1">',`<g fill="transparent" stroke="${e}" stroke-width="${t}">`],this.container.classList.add("hasBorder")}const o=r-t,l=i-n,{svgFactory:c}=this,u=c.createElement("svg");u.classList.add("quadrilateralsContainer"),u.setAttribute("width",0),u.setAttribute("height",0);const d=c.createElement("defs");u.append(d);const h=c.createElement("clipPath"),p=`clippath_${this.data.id}`;h.setAttribute("id",p),h.setAttribute("clipPathUnits","objectBoundingBox"),d.append(h);for(const[,{x:n,y:r},{x:a,y:u}]of e){const e=c.createElement("rect"),d=(a-t)/o,p=(i-r)/l,f=(n-a)/o,g=(r-u)/l;e.setAttribute("x",d),e.setAttribute("y",p),e.setAttribute("width",f),e.setAttribute("height",g),h.append(e),s?.push(`<rect vector-effect="non-scaling-stroke" x="${d}" y="${p}" width="${f}" height="${g}"/>`)}this.#Jt&&(s.push("</g></svg>')"),a.backgroundImage=s.join("")),this.container.append(u),this.container.style.clipPath=`url(#${p})`}_createPopup(){const{container:e,data:t}=this;e.setAttribute("aria-haspopup","dialog");const n=new S({data:{color:t.color,titleObj:t.titleObj,modificationDate:t.modificationDate,contentsObj:t.contentsObj,richText:t.richText,parentRect:t.rect,borderStyle:0,id:`popup_${t.id}`,rotation:t.rotation},parent:this.parent,elements:[this]});this.parent.div.append(n.render())}render(){(0,r.unreachable)("Abstract method `AnnotationElement.render` called")}_getElementsByName(e,t=null){const n=[];if(this._fieldObjects){const i=this._fieldObjects[e];if(i)for(const{page:e,id:a,exportValues:s}of i){if(-1===e)continue;if(a===t)continue;const i="string"==typeof s?s:null,o=document.querySelector(`[data-element-id="${a}"]`);!o||u.has(o)?n.push({id:a,exportValue:i,domElement:o}):(0,r.warn)(`_getElementsByName - element not allowed: ${a}`)}return n}for(const r of document.getElementsByName(e)){const{exportValue:e}=r,i=r.getAttribute("data-element-id");i!==t&&u.has(r)&&n.push({id:i,exportValue:e,domElement:r})}return n}show(){this.container&&(this.container.hidden=!1),this.popup?.maybeShow()}hide(){this.container&&(this.container.hidden=!0),this.popup?.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const e=this.getElementsToTriggerPopup();if(Array.isArray(e))for(const t of e)t.classList.add("highlightArea");else e.classList.add("highlightArea")}_editOnDoubleClick(){const{annotationEditorType:e,data:{id:t}}=this;this.container.addEventListener("dblclick",(()=>{this.linkService.eventBus?.dispatch("switchannotationeditormode",{source:this,mode:e,editId:t})}))}}class f extends p{constructor(e,t=null){super(e,{isRenderable:!0,ignoreBorder:!!t?.ignoreBorder,createQuadrilaterals:!0}),this.isTooltipOnly=e.data.isTooltipOnly}render(){const{data:e,linkService:t}=this,n=document.createElement("a");n.setAttribute("data-element-id",e.id);let r=!1;return e.url?(t.addLinkAttributes(n,e.url,e.newWindow),r=!0):e.action?(this._bindNamedAction(n,e.action),r=!0):e.attachment?(this._bindAttachment(n,e.attachment),r=!0):e.setOCGState?(this.#Zt(n,e.setOCGState),r=!0):e.dest?(this._bindLink(n,e.dest),r=!0):(e.actions&&(e.actions.Action||e.actions["Mouse Up"]||e.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(n,e),r=!0),e.resetForm?(this._bindResetFormAction(n,e.resetForm),r=!0):this.isTooltipOnly&&!r&&(this._bindLink(n,""),r=!0)),this.container.classList.add("linkAnnotation"),r&&this.container.append(n),this.container}#en(){this.container.setAttribute("data-internal-link","")}_bindLink(e,t){e.href=this.linkService.getDestinationHash(t),e.onclick=()=>(t&&this.linkService.goToDestination(t),!1),(t||""===t)&&this.#en()}_bindNamedAction(e,t){e.href=this.linkService.getAnchorUrl(""),e.onclick=()=>(this.linkService.executeNamedAction(t),!1),this.#en()}_bindAttachment(e,t){e.href=this.linkService.getAnchorUrl(""),e.onclick=()=>(this.downloadManager?.openOrDownloadData(this.container,t.content,t.filename),!1),this.#en()}#Zt(e,t){e.href=this.linkService.getAnchorUrl(""),e.onclick=()=>(this.linkService.executeSetOCGState(t),!1),this.#en()}_bindJSAction(e,t){e.href=this.linkService.getAnchorUrl("");const n=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const r of Object.keys(t.actions)){const i=n.get(r);i&&(e[i]=()=>(this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:t.id,name:r}}),!1))}e.onclick||(e.onclick=()=>!1),this.#en()}_bindResetFormAction(e,t){const n=e.onclick;if(n||(e.href=this.linkService.getAnchorUrl("")),this.#en(),!this._fieldObjects)return(0,r.warn)('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),void(n||(e.onclick=()=>!1));e.onclick=()=>{n?.();const{fields:e,refs:i,include:a}=t,s=[];if(0!==e.length||0!==i.length){const t=new Set(i);for(const n of e){const e=this._fieldObjects[n]||[];for(const{id:n}of e)t.add(n)}for(const e of Object.values(this._fieldObjects))for(const n of e)t.has(n.id)===a&&s.push(n)}else for(const e of Object.values(this._fieldObjects))s.push(...e);const o=this.annotationStorage,l=[];for(const e of s){const{id:t}=e;switch(l.push(t),e.type){case"text":{const n=e.defaultValue||"";o.setValue(t,{value:n});break}case"checkbox":case"radiobutton":{const n=e.defaultValue===e.exportValues;o.setValue(t,{value:n});break}case"combobox":case"listbox":{const n=e.defaultValue||"";o.setValue(t,{value:n});break}default:continue}const n=document.querySelector(`[data-element-id="${t}"]`);n&&(u.has(n)?n.dispatchEvent(new Event("resetform")):(0,r.warn)(`_bindResetFormAction - element not allowed: ${t}`))}return this.enableScripting&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:l,name:"ResetForm"}}),!1}}}class g extends p{constructor(e){super(e,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const e=document.createElement("img");return e.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",e.alt="[{{type}} Annotation]",e.dataset.l10nId="text_annotation_type",e.dataset.l10nArgs=JSON.stringify({type:this.data.name}),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.append(e),this.container}}class m extends p{render(){return this.data.alternativeText&&(this.container.title=this.data.alternativeText),this.container}showElementAndHideCanvas(e){this.data.hasOwnCanvas&&("CANVAS"===e.previousSibling?.nodeName&&(e.previousSibling.hidden=!0),e.hidden=!1)}_getKeyModifier(e){const{isWin:t,isMac:n}=r.FeatureTest.platform;return t&&e.ctrlKey||n&&e.metaKey}_setEventListener(e,t,n,r,i){n.includes("mouse")?e.addEventListener(n,(e=>{this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:r,value:i(e),shift:e.shiftKey,modifier:this._getKeyModifier(e)}})})):e.addEventListener(n,(e=>{if("blur"===n){if(!t.focused||!e.relatedTarget)return;t.focused=!1}else if("focus"===n){if(t.focused)return;t.focused=!0}i&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:r,value:i(e)}})}))}_setEventListeners(e,t,n,r){for(const[i,a]of n)("Action"===a||this.data.actions?.[a])&&("Focus"!==a&&"Blur"!==a||(t||={focused:!1}),this._setEventListener(e,t,i,a,r),"Focus"!==a||this.data.actions?.Blur?"Blur"!==a||this.data.actions?.Focus||this._setEventListener(e,t,"focus","Focus",null):this._setEventListener(e,t,"blur","Blur",null))}_setBackgroundColor(e){const t=this.data.backgroundColor||null;e.style.backgroundColor=null===t?"transparent":r.Util.makeHexColor(t[0],t[1],t[2])}_setTextStyle(e){const{fontColor:t}=this.data.defaultAppearanceData,n=this.data.defaultAppearanceData.fontSize||9,i=e.style;let a;const s=e=>Math.round(10*e)/10;if(this.data.multiLine){const e=Math.abs(this.data.rect[3]-this.data.rect[1]-2),t=e/(Math.round(e/(r.LINE_FACTOR*n))||1);a=Math.min(n,s(t/r.LINE_FACTOR))}else{const e=Math.abs(this.data.rect[3]-this.data.rect[1]-2);a=Math.min(n,s(e/r.LINE_FACTOR))}i.fontSize=`calc(${a}px * var(--scale-factor))`,i.color=r.Util.makeHexColor(t[0],t[1],t[2]),null!==this.data.textAlignment&&(i.textAlign=["left","center","right"][this.data.textAlignment])}_setRequired(e,t){t?e.setAttribute("required",!0):e.removeAttribute("required"),e.setAttribute("aria-required",t)}}class b extends m{constructor(e){super(e,{isRenderable:e.renderForms||!e.data.hasAppearance&&!!e.data.fieldValue})}setPropertyOnSiblings(e,t,n,r){const i=this.annotationStorage;for(const a of this._getElementsByName(e.name,e.id))a.domElement&&(a.domElement[t]=n),i.setValue(a.id,{[r]:n})}render(){const e=this.annotationStorage,t=this.data.id;this.container.classList.add("textWidgetAnnotation");let n=null;if(this.renderForms){const r=e.getValue(t,{value:this.data.fieldValue});let i=r.value||"";const a=e.getValue(t,{charLimit:this.data.maxLen}).charLimit;a&&i.length>a&&(i=i.slice(0,a));let s=r.formattedValue||this.data.textContent?.join("\n")||null;s&&this.data.comb&&(s=s.replaceAll(/\s+/g,""));const o={userValue:i,formattedValue:s,lastCommittedValue:null,commitKey:1,focused:!1};this.data.multiLine?(n=document.createElement("textarea"),n.textContent=s??i,this.data.doNotScroll&&(n.style.overflowY="hidden")):(n=document.createElement("input"),n.type="text",n.setAttribute("value",s??i),this.data.doNotScroll&&(n.style.overflowX="hidden")),this.data.hasOwnCanvas&&(n.hidden=!0),u.add(n),n.setAttribute("data-element-id",t),n.disabled=this.data.readOnly,n.name=this.data.fieldName,n.tabIndex=c,this._setRequired(n,this.data.required),a&&(n.maxLength=a),n.addEventListener("input",(r=>{e.setValue(t,{value:r.target.value}),this.setPropertyOnSiblings(n,"value",r.target.value,"value"),o.formattedValue=null})),n.addEventListener("resetform",(e=>{const t=this.data.defaultFieldValue??"";n.value=o.userValue=t,o.formattedValue=null}));let l=e=>{const{formattedValue:t}=o;null!=t&&(e.target.value=t),e.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){n.addEventListener("focus",(e=>{if(o.focused)return;const{target:t}=e;o.userValue&&(t.value=o.userValue),o.lastCommittedValue=t.value,o.commitKey=1,o.focused=!0})),n.addEventListener("updatefromsandbox",(n=>{this.showElementAndHideCanvas(n.target);const r={value(n){o.userValue=n.detail.value??"",e.setValue(t,{value:o.userValue.toString()}),n.target.value=o.userValue},formattedValue(n){const{formattedValue:r}=n.detail;o.formattedValue=r,null!=r&&n.target!==document.activeElement&&(n.target.value=r),e.setValue(t,{formattedValue:r})},selRange(e){e.target.setSelectionRange(...e.detail.selRange)},charLimit:n=>{const{charLimit:r}=n.detail,{target:i}=n;if(0===r)return void i.removeAttribute("maxLength");i.setAttribute("maxLength",r);let a=o.userValue;!a||a.length<=r||(a=a.slice(0,r),i.value=o.userValue=a,e.setValue(t,{value:a}),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:t,name:"Keystroke",value:a,willCommit:!0,commitKey:1,selStart:i.selectionStart,selEnd:i.selectionEnd}}))}};this._dispatchEventFromSandbox(r,n)})),n.addEventListener("keydown",(e=>{o.commitKey=1;let n=-1;if("Escape"===e.key?n=0:"Enter"!==e.key||this.data.multiLine?"Tab"===e.key&&(o.commitKey=3):n=2,-1===n)return;const{value:r}=e.target;o.lastCommittedValue!==r&&(o.lastCommittedValue=r,o.userValue=r,this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:t,name:"Keystroke",value:r,willCommit:!0,commitKey:n,selStart:e.target.selectionStart,selEnd:e.target.selectionEnd}}))}));const r=l;l=null,n.addEventListener("blur",(e=>{if(!o.focused||!e.relatedTarget)return;o.focused=!1;const{value:n}=e.target;o.userValue=n,o.lastCommittedValue!==n&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:t,name:"Keystroke",value:n,willCommit:!0,commitKey:o.commitKey,selStart:e.target.selectionStart,selEnd:e.target.selectionEnd}}),r(e)})),this.data.actions?.Keystroke&&n.addEventListener("beforeinput",(e=>{o.lastCommittedValue=null;const{data:n,target:r}=e,{value:i,selectionStart:a,selectionEnd:s}=r;let l=a,c=s;switch(e.inputType){case"deleteWordBackward":{const e=i.substring(0,a).match(/\w*[^\w]*$/);e&&(l-=e[0].length);break}case"deleteWordForward":{const e=i.substring(a).match(/^[^\w]*\w*/);e&&(c+=e[0].length);break}case"deleteContentBackward":a===s&&(l-=1);break;case"deleteContentForward":a===s&&(c+=1)}e.preventDefault(),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:t,name:"Keystroke",value:i,change:n||"",willCommit:!1,selStart:l,selEnd:c}})})),this._setEventListeners(n,o,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(e=>e.target.value))}if(l&&n.addEventListener("blur",l),this.data.comb){const e=(this.data.rect[2]-this.data.rect[0])/a;n.classList.add("comb"),n.style.letterSpacing=`calc(${e}px * var(--scale-factor) - 1ch)`}}else n=document.createElement("div"),n.textContent=this.data.fieldValue,n.style.verticalAlign="middle",n.style.display="table-cell";return this._setTextStyle(n),this._setBackgroundColor(n),this._setDefaultPropertiesFromJS(n),this.container.append(n),this.container}}class v extends m{constructor(e){super(e,{isRenderable:!!e.data.hasOwnCanvas})}}class y extends m{constructor(e){super(e,{isRenderable:e.renderForms})}render(){const e=this.annotationStorage,t=this.data,n=t.id;let r=e.getValue(n,{value:t.exportValue===t.fieldValue}).value;"string"==typeof r&&(r="Off"!==r,e.setValue(n,{value:r})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const i=document.createElement("input");return u.add(i),i.setAttribute("data-element-id",n),i.disabled=t.readOnly,this._setRequired(i,this.data.required),i.type="checkbox",i.name=t.fieldName,r&&i.setAttribute("checked",!0),i.setAttribute("exportValue",t.exportValue),i.tabIndex=c,i.addEventListener("change",(r=>{const{name:i,checked:a}=r.target;for(const r of this._getElementsByName(i,n)){const n=a&&r.exportValue===t.exportValue;r.domElement&&(r.domElement.checked=n),e.setValue(r.id,{value:n})}e.setValue(n,{value:a})})),i.addEventListener("resetform",(e=>{const n=t.defaultFieldValue||"Off";e.target.checked=n===t.exportValue})),this.enableScripting&&this.hasJSActions&&(i.addEventListener("updatefromsandbox",(t=>{const r={value(t){t.target.checked="Off"!==t.detail.value,e.setValue(n,{value:t.target.checked})}};this._dispatchEventFromSandbox(r,t)})),this._setEventListeners(i,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(e=>e.target.checked))),this._setBackgroundColor(i),this._setDefaultPropertiesFromJS(i),this.container.append(i),this.container}}class _ extends m{constructor(e){super(e,{isRenderable:e.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const e=this.annotationStorage,t=this.data,n=t.id;let r=e.getValue(n,{value:t.fieldValue===t.buttonValue}).value;"string"==typeof r&&(r=r!==t.buttonValue,e.setValue(n,{value:r}));const i=document.createElement("input");if(u.add(i),i.setAttribute("data-element-id",n),i.disabled=t.readOnly,this._setRequired(i,this.data.required),i.type="radio",i.name=t.fieldName,r&&i.setAttribute("checked",!0),i.tabIndex=c,i.addEventListener("change",(t=>{const{name:r,checked:i}=t.target;for(const t of this._getElementsByName(r,n))e.setValue(t.id,{value:!1});e.setValue(n,{value:i})})),i.addEventListener("resetform",(e=>{const n=t.defaultFieldValue;e.target.checked=null!=n&&n===t.buttonValue})),this.enableScripting&&this.hasJSActions){const r=t.buttonValue;i.addEventListener("updatefromsandbox",(t=>{const i={value:t=>{const i=r===t.detail.value;for(const r of this._getElementsByName(t.target.name)){const t=i&&r.id===n;r.domElement&&(r.domElement.checked=t),e.setValue(r.id,{value:t})}}};this._dispatchEventFromSandbox(i,t)})),this._setEventListeners(i,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(e=>e.target.checked))}return this._setBackgroundColor(i),this._setDefaultPropertiesFromJS(i),this.container.append(i),this.container}}class A extends f{constructor(e){super(e,{ignoreBorder:e.data.hasAppearance})}render(){const e=super.render();e.classList.add("buttonWidgetAnnotation","pushButton"),this.data.alternativeText&&(e.title=this.data.alternativeText);const t=e.lastChild;return this.enableScripting&&this.hasJSActions&&t&&(this._setDefaultPropertiesFromJS(t),t.addEventListener("updatefromsandbox",(e=>{this._dispatchEventFromSandbox({},e)}))),e}}class w extends m{constructor(e){super(e,{isRenderable:e.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const e=this.annotationStorage,t=this.data.id,n=e.getValue(t,{value:this.data.fieldValue}),r=document.createElement("select");u.add(r),r.setAttribute("data-element-id",t),r.disabled=this.data.readOnly,this._setRequired(r,this.data.required),r.name=this.data.fieldName,r.tabIndex=c;let i=this.data.combo&&this.data.options.length>0;this.data.combo||(r.size=this.data.options.length,this.data.multiSelect&&(r.multiple=!0)),r.addEventListener("resetform",(e=>{const t=this.data.defaultFieldValue;for(const e of r.options)e.selected=e.value===t}));for(const e of this.data.options){const t=document.createElement("option");t.textContent=e.displayValue,t.value=e.exportValue,n.value.includes(e.exportValue)&&(t.setAttribute("selected",!0),i=!1),r.append(t)}let a=null;if(i){const e=document.createElement("option");e.value=" ",e.setAttribute("hidden",!0),e.setAttribute("selected",!0),r.prepend(e),a=()=>{e.remove(),r.removeEventListener("input",a),a=null},r.addEventListener("input",a)}const s=e=>{const t=e?"value":"textContent",{options:n,multiple:i}=r;return i?Array.prototype.filter.call(n,(e=>e.selected)).map((e=>e[t])):-1===n.selectedIndex?null:n[n.selectedIndex][t]};let o=s(!1);const l=e=>{const t=e.target.options;return Array.prototype.map.call(t,(e=>({displayValue:e.textContent,exportValue:e.value})))};return this.enableScripting&&this.hasJSActions?(r.addEventListener("updatefromsandbox",(n=>{const i={value(n){a?.();const i=n.detail.value,l=new Set(Array.isArray(i)?i:[i]);for(const e of r.options)e.selected=l.has(e.value);e.setValue(t,{value:s(!0)}),o=s(!1)},multipleSelection(e){r.multiple=!0},remove(n){const i=r.options,a=n.detail.remove;i[a].selected=!1,r.remove(a),i.length>0&&-1===Array.prototype.findIndex.call(i,(e=>e.selected))&&(i[0].selected=!0),e.setValue(t,{value:s(!0),items:l(n)}),o=s(!1)},clear(n){for(;0!==r.length;)r.remove(0);e.setValue(t,{value:null,items:[]}),o=s(!1)},insert(n){const{index:i,displayValue:a,exportValue:c}=n.detail.insert,u=r.children[i],d=document.createElement("option");d.textContent=a,d.value=c,u?u.before(d):r.append(d),e.setValue(t,{value:s(!0),items:l(n)}),o=s(!1)},items(n){const{items:i}=n.detail;for(;0!==r.length;)r.remove(0);for(const e of i){const{displayValue:t,exportValue:n}=e,i=document.createElement("option");i.textContent=t,i.value=n,r.append(i)}r.options.length>0&&(r.options[0].selected=!0),e.setValue(t,{value:s(!0),items:l(n)}),o=s(!1)},indices(n){const r=new Set(n.detail.indices);for(const e of n.target.options)e.selected=r.has(e.index);e.setValue(t,{value:s(!0)}),o=s(!1)},editable(e){e.target.disabled=!e.detail.editable}};this._dispatchEventFromSandbox(i,n)})),r.addEventListener("input",(n=>{const r=s(!0);e.setValue(t,{value:r}),n.preventDefault(),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:t,name:"Keystroke",value:o,changeEx:r,willCommit:!1,commitKey:1,keyDown:!1}})})),this._setEventListeners(r,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],(e=>e.target.value))):r.addEventListener("input",(function(n){e.setValue(t,{value:s(!0)})})),this.data.combo&&this._setTextStyle(r),this._setBackgroundColor(r),this._setDefaultPropertiesFromJS(r),this.container.append(r),this.container}}class S extends p{constructor(e){const{data:t,elements:n}=e;super(e,{isRenderable:p._hasPopupData(t)}),this.elements=n}render(){this.container.classList.add("popupAnnotation");const e=new x({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),t=[];for(const n of this.elements)n.popup=e,t.push(n.data.id),n.addHighlightArea();return this.container.setAttribute("aria-controls",t.map((e=>`${r.AnnotationPrefix}${e}`)).join(",")),this.container}}class x{#tn=null;#nn=this.#rn.bind(this);#in=this.#an.bind(this);#sn=this.#on.bind(this);#ln=this.#cn.bind(this);#Ut=null;#Fe=null;#un=null;#dn=null;#hn=null;#pn=null;#fn=!1;#gn=null;#mn=null;#bn=null;#vn=null;#yn=!1;constructor({container:e,color:t,elements:n,titleObj:r,modificationDate:a,contentsObj:s,richText:o,parent:l,rect:c,parentRect:u,open:d}){this.#Fe=e,this.#vn=r,this.#un=s,this.#bn=o,this.#hn=l,this.#Ut=t,this.#mn=c,this.#pn=u,this.#dn=n;const h=i.PDFDateString.toDateObject(a);h&&(this.#tn=l.l10n.get("annotation_date_string",{date:h.toLocaleDateString(),time:h.toLocaleTimeString()})),this.trigger=n.flatMap((e=>e.getElementsToTriggerPopup()));for(const e of this.trigger)e.addEventListener("click",this.#ln),e.addEventListener("mouseenter",this.#sn),e.addEventListener("mouseleave",this.#in),e.classList.add("popupTriggerArea");for(const e of n)e.container?.addEventListener("keydown",this.#nn);this.#Fe.hidden=!0,d&&this.#cn()}render(){if(this.#gn)return;const{page:{view:e},viewport:{rawDims:{pageWidth:t,pageHeight:n,pageX:i,pageY:a}}}=this.#hn,s=this.#gn=document.createElement("div");if(s.className="popup",this.#Ut){const e=s.style.outlineColor=r.Util.makeHexColor(...this.#Ut);if(CSS.supports("background-color","color-mix(in srgb, red 30%, white)"))s.style.backgroundColor=`color-mix(in srgb, ${e} 30%, white)`;else{const e=.7;s.style.backgroundColor=r.Util.makeHexColor(...this.#Ut.map((t=>Math.floor(e*(255-t)+t))))}}const o=document.createElement("span");o.className="header";const c=document.createElement("h1");if(o.append(c),({dir:c.dir,str:c.textContent}=this.#vn),s.append(o),this.#tn){const e=document.createElement("span");e.classList.add("popupDate"),this.#tn.then((t=>{e.textContent=t})),o.append(e)}const u=this.#un,d=this.#bn;if(!d?.str||u?.str&&u.str!==d.str){const e=this._formatContents(u);s.append(e)}else l.XfaLayer.render({xfaHtml:d.html,intent:"richText",div:s}),s.lastChild.classList.add("richText","popupContent");let h=!!this.#pn,p=h?this.#pn:this.#mn;for(const e of this.#dn)if(!p||null!==r.Util.intersect(e.data.rect,p)){p=e.data.rect,h=!0;break}const f=r.Util.normalizeRect([p[0],e[3]-p[1]+e[1],p[2],e[3]-p[3]+e[1]]),g=h?p[2]-p[0]+5:0,m=f[0]+g,b=f[1],{style:v}=this.#Fe;v.left=100*(m-i)/t+"%",v.top=100*(b-a)/n+"%",this.#Fe.append(s)}_formatContents({str:e,dir:t}){const n=document.createElement("p");n.classList.add("popupContent"),n.dir=t;const r=e.split(/(?:\r\n?|\n)/);for(let e=0,t=r.length;e<t;++e){const i=r[e];n.append(document.createTextNode(i)),e<t-1&&n.append(document.createElement("br"))}return n}#rn(e){e.altKey||e.shiftKey||e.ctrlKey||e.metaKey||("Enter"===e.key||"Escape"===e.key&&this.#fn)&&this.#cn()}#cn(){this.#fn=!this.#fn,this.#fn?(this.#on(),this.#Fe.addEventListener("click",this.#ln),this.#Fe.addEventListener("keydown",this.#nn)):(this.#an(),this.#Fe.removeEventListener("click",this.#ln),this.#Fe.removeEventListener("keydown",this.#nn))}#on(){this.#gn||this.render(),this.isVisible?this.#fn&&this.#Fe.classList.add("focused"):(this.#Fe.hidden=!1,this.#Fe.style.zIndex=parseInt(this.#Fe.style.zIndex)+1e3)}#an(){this.#Fe.classList.remove("focused"),!this.#fn&&this.isVisible&&(this.#Fe.hidden=!0,this.#Fe.style.zIndex=parseInt(this.#Fe.style.zIndex)-1e3)}forceHide(){this.#yn=this.isVisible,this.#yn&&(this.#Fe.hidden=!0)}maybeShow(){this.#yn&&(this.#yn=!1,this.#Fe.hidden=!1)}get isVisible(){return!1===this.#Fe.hidden}}class E extends p{constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0}),this.textContent=e.data.textContent,this.textPosition=e.data.textPosition,this.annotationEditorType=r.AnnotationEditorType.FREETEXT}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const e=document.createElement("div");e.classList.add("annotationTextContent"),e.setAttribute("role","comment");for(const t of this.textContent){const n=document.createElement("span");n.textContent=t,e.append(n)}this.container.append(e)}return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}t.FreeTextAnnotationElement=E;class k extends p{#_n=null;constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("lineAnnotation");const e=this.data,{width:t,height:n}=d(e.rect),r=this.svgFactory.create(t,n,!0),i=this.#_n=this.svgFactory.createElement("svg:line");return i.setAttribute("x1",e.rect[2]-e.lineCoordinates[0]),i.setAttribute("y1",e.rect[3]-e.lineCoordinates[1]),i.setAttribute("x2",e.rect[2]-e.lineCoordinates[2]),i.setAttribute("y2",e.rect[3]-e.lineCoordinates[3]),i.setAttribute("stroke-width",e.borderStyle.width||1),i.setAttribute("stroke","transparent"),i.setAttribute("fill","transparent"),r.append(i),this.container.append(r),!e.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#_n}addHighlightArea(){this.container.classList.add("highlightArea")}}class C extends p{#An=null;constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("squareAnnotation");const e=this.data,{width:t,height:n}=d(e.rect),r=this.svgFactory.create(t,n,!0),i=e.borderStyle.width,a=this.#An=this.svgFactory.createElement("svg:rect");return a.setAttribute("x",i/2),a.setAttribute("y",i/2),a.setAttribute("width",t-i),a.setAttribute("height",n-i),a.setAttribute("stroke-width",i||1),a.setAttribute("stroke","transparent"),a.setAttribute("fill","transparent"),r.append(a),this.container.append(r),!e.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#An}addHighlightArea(){this.container.classList.add("highlightArea")}}class P extends p{#wn=null;constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("circleAnnotation");const e=this.data,{width:t,height:n}=d(e.rect),r=this.svgFactory.create(t,n,!0),i=e.borderStyle.width,a=this.#wn=this.svgFactory.createElement("svg:ellipse");return a.setAttribute("cx",t/2),a.setAttribute("cy",n/2),a.setAttribute("rx",t/2-i/2),a.setAttribute("ry",n/2-i/2),a.setAttribute("stroke-width",i||1),a.setAttribute("stroke","transparent"),a.setAttribute("fill","transparent"),r.append(a),this.container.append(r),!e.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#wn}addHighlightArea(){this.container.classList.add("highlightArea")}}class T extends p{#Sn=null;constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0}),this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const e=this.data,{width:t,height:n}=d(e.rect),r=this.svgFactory.create(t,n,!0);let i=[];for(const t of e.vertices){const n=t.x-e.rect[0],r=e.rect[3]-t.y;i.push(n+","+r)}i=i.join(" ");const a=this.#Sn=this.svgFactory.createElement(this.svgElementName);return a.setAttribute("points",i),a.setAttribute("stroke-width",e.borderStyle.width||1),a.setAttribute("stroke","transparent"),a.setAttribute("fill","transparent"),r.append(a),this.container.append(r),!e.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#Sn}addHighlightArea(){this.container.classList.add("highlightArea")}}class M extends T{constructor(e){super(e),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class R extends p{constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class F extends p{#xn=[];constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0}),this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline",this.annotationEditorType=r.AnnotationEditorType.INK}render(){this.container.classList.add(this.containerClassName);const e=this.data,{width:t,height:n}=d(e.rect),r=this.svgFactory.create(t,n,!0);for(const t of e.inkLists){let n=[];for(const r of t){const t=r.x-e.rect[0],i=e.rect[3]-r.y;n.push(`${t},${i}`)}n=n.join(" ");const i=this.svgFactory.createElement(this.svgElementName);this.#xn.push(i),i.setAttribute("points",n),i.setAttribute("stroke-width",e.borderStyle.width||1),i.setAttribute("stroke","transparent"),i.setAttribute("fill","transparent"),!e.popupRef&&this.hasPopupData&&this._createPopup(),r.append(i)}return this.container.append(r),this.container}getElementsToTriggerPopup(){return this.#xn}addHighlightArea(){this.container.classList.add("highlightArea")}}t.InkAnnotationElement=F;class D extends p{constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("highlightAnnotation"),this.container}}class I extends p{constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("underlineAnnotation"),this.container}}class L extends p{constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("squigglyAnnotation"),this.container}}class O extends p{constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("strikeoutAnnotation"),this.container}}class N extends p{constructor(e){super(e,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("stampAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}t.StampAnnotationElement=N;class z extends p{#En=null;constructor(e){super(e,{isRenderable:!0});const{filename:t,content:n}=this.data.file;this.filename=(0,i.getFilenameFromUrl)(t,!0),this.content=n,this.linkService.eventBus?.dispatch("fileattachmentannotation",{source:this,filename:t,content:n})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:e,data:t}=this;let n;t.hasAppearance||0===t.fillAlpha?n=document.createElement("div"):(n=document.createElement("img"),n.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(t.name)?"paperclip":"pushpin"}.svg`,t.fillAlpha&&t.fillAlpha<1&&(n.style=`filter: opacity(${Math.round(100*t.fillAlpha)}%);`)),n.addEventListener("dblclick",this.#kn.bind(this)),this.#En=n;const{isMac:i}=r.FeatureTest.platform;return e.addEventListener("keydown",(e=>{"Enter"===e.key&&(i?e.metaKey:e.ctrlKey)&&this.#kn()})),!t.popupRef&&this.hasPopupData?this._createPopup():n.classList.add("popupTriggerArea"),e.append(n),e}getElementsToTriggerPopup(){return this.#En}addHighlightArea(){this.container.classList.add("highlightArea")}#kn(){this.downloadManager?.openOrDownloadData(this.container,this.content,this.filename)}}t.AnnotationLayer=class{#wt=null;#Cn=null;#Pn=new Map;constructor({div:e,accessibilityManager:t,annotationCanvasMap:n,l10n:r,page:i,viewport:a}){this.div=e,this.#wt=t,this.#Cn=n,this.l10n=r,this.page=i,this.viewport=a,this.zIndex=0,this.l10n||=o.NullL10n}#Tn(e,t){const n=e.firstChild||e;n.id=`${r.AnnotationPrefix}${t}`,this.div.append(e),this.#wt?.moveElementInDOM(this.div,e,n,!1)}async render(e){const{annotations:t}=e,n=this.div;(0,i.setLayerDimensions)(n,this.viewport);const s=new Map,o={data:null,layer:n,linkService:e.linkService,downloadManager:e.downloadManager,imageResourcesPath:e.imageResourcesPath||"",renderForms:!1!==e.renderForms,svgFactory:new i.DOMSVGFactory,annotationStorage:e.annotationStorage||new a.AnnotationStorage,enableScripting:!0===e.enableScripting,hasJSActions:e.hasJSActions,fieldObjects:e.fieldObjects,parent:this,elements:null};for(const e of t){if(e.noHTML)continue;const t=e.annotationType===r.AnnotationType.POPUP;if(t){const t=s.get(e.id);if(!t)continue;o.elements=t}else{const{width:t,height:n}=d(e.rect);if(t<=0||n<=0)continue}o.data=e;const n=h.create(o);if(!n.isRenderable)continue;if(!t&&e.popupRef){const t=s.get(e.popupRef);t?t.push(n):s.set(e.popupRef,[n])}n.annotationEditorType>0&&this.#Pn.set(n.data.id,n);const i=n.render();e.hidden&&(i.style.visibility="hidden"),this.#Tn(i,e.id)}this.#Mn(),await this.l10n.translate(n)}update({viewport:e}){const t=this.div;this.viewport=e,(0,i.setLayerDimensions)(t,{rotation:e.rotation}),this.#Mn(),t.hidden=!1}#Mn(){if(!this.#Cn)return;const e=this.div;for(const[t,n]of this.#Cn){const r=e.querySelector(`[data-annotation-id="${t}"]`);if(!r)continue;const{firstChild:i}=r;i?"CANVAS"===i.nodeName?i.replaceWith(n):i.before(n):r.append(n)}this.#Cn.clear()}getEditableAnnotations(){return Array.from(this.#Pn.values())}getEditableAnnotation(e){return this.#Pn.get(e)}}},(e,t)=>{function n(e){return Math.floor(255*Math.max(0,Math.min(1,e))).toString(16).padStart(2,"0")}function r(e){return Math.max(0,Math.min(255,255*e))}Object.defineProperty(t,"__esModule",{value:!0}),t.ColorConverters=void 0,t.ColorConverters=class{static CMYK_G([e,t,n,r]){return["G",1-Math.min(1,.3*e+.59*n+.11*t+r)]}static G_CMYK([e]){return["CMYK",0,0,0,1-e]}static G_RGB([e]){return["RGB",e,e,e]}static G_rgb([e]){return[e=r(e),e,e]}static G_HTML([e]){const t=n(e);return`#${t}${t}${t}`}static RGB_G([e,t,n]){return["G",.3*e+.59*t+.11*n]}static RGB_rgb(e){return e.map(r)}static RGB_HTML(e){return`#${e.map(n).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([e,t,n,r]){return["RGB",1-Math.min(1,e+r),1-Math.min(1,n+r),1-Math.min(1,t+r)]}static CMYK_rgb([e,t,n,i]){return[r(1-Math.min(1,e+i)),r(1-Math.min(1,n+i)),r(1-Math.min(1,t+i))]}static CMYK_HTML(e){const t=this.CMYK_RGB(e).slice(1);return this.RGB_HTML(t)}static RGB_CMYK([e,t,n]){const r=1-e,i=1-t,a=1-n;return["CMYK",r,i,a,Math.min(r,i,a)]}}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NullL10n=void 0,t.getL10nFallback=r;const n={of_pages:"of {{pagesCount}}",page_of_pages:"({{pageNumber}} of {{pagesCount}})",document_properties_kb:"{{size_kb}} KB ({{size_b}} bytes)",document_properties_mb:"{{size_mb}} MB ({{size_b}} bytes)",document_properties_date_string:"{{date}}, {{time}}",document_properties_page_size_unit_inches:"in",document_properties_page_size_unit_millimeters:"mm",document_properties_page_size_orientation_portrait:"portrait",document_properties_page_size_orientation_landscape:"landscape",document_properties_page_size_name_a3:"A3",document_properties_page_size_name_a4:"A4",document_properties_page_size_name_letter:"Letter",document_properties_page_size_name_legal:"Legal",document_properties_page_size_dimension_string:"{{width}} × {{height}} {{unit}} ({{orientation}})",document_properties_page_size_dimension_name_string:"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})",document_properties_linearized_yes:"Yes",document_properties_linearized_no:"No",additional_layers:"Additional Layers",page_landmark:"Page {{page}}",thumb_page_title:"Page {{page}}",thumb_page_canvas:"Thumbnail of Page {{page}}",find_reached_top:"Reached top of document, continued from bottom",find_reached_bottom:"Reached end of document, continued from top","find_match_count[one]":"{{current}} of {{total}} match","find_match_count[other]":"{{current}} of {{total}} matches","find_match_count_limit[one]":"More than {{limit}} match","find_match_count_limit[other]":"More than {{limit}} matches",find_not_found:"Phrase not found",page_scale_width:"Page Width",page_scale_fit:"Page Fit",page_scale_auto:"Automatic Zoom",page_scale_actual:"Actual Size",page_scale_percent:"{{scale}}%",loading_error:"An error occurred while loading the PDF.",invalid_file_error:"Invalid or corrupted PDF file.",missing_file_error:"Missing PDF file.",unexpected_response_error:"Unexpected server response.",rendering_error:"An error occurred while rendering the page.",annotation_date_string:"{{date}}, {{time}}",printing_not_supported:"Warning: Printing is not fully supported by this browser.",printing_not_ready:"Warning: The PDF is not fully loaded for printing.",web_fonts_disabled:"Web fonts are disabled: unable to use embedded PDF fonts.",free_text2_default_content:"Start typing…",editor_free_text2_aria_label:"Text Editor",editor_ink2_aria_label:"Draw Editor",editor_ink_canvas_aria_label:"User-created image",editor_alt_text_button_label:"Alt text",editor_alt_text_edit_button_label:"Edit alt text",editor_alt_text_decorative_tooltip:"Marked as decorative"};function r(e,t){switch(e){case"find_match_count":e=`find_match_count[${1===t.total?"one":"other"}]`;break;case"find_match_count_limit":e=`find_match_count_limit[${1===t.limit?"one":"other"}]`}return n[e]||""}n.print_progress_percent="{{progress}}%";const i={getLanguage:async()=>"en-us",getDirection:async()=>"ltr",get:async(e,t=null,n=r(e,t))=>function(e,t){return t?e.replaceAll(/\{\{\s*(\w+)\s*\}\}/g,((e,n)=>n in t?t[n]:"{{"+n+"}}")):e}(n,t),async translate(e){}};t.NullL10n=i},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.XfaLayer=void 0;var r=n(25);t.XfaLayer=class{static setupStorage(e,t,n,r,i){const a=r.getValue(t,{value:null});switch(n.name){case"textarea":if(null!==a.value&&(e.textContent=a.value),"print"===i)break;e.addEventListener("input",(e=>{r.setValue(t,{value:e.target.value})}));break;case"input":if("radio"===n.attributes.type||"checkbox"===n.attributes.type){if(a.value===n.attributes.xfaOn?e.setAttribute("checked",!0):a.value===n.attributes.xfaOff&&e.removeAttribute("checked"),"print"===i)break;e.addEventListener("change",(e=>{r.setValue(t,{value:e.target.checked?e.target.getAttribute("xfaOn"):e.target.getAttribute("xfaOff")})}))}else{if(null!==a.value&&e.setAttribute("value",a.value),"print"===i)break;e.addEventListener("input",(e=>{r.setValue(t,{value:e.target.value})}))}break;case"select":if(null!==a.value){e.setAttribute("value",a.value);for(const e of n.children)e.attributes.value===a.value?e.attributes.selected=!0:e.attributes.hasOwnProperty("selected")&&delete e.attributes.selected}e.addEventListener("input",(e=>{const n=e.target.options,i=-1===n.selectedIndex?"":n[n.selectedIndex].value;r.setValue(t,{value:i})}))}}static setAttributes({html:e,element:t,storage:n=null,intent:r,linkService:i}){const{attributes:a}=t,s=e instanceof HTMLAnchorElement;"radio"===a.type&&(a.name=`${a.name}-${r}`);for(const[t,n]of Object.entries(a))if(null!=n)switch(t){case"class":n.length&&e.setAttribute(t,n.join(" "));break;case"dataId":break;case"id":e.setAttribute("data-element-id",n);break;case"style":Object.assign(e.style,n);break;case"textContent":e.textContent=n;break;default:(!s||"href"!==t&&"newWindow"!==t)&&e.setAttribute(t,n)}s&&i.addLinkAttributes(e,a.href,a.newWindow),n&&a.dataId&&this.setupStorage(e,a.dataId,t,n)}static render(e){const t=e.annotationStorage,n=e.linkService,i=e.xfaHtml,a=e.intent||"display",s=document.createElement(i.name);i.attributes&&this.setAttributes({html:s,element:i,intent:a,linkService:n});const o=[[i,-1,s]],l=e.div;if(l.append(s),e.viewport){const t=`matrix(${e.viewport.transform.join(",")})`;l.style.transform=t}"richText"!==a&&l.setAttribute("class","xfaLayer xfaFont");const c=[];for(;o.length>0;){const[e,i,s]=o.at(-1);if(i+1===e.children.length){o.pop();continue}const l=e.children[++o.at(-1)[1]];if(null===l)continue;const{name:u}=l;if("#text"===u){const e=document.createTextNode(l.value);c.push(e),s.append(e);continue}const d=l?.attributes?.xmlns?document.createElementNS(l.attributes.xmlns,u):document.createElement(u);if(s.append(d),l.attributes&&this.setAttributes({html:d,element:l,storage:t,intent:a,linkService:n}),l.children&&l.children.length>0)o.push([l,-1,d]);else if(l.value){const e=document.createTextNode(l.value);r.XfaText.shouldBuildText(u)&&c.push(e),d.append(e)}}for(const e of l.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))e.setAttribute("readOnly",!0);return{textDivs:c}}static update(e){const t=`matrix(${e.viewport.transform.join(",")})`;e.div.style.transform=t,e.div.hidden=!1}}},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InkEditor=void 0;var r=n(1),i=n(4),a=n(29),s=n(6),o=n(5);class l extends i.AnnotationEditor{#Rn=0;#Fn=0;#Dn=this.canvasPointermove.bind(this);#In=this.canvasPointerleave.bind(this);#Ln=this.canvasPointerup.bind(this);#On=this.canvasPointerdown.bind(this);#Nn=new Path2D;#zn=!1;#jn=!1;#Un=!1;#Bn=null;#Hn=0;#Vn=0;#Wn=null;static _defaultColor=null;static _defaultOpacity=1;static _defaultThickness=1;static _type="ink";constructor(e){super({...e,name:"inkEditor"}),this.color=e.color||null,this.thickness=e.thickness||null,this.opacity=e.opacity||null,this.paths=[],this.bezierPath2D=[],this.allRawPaths=[],this.currentPath=[],this.scaleFactor=1,this.translationX=this.translationY=0,this.x=0,this.y=0,this._willKeepAspectRatio=!0}static initialize(e){i.AnnotationEditor.initialize(e,{strings:["editor_ink_canvas_aria_label","editor_ink2_aria_label"]})}static updateDefaultParams(e,t){switch(e){case r.AnnotationEditorParamsType.INK_THICKNESS:l._defaultThickness=t;break;case r.AnnotationEditorParamsType.INK_COLOR:l._defaultColor=t;break;case r.AnnotationEditorParamsType.INK_OPACITY:l._defaultOpacity=t/100}}updateParams(e,t){switch(e){case r.AnnotationEditorParamsType.INK_THICKNESS:this.#qn(t);break;case r.AnnotationEditorParamsType.INK_COLOR:this.#$t(t);break;case r.AnnotationEditorParamsType.INK_OPACITY:this.#$n(t)}}static get defaultPropertiesToUpdate(){return[[r.AnnotationEditorParamsType.INK_THICKNESS,l._defaultThickness],[r.AnnotationEditorParamsType.INK_COLOR,l._defaultColor||i.AnnotationEditor._defaultLineColor],[r.AnnotationEditorParamsType.INK_OPACITY,Math.round(100*l._defaultOpacity)]]}get propertiesToUpdate(){return[[r.AnnotationEditorParamsType.INK_THICKNESS,this.thickness||l._defaultThickness],[r.AnnotationEditorParamsType.INK_COLOR,this.color||l._defaultColor||i.AnnotationEditor._defaultLineColor],[r.AnnotationEditorParamsType.INK_OPACITY,Math.round(100*(this.opacity??l._defaultOpacity))]]}#qn(e){const t=this.thickness;this.addCommands({cmd:()=>{this.thickness=e,this.#Gn()},undo:()=>{this.thickness=t,this.#Gn()},mustExec:!0,type:r.AnnotationEditorParamsType.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})}#$t(e){const t=this.color;this.addCommands({cmd:()=>{this.color=e,this.#Xn()},undo:()=>{this.color=t,this.#Xn()},mustExec:!0,type:r.AnnotationEditorParamsType.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})}#$n(e){e/=100;const t=this.opacity;this.addCommands({cmd:()=>{this.opacity=e,this.#Xn()},undo:()=>{this.opacity=t,this.#Xn()},mustExec:!0,type:r.AnnotationEditorParamsType.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(this.canvas||(this.#Kn(),this.#Yn()),this.isAttachedToDOM||(this.parent.add(this),this.#Qn()),this.#Gn()))}remove(){null!==this.canvas&&(this.isEmpty()||this.commit(),this.canvas.width=this.canvas.height=0,this.canvas.remove(),this.canvas=null,this.#Bn.disconnect(),this.#Bn=null,super.remove())}setParent(e){!this.parent&&e?this._uiManager.removeShouldRescale(this):this.parent&&null===e&&this._uiManager.addShouldRescale(this),super.setParent(e)}onScaleChanging(){const[e,t]=this.parentDimensions,n=this.width*e,r=this.height*t;this.setDimensions(n,r)}enableEditMode(){this.#zn||null===this.canvas||(super.enableEditMode(),this._isDraggable=!1,this.canvas.addEventListener("pointerdown",this.#On))}disableEditMode(){this.isInEditMode()&&null!==this.canvas&&(super.disableEditMode(),this._isDraggable=!this.isEmpty(),this.div.classList.remove("editing"),this.canvas.removeEventListener("pointerdown",this.#On))}onceAdded(){this._isDraggable=!this.isEmpty()}isEmpty(){return 0===this.paths.length||1===this.paths.length&&0===this.paths[0].length}#Jn(){const{parentRotation:e,parentDimensions:[t,n]}=this;switch(e){case 90:return[0,n,n,t];case 180:return[t,n,t,n];case 270:return[t,0,n,t];default:return[0,0,t,n]}}#Zn(){const{ctx:e,color:t,opacity:n,thickness:r,parentScale:i,scaleFactor:a}=this;e.lineWidth=r*i/a,e.lineCap="round",e.lineJoin="round",e.miterLimit=10,e.strokeStyle=`${t}${(0,o.opacityToHex)(n)}`}#er(e,t){this.canvas.addEventListener("contextmenu",s.noContextMenu),this.canvas.addEventListener("pointerleave",this.#In),this.canvas.addEventListener("pointermove",this.#Dn),this.canvas.addEventListener("pointerup",this.#Ln),this.canvas.removeEventListener("pointerdown",this.#On),this.isEditing=!0,this.#Un||(this.#Un=!0,this.#Qn(),this.thickness||=l._defaultThickness,this.color||=l._defaultColor||i.AnnotationEditor._defaultLineColor,this.opacity??=l._defaultOpacity),this.currentPath.push([e,t]),this.#jn=!1,this.#Zn(),this.#Wn=()=>{this.#tr(),this.#Wn&&window.requestAnimationFrame(this.#Wn)},window.requestAnimationFrame(this.#Wn)}#nr(e,t){const[n,r]=this.currentPath.at(-1);if(this.currentPath.length>1&&e===n&&t===r)return;const i=this.currentPath;let a=this.#Nn;if(i.push([e,t]),this.#jn=!0,i.length<=2)return a.moveTo(...i[0]),void a.lineTo(e,t);3===i.length&&(this.#Nn=a=new Path2D,a.moveTo(...i[0])),this.#rr(a,...i.at(-3),...i.at(-2),e,t)}#ir(){if(0===this.currentPath.length)return;const e=this.currentPath.at(-1);this.#Nn.lineTo(...e)}#ar(e,t){let n;if(this.#Wn=null,e=Math.min(Math.max(e,0),this.canvas.width),t=Math.min(Math.max(t,0),this.canvas.height),this.#nr(e,t),this.#ir(),1!==this.currentPath.length)n=this.#sr();else{const r=[e,t];n=[[r,r.slice(),r.slice(),r]]}const r=this.#Nn,i=this.currentPath;this.currentPath=[],this.#Nn=new Path2D,this.addCommands({cmd:()=>{this.allRawPaths.push(i),this.paths.push(n),this.bezierPath2D.push(r),this.rebuild()},undo:()=>{this.allRawPaths.pop(),this.paths.pop(),this.bezierPath2D.pop(),0===this.paths.length?this.remove():(this.canvas||(this.#Kn(),this.#Yn()),this.#Gn())},mustExec:!0})}#tr(){if(!this.#jn)return;this.#jn=!1,Math.ceil(this.thickness*this.parentScale);const e=this.currentPath.slice(-3),t=e.map((e=>e[0])),n=e.map((e=>e[1])),{ctx:r}=(Math.min(...t),Math.max(...t),Math.min(...n),Math.max(...n),this);r.save(),r.clearRect(0,0,this.canvas.width,this.canvas.height);for(const e of this.bezierPath2D)r.stroke(e);r.stroke(this.#Nn),r.restore()}#rr(e,t,n,r,i,a,s){const o=(t+r)/2,l=(n+i)/2,c=(r+a)/2,u=(i+s)/2;e.bezierCurveTo(o+2*(r-o)/3,l+2*(i-l)/3,c+2*(r-c)/3,u+2*(i-u)/3,c,u)}#sr(){const e=this.currentPath;if(e.length<=2)return[[e[0],e[0],e.at(-1),e.at(-1)]];const t=[];let n,[r,i]=e[0];for(n=1;n<e.length-2;n++){const[a,s]=e[n],[o,l]=e[n+1],c=(a+o)/2,u=(s+l)/2,d=[r+2*(a-r)/3,i+2*(s-i)/3],h=[c+2*(a-c)/3,u+2*(s-u)/3];t.push([[r,i],d,h,[c,u]]),[r,i]=[c,u]}const[a,s]=e[n],[o,l]=e[n+1],c=[r+2*(a-r)/3,i+2*(s-i)/3],u=[o+2*(a-o)/3,l+2*(s-l)/3];return t.push([[r,i],c,u,[o,l]]),t}#Xn(){if(this.isEmpty())return void this.#or();this.#Zn();const{canvas:e,ctx:t}=this;t.setTransform(1,0,0,1,0,0),t.clearRect(0,0,e.width,e.height),this.#or();for(const e of this.bezierPath2D)t.stroke(e)}commit(){this.#zn||(super.commit(),this.isEditing=!1,this.disableEditMode(),this.setInForeground(),this.#zn=!0,this.div.classList.add("disabled"),this.#Gn(!0),this.makeResizable(),this.parent.addInkEditorIfNeeded(!0),this.moveInDOM(),this.div.focus({preventScroll:!0}))}focusin(e){this._focusEventsAllowed&&(super.focusin(e),this.enableEditMode())}canvasPointerdown(e){0===e.button&&this.isInEditMode()&&!this.#zn&&(this.setInForeground(),e.preventDefault(),"mouse"!==e.type&&this.div.focus(),this.#er(e.offsetX,e.offsetY))}canvasPointermove(e){e.preventDefault(),this.#nr(e.offsetX,e.offsetY)}canvasPointerup(e){e.preventDefault(),this.#lr(e)}canvasPointerleave(e){this.#lr(e)}#lr(e){this.canvas.removeEventListener("pointerleave",this.#In),this.canvas.removeEventListener("pointermove",this.#Dn),this.canvas.removeEventListener("pointerup",this.#Ln),this.canvas.addEventListener("pointerdown",this.#On),setTimeout((()=>{this.canvas.removeEventListener("contextmenu",s.noContextMenu)}),10),this.#ar(e.offsetX,e.offsetY),this.addToAnnotationStorage(),this.setInBackground()}#Kn(){this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=0,this.canvas.className="inkEditorCanvas",i.AnnotationEditor._l10nPromise.get("editor_ink_canvas_aria_label").then((e=>this.canvas?.setAttribute("aria-label",e))),this.div.append(this.canvas),this.ctx=this.canvas.getContext("2d")}#Yn(){this.#Bn=new ResizeObserver((e=>{const t=e[0].contentRect;t.width&&t.height&&this.setDimensions(t.width,t.height)})),this.#Bn.observe(this.div)}get isResizable(){return!this.isEmpty()&&this.#zn}render(){if(this.div)return this.div;let e,t;this.width&&(e=this.x,t=this.y),super.render(),i.AnnotationEditor._l10nPromise.get("editor_ink2_aria_label").then((e=>this.div?.setAttribute("aria-label",e)));const[n,r,a,s]=this.#Jn();if(this.setAt(n,r,0,0),this.setDims(a,s),this.#Kn(),this.width){const[n,r]=this.parentDimensions;this.setAspectRatio(this.width*n,this.height*r),this.setAt(e*n,t*r,this.width*n,this.height*r),this.#Un=!0,this.#Qn(),this.setDims(this.width*n,this.height*r),this.#Xn(),this.div.classList.add("disabled")}else this.div.classList.add("editing"),this.enableEditMode();return this.#Yn(),this.div}#Qn(){if(!this.#Un)return;const[e,t]=this.parentDimensions;this.canvas.width=Math.ceil(this.width*e),this.canvas.height=Math.ceil(this.height*t),this.#or()}setDimensions(e,t){const n=Math.round(e),r=Math.round(t);if(this.#Hn===n&&this.#Vn===r)return;this.#Hn=n,this.#Vn=r,this.canvas.style.visibility="hidden";const[i,a]=this.parentDimensions;this.width=e/i,this.height=t/a,this.fixAndSetPosition(),this.#zn&&this.#cr(e,t),this.#Qn(),this.#Xn(),this.canvas.style.visibility="visible",this.fixDims()}#cr(e,t){const n=this.#ur(),r=(e-n)/this.#Fn,i=(t-n)/this.#Rn;this.scaleFactor=Math.min(r,i)}#or(){const e=this.#ur()/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+e,this.translationY*this.scaleFactor+e)}static#dr(e){const t=new Path2D;for(let n=0,r=e.length;n<r;n++){const[r,i,a,s]=e[n];0===n&&t.moveTo(...r),t.bezierCurveTo(i[0],i[1],a[0],a[1],s[0],s[1])}return t}static#hr(e,t,n){const[r,i,a,s]=t;switch(n){case 0:for(let t=0,n=e.length;t<n;t+=2)e[t]+=r,e[t+1]=s-e[t+1];break;case 90:for(let t=0,n=e.length;t<n;t+=2){const n=e[t];e[t]=e[t+1]+r,e[t+1]=n+i}break;case 180:for(let t=0,n=e.length;t<n;t+=2)e[t]=a-e[t],e[t+1]+=i;break;case 270:for(let t=0,n=e.length;t<n;t+=2){const n=e[t];e[t]=a-e[t+1],e[t+1]=s-n}break;default:throw new Error("Invalid rotation")}return e}static#pr(e,t,n){const[r,i,a,s]=t;switch(n){case 0:for(let t=0,n=e.length;t<n;t+=2)e[t]-=r,e[t+1]=s-e[t+1];break;case 90:for(let t=0,n=e.length;t<n;t+=2){const n=e[t];e[t]=e[t+1]-i,e[t+1]=n-r}break;case 180:for(let t=0,n=e.length;t<n;t+=2)e[t]=a-e[t],e[t+1]-=i;break;case 270:for(let t=0,n=e.length;t<n;t+=2){const n=e[t];e[t]=s-e[t+1],e[t+1]=a-n}break;default:throw new Error("Invalid rotation")}return e}#fr(e,t,n,r){const i=[],a=this.thickness/2,s=e*t+a,o=e*n+a;for(const t of this.paths){const n=[],a=[];for(let r=0,i=t.length;r<i;r++){const[l,c,u,d]=t[r],h=e*l[0]+s,p=e*l[1]+o,f=e*c[0]+s,g=e*c[1]+o,m=e*u[0]+s,b=e*u[1]+o,v=e*d[0]+s,y=e*d[1]+o;0===r&&(n.push(h,p),a.push(h,p)),n.push(f,g,m,b,v,y),a.push(f,g),r===i-1&&a.push(v,y)}i.push({bezier:l.#hr(n,r,this.rotation),points:l.#hr(a,r,this.rotation)})}return i}#gr(){let e=1/0,t=-1/0,n=1/0,i=-1/0;for(const a of this.paths)for(const[s,o,l,c]of a){const a=r.Util.bezierBoundingBox(...s,...o,...l,...c);e=Math.min(e,a[0]),n=Math.min(n,a[1]),t=Math.max(t,a[2]),i=Math.max(i,a[3])}return[e,n,t,i]}#ur(){return this.#zn?Math.ceil(this.thickness*this.parentScale):0}#Gn(e=!1){if(this.isEmpty())return;if(!this.#zn)return void this.#Xn();const t=this.#gr(),n=this.#ur();this.#Fn=Math.max(i.AnnotationEditor.MIN_SIZE,t[2]-t[0]),this.#Rn=Math.max(i.AnnotationEditor.MIN_SIZE,t[3]-t[1]);const r=Math.ceil(n+this.#Fn*this.scaleFactor),a=Math.ceil(n+this.#Rn*this.scaleFactor),[s,o]=this.parentDimensions;this.width=r/s,this.height=a/o,this.setAspectRatio(r,a);const l=this.translationX,c=this.translationY;this.translationX=-t[0],this.translationY=-t[1],this.#Qn(),this.#Xn(),this.#Hn=r,this.#Vn=a,this.setDims(r,a);const u=e?n/this.scaleFactor/2:0;this.translate(l-this.translationX-u,c-this.translationY-u)}static deserialize(e,t,n){if(e instanceof a.InkAnnotationElement)return null;const s=super.deserialize(e,t,n);s.thickness=e.thickness,s.color=r.Util.makeHexColor(...e.color),s.opacity=e.opacity;const[o,c]=s.pageDimensions,u=s.width*o,d=s.height*c,h=s.parentScale,p=e.thickness/2;s.#zn=!0,s.#Hn=Math.round(u),s.#Vn=Math.round(d);const{paths:f,rect:g,rotation:m}=e;for(let{bezier:e}of f){e=l.#pr(e,g,m);const t=[];s.paths.push(t);let n=h*(e[0]-p),r=h*(e[1]-p);for(let i=2,a=e.length;i<a;i+=6){const a=h*(e[i]-p),s=h*(e[i+1]-p),o=h*(e[i+2]-p),l=h*(e[i+3]-p),c=h*(e[i+4]-p),u=h*(e[i+5]-p);t.push([[n,r],[a,s],[o,l],[c,u]]),n=c,r=u}const i=this.#dr(t);s.bezierPath2D.push(i)}const b=s.#gr();return s.#Fn=Math.max(i.AnnotationEditor.MIN_SIZE,b[2]-b[0]),s.#Rn=Math.max(i.AnnotationEditor.MIN_SIZE,b[3]-b[1]),s.#cr(u,d),s}serialize(){if(this.isEmpty())return null;const e=this.getRect(0,0),t=i.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);return{annotationType:r.AnnotationEditorType.INK,color:t,thickness:this.thickness,opacity:this.opacity,paths:this.#fr(this.scaleFactor/this.parentScale,this.translationX,this.translationY,e),pageIndex:this.pageIndex,rect:e,rotation:this.rotation,structTreeParentId:this._structTreeParentId}}}t.InkEditor=l},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StampEditor=void 0;var r=n(1),i=n(4),a=n(6),s=n(29);class o extends i.AnnotationEditor{#mr=null;#br=null;#vr=null;#yr=null;#_r=null;#Ar=null;#Bn=null;#wr=null;#Sr=!1;#xr=!1;static _type="stamp";constructor(e){super({...e,name:"stampEditor"}),this.#yr=e.bitmapUrl,this.#_r=e.bitmapFile}static initialize(e){i.AnnotationEditor.initialize(e)}static get supportedTypes(){return(0,r.shadow)(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map((e=>`image/${e}`)))}static get supportedTypesStr(){return(0,r.shadow)(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(e){return this.supportedTypes.includes(e)}static paste(e,t){t.pasteEditor(r.AnnotationEditorType.STAMP,{bitmapFile:e.getAsFile()})}#Er(e,t=!1){e?(this.#mr=e.bitmap,t||(this.#br=e.id,this.#Sr=e.isSvg),this.#Kn()):this.remove()}#kr(){this.#vr=null,this._uiManager.enableWaiting(!1),this.#Ar&&this.div.focus()}#Cr(){if(this.#br)return this._uiManager.enableWaiting(!0),void this._uiManager.imageManager.getFromId(this.#br).then((e=>this.#Er(e,!0))).finally((()=>this.#kr()));if(this.#yr){const e=this.#yr;return this.#yr=null,this._uiManager.enableWaiting(!0),void(this.#vr=this._uiManager.imageManager.getFromUrl(e).then((e=>this.#Er(e))).finally((()=>this.#kr())))}if(this.#_r){const e=this.#_r;return this.#_r=null,this._uiManager.enableWaiting(!0),void(this.#vr=this._uiManager.imageManager.getFromFile(e).then((e=>this.#Er(e))).finally((()=>this.#kr())))}const e=document.createElement("input");e.type="file",e.accept=o.supportedTypesStr,this.#vr=new Promise((t=>{e.addEventListener("change",(async()=>{if(e.files&&0!==e.files.length){this._uiManager.enableWaiting(!0);const t=await this._uiManager.imageManager.getFromFile(e.files[0]);this.#Er(t)}else this.remove();t()})),e.addEventListener("cancel",(()=>{this.remove(),t()}))})).finally((()=>this.#kr())),e.click()}remove(){this.#br&&(this.#mr=null,this._uiManager.imageManager.deleteId(this.#br),this.#Ar?.remove(),this.#Ar=null,this.#Bn?.disconnect(),this.#Bn=null),super.remove()}rebuild(){this.parent?(super.rebuild(),null!==this.div&&(this.#br&&this.#Cr(),this.isAttachedToDOM||this.parent.add(this))):this.#br&&this.#Cr()}onceAdded(){this._isDraggable=!0,this.div.focus()}isEmpty(){return!(this.#vr||this.#mr||this.#yr||this.#_r)}get isResizable(){return!0}render(){if(this.div)return this.div;let e,t;if(this.width&&(e=this.x,t=this.y),super.render(),this.div.hidden=!0,this.#mr?this.#Kn():this.#Cr(),this.width){const[n,r]=this.parentDimensions;this.setAt(e*n,t*r,this.width*n,this.height*r)}return this.div}#Kn(){const{div:e}=this;let{width:t,height:n}=this.#mr;const[r,i]=this.pageDimensions,a=.75;if(this.width)t=this.width*r,n=this.height*i;else if(t>a*r||n>a*i){const e=Math.min(a*r/t,a*i/n);t*=e,n*=e}const[s,o]=this.parentDimensions;this.setDims(t*s/r,n*o/i),this._uiManager.enableWaiting(!1);const l=this.#Ar=document.createElement("canvas");e.append(l),e.hidden=!1,this.#Pr(t,n),this.#Yn(),this.#xr||(this.parent.addUndoableEditor(this),this.#xr=!0),this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",subtype:this.editorType,data:{action:"inserted_image"}}}),this.addAltTextButton()}#Tr(e,t){const[n,r]=this.parentDimensions;this.width=e/n,this.height=t/r,this.setDims(e,t),this._initialOptions?.isCentered?this.center():this.fixAndSetPosition(),this._initialOptions=null,null!==this.#wr&&clearTimeout(this.#wr),this.#wr=setTimeout((()=>{this.#wr=null,this.#Pr(e,t)}),200)}#Mr(e,t){const{width:n,height:r}=this.#mr;let i=n,a=r,s=this.#mr;for(;i>2*e||a>2*t;){const n=i,r=a;i>2*e&&(i=i>=16384?Math.floor(i/2)-1:Math.ceil(i/2)),a>2*t&&(a=a>=16384?Math.floor(a/2)-1:Math.ceil(a/2));const o=new OffscreenCanvas(i,a);o.getContext("2d").drawImage(s,0,0,n,r,0,0,i,a),s=o.transferToImageBitmap()}return s}#Pr(e,t){e=Math.ceil(e),t=Math.ceil(t);const n=this.#Ar;if(!n||n.width===e&&n.height===t)return;n.width=e,n.height=t;const r=this.#Sr?this.#mr:this.#Mr(e,t),i=n.getContext("2d");i.filter=this._uiManager.hcmFilter,i.drawImage(r,0,0,r.width,r.height,0,0,e,t)}#Rr(e){if(e){if(this.#Sr){const e=this._uiManager.imageManager.getSvgUrl(this.#br);if(e)return e}const e=document.createElement("canvas");return({width:e.width,height:e.height}=this.#mr),e.getContext("2d").drawImage(this.#mr,0,0),e.toDataURL()}if(this.#Sr){const[e,t]=this.pageDimensions,n=Math.round(this.width*e*a.PixelsPerInch.PDF_TO_CSS_UNITS),r=Math.round(this.height*t*a.PixelsPerInch.PDF_TO_CSS_UNITS),i=new OffscreenCanvas(n,r);return i.getContext("2d").drawImage(this.#mr,0,0,this.#mr.width,this.#mr.height,0,0,n,r),i.transferToImageBitmap()}return structuredClone(this.#mr)}#Yn(){this.#Bn=new ResizeObserver((e=>{const t=e[0].contentRect;t.width&&t.height&&this.#Tr(t.width,t.height)})),this.#Bn.observe(this.div)}static deserialize(e,t,n){if(e instanceof s.StampAnnotationElement)return null;const r=super.deserialize(e,t,n),{rect:i,bitmapUrl:a,bitmapId:o,isSvg:l,accessibilityData:c}=e;o&&n.imageManager.isValidId(o)?r.#br=o:r.#yr=a,r.#Sr=l;const[u,d]=r.pageDimensions;return r.width=(i[2]-i[0])/u,r.height=(i[3]-i[1])/d,c&&(r.altTextData=c),r}serialize(e=!1,t=null){if(this.isEmpty())return null;const n={annotationType:r.AnnotationEditorType.STAMP,bitmapId:this.#br,pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:this.#Sr,structTreeParentId:this._structTreeParentId};if(e)return n.bitmapUrl=this.#Rr(!0),n.accessibilityData=this.altTextData,n;const{decorative:i,altText:a}=this.altTextData;if(!i&&a&&(n.accessibilityData={type:"Figure",alt:a}),null===t)return n;t.stamps||=new Map;const s=this.#Sr?(n.rect[2]-n.rect[0])*(n.rect[3]-n.rect[1]):null;if(t.stamps.has(this.#br)){if(this.#Sr){const e=t.stamps.get(this.#br);s>e.area&&(e.area=s,e.serialized.bitmap.close(),e.serialized.bitmap=this.#Rr(!1))}}else t.stamps.set(this.#br,{area:s,serialized:n}),n.bitmap=this.#Rr(!1);return n}}t.StampEditor=o}],__webpack_module_cache__={};function __w_pdfjs_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__w_pdfjs_require__),n.exports}var __nested_webpack_exports__={};return(()=>{var e=__nested_webpack_exports__;Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"AbortException",{enumerable:!0,get:function(){return t.AbortException}}),Object.defineProperty(e,"AnnotationEditorLayer",{enumerable:!0,get:function(){return a.AnnotationEditorLayer}}),Object.defineProperty(e,"AnnotationEditorParamsType",{enumerable:!0,get:function(){return t.AnnotationEditorParamsType}}),Object.defineProperty(e,"AnnotationEditorType",{enumerable:!0,get:function(){return t.AnnotationEditorType}}),Object.defineProperty(e,"AnnotationEditorUIManager",{enumerable:!0,get:function(){return s.AnnotationEditorUIManager}}),Object.defineProperty(e,"AnnotationLayer",{enumerable:!0,get:function(){return o.AnnotationLayer}}),Object.defineProperty(e,"AnnotationMode",{enumerable:!0,get:function(){return t.AnnotationMode}}),Object.defineProperty(e,"CMapCompressionType",{enumerable:!0,get:function(){return t.CMapCompressionType}}),Object.defineProperty(e,"DOMSVGFactory",{enumerable:!0,get:function(){return r.DOMSVGFactory}}),Object.defineProperty(e,"FeatureTest",{enumerable:!0,get:function(){return t.FeatureTest}}),Object.defineProperty(e,"GlobalWorkerOptions",{enumerable:!0,get:function(){return l.GlobalWorkerOptions}}),Object.defineProperty(e,"ImageKind",{enumerable:!0,get:function(){return t.ImageKind}}),Object.defineProperty(e,"InvalidPDFException",{enumerable:!0,get:function(){return t.InvalidPDFException}}),Object.defineProperty(e,"MissingPDFException",{enumerable:!0,get:function(){return t.MissingPDFException}}),Object.defineProperty(e,"OPS",{enumerable:!0,get:function(){return t.OPS}}),Object.defineProperty(e,"PDFDataRangeTransport",{enumerable:!0,get:function(){return n.PDFDataRangeTransport}}),Object.defineProperty(e,"PDFDateString",{enumerable:!0,get:function(){return r.PDFDateString}}),Object.defineProperty(e,"PDFWorker",{enumerable:!0,get:function(){return n.PDFWorker}}),Object.defineProperty(e,"PasswordResponses",{enumerable:!0,get:function(){return t.PasswordResponses}}),Object.defineProperty(e,"PermissionFlag",{enumerable:!0,get:function(){return t.PermissionFlag}}),Object.defineProperty(e,"PixelsPerInch",{enumerable:!0,get:function(){return r.PixelsPerInch}}),Object.defineProperty(e,"PromiseCapability",{enumerable:!0,get:function(){return t.PromiseCapability}}),Object.defineProperty(e,"RenderingCancelledException",{enumerable:!0,get:function(){return r.RenderingCancelledException}}),Object.defineProperty(e,"SVGGraphics",{enumerable:!0,get:function(){return n.SVGGraphics}}),Object.defineProperty(e,"UnexpectedResponseException",{enumerable:!0,get:function(){return t.UnexpectedResponseException}}),Object.defineProperty(e,"Util",{enumerable:!0,get:function(){return t.Util}}),Object.defineProperty(e,"VerbosityLevel",{enumerable:!0,get:function(){return t.VerbosityLevel}}),Object.defineProperty(e,"XfaLayer",{enumerable:!0,get:function(){return c.XfaLayer}}),Object.defineProperty(e,"build",{enumerable:!0,get:function(){return n.build}}),Object.defineProperty(e,"createValidAbsoluteUrl",{enumerable:!0,get:function(){return t.createValidAbsoluteUrl}}),Object.defineProperty(e,"getDocument",{enumerable:!0,get:function(){return n.getDocument}}),Object.defineProperty(e,"getFilenameFromUrl",{enumerable:!0,get:function(){return r.getFilenameFromUrl}}),Object.defineProperty(e,"getPdfFilenameFromUrl",{enumerable:!0,get:function(){return r.getPdfFilenameFromUrl}}),Object.defineProperty(e,"getXfaPageViewport",{enumerable:!0,get:function(){return r.getXfaPageViewport}}),Object.defineProperty(e,"isDataScheme",{enumerable:!0,get:function(){return r.isDataScheme}}),Object.defineProperty(e,"isPdfFile",{enumerable:!0,get:function(){return r.isPdfFile}}),Object.defineProperty(e,"loadScript",{enumerable:!0,get:function(){return r.loadScript}}),Object.defineProperty(e,"noContextMenu",{enumerable:!0,get:function(){return r.noContextMenu}}),Object.defineProperty(e,"normalizeUnicode",{enumerable:!0,get:function(){return t.normalizeUnicode}}),Object.defineProperty(e,"renderTextLayer",{enumerable:!0,get:function(){return i.renderTextLayer}}),Object.defineProperty(e,"setLayerDimensions",{enumerable:!0,get:function(){return r.setLayerDimensions}}),Object.defineProperty(e,"shadow",{enumerable:!0,get:function(){return t.shadow}}),Object.defineProperty(e,"updateTextLayer",{enumerable:!0,get:function(){return i.updateTextLayer}}),Object.defineProperty(e,"version",{enumerable:!0,get:function(){return n.version}});var t=__w_pdfjs_require__(1),n=__w_pdfjs_require__(2),r=__w_pdfjs_require__(6),i=__w_pdfjs_require__(26),a=__w_pdfjs_require__(27),s=__w_pdfjs_require__(5),o=__w_pdfjs_require__(29),l=__w_pdfjs_require__(14),c=__w_pdfjs_require__(32)})(),__nested_webpack_exports__})(),module.exports=root.pdfjsLib=factory()},491:function(e){(function(){var t,n,r,i,a,s;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!=typeof process&&null!==process&&process.hrtime?(e.exports=function(){return(t()-a)/1e6},n=process.hrtime,i=(t=function(){var e;return 1e9*(e=n())[0]+e[1]})(),s=1e9*process.uptime(),a=i-s):Date.now?(e.exports=function(){return Date.now()-r},r=Date.now()):(e.exports=function(){return(new Date).getTime()-r},r=(new Date).getTime())}).call(this)},146:(e,t,n)=>{for(var r=n(491),i="undefined"==typeof window?n.g:window,a=["moz","webkit"],s="AnimationFrame",o=i["request"+s],l=i["cancel"+s]||i["cancelRequest"+s],c=0;!o&&c<a.length;c++)o=i[a[c]+"Request"+s],l=i[a[c]+"Cancel"+s]||i[a[c]+"CancelRequest"+s];if(!o||!l){var u=0,d=0,h=[],p=1e3/60;o=function(e){if(0===h.length){var t=r(),n=Math.max(0,p-(t-u));u=n+t,setTimeout((function(){var e=h.slice(0);h.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(u)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(n))}return h.push({handle:++d,callback:e,cancelled:!1}),d},l=function(e){for(var t=0;t<h.length;t++)h[t].handle===e&&(h[t].cancelled=!0)}}e.exports=function(e){return o.call(i,e)},e.exports.cancel=function(){l.apply(i,arguments)},e.exports.polyfill=function(e){e||(e=i),e.requestAnimationFrame=o,e.cancelAnimationFrame=l}},551:(e,t,n)=>{"use strict";var r=n(540),i=n(982);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,o={};function l(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(o[e]=t,e=0;e<t.length;e++)s.add(t[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function g(e,t,n,r,i,a,s){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=s}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function y(e,t,n,r){var i=m.hasOwnProperty(t)?m[t]:null;(null!==i?0!==i.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,v);m[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,v);m[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,v);m[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var _=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,A=Symbol.for("react.element"),w=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),C=Symbol.for("react.context"),P=Symbol.for("react.forward_ref"),T=Symbol.for("react.suspense"),M=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var I=Symbol.iterator;function L(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=I&&e[I]||e["@@iterator"])?e:null}var O,N=Object.assign;function z(e){if(void 0===O)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);O=t&&t[1]||""}return"\n"+O+e}var j=!1;function U(e,t){if(!e||j)return"";j=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var i=t.stack.split("\n"),a=r.stack.split("\n"),s=i.length-1,o=a.length-1;1<=s&&0<=o&&i[s]!==a[o];)o--;for(;1<=s&&0<=o;s--,o--)if(i[s]!==a[o]){if(1!==s||1!==o)do{if(s--,0>--o||i[s]!==a[o]){var l="\n"+i[s].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=s&&0<=o);break}}}finally{j=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function B(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case w:return"Portal";case E:return"Profiler";case x:return"StrictMode";case T:return"Suspense";case M:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return H(e(t))}catch(e){}}return null}function V(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function W(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function q(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function $(e){e._valueTracker||(e._valueTracker=function(e){var t=q(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=q(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var n=t.checked;return N({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=W(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&y(e,"checked",t,!1)}function J(e,t){Q(e,t);var n=W(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,W(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+W(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return N({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ie(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:W(n)}}function ae(e,t){var n=W(t.value),r=W(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function ge(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function me(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=ge(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var be=N({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function ye(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var _e=null;function Ae(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var we=null,Se=null,xe=null;function Ee(e){if(e=mi(e)){if("function"!=typeof we)throw Error(a(280));var t=e.stateNode;t&&(t=vi(t),we(e.stateNode,e.type,t))}}function ke(e){Se?xe?xe.push(e):xe=[e]:Se=e}function Ce(){if(Se){var e=Se,t=xe;if(xe=Se=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function Pe(e,t){return e(t)}function Te(){}var Me=!1;function Re(e,t,n){if(Me)return e(t,n);Me=!0;try{return Pe(e,t,n)}finally{Me=!1,(null!==Se||null!==xe)&&(Te(),Ce())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=vi(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var De=!1;if(u)try{var Ie={};Object.defineProperty(Ie,"passive",{get:function(){De=!0}}),window.addEventListener("test",Ie,Ie),window.removeEventListener("test",Ie,Ie)}catch(ue){De=!1}function Le(e,t,n,r,i,a,s,o,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Oe=!1,Ne=null,ze=!1,je=null,Ue={onError:function(e){Oe=!0,Ne=e}};function Be(e,t,n,r,i,a,s,o,l){Oe=!1,Ne=null,Le.apply(Ue,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{!!(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ve(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function We(e){if(He(e)!==e)throw Error(a(188))}function qe(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var s=i.alternate;if(null===s){if(null!==(r=i.return)){n=r;continue}break}if(i.child===s.child){for(s=i.child;s;){if(s===n)return We(i),e;if(s===r)return We(i),t;s=s.sibling}throw Error(a(188))}if(n.return!==r.return)n=i,r=s;else{for(var o=!1,l=i.child;l;){if(l===n){o=!0,n=i,r=s;break}if(l===r){o=!0,r=i,n=s;break}l=l.sibling}if(!o){for(l=s.child;l;){if(l===n){o=!0,n=s,r=i;break}if(l===r){o=!0,r=s,n=i;break}l=l.sibling}if(!o)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?$e(e):null}function $e(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=$e(e);if(null!==t)return t;e=e.sibling}return null}var Ge=i.unstable_scheduleCallback,Xe=i.unstable_cancelCallback,Ke=i.unstable_shouldYield,Ye=i.unstable_requestPaint,Qe=i.unstable_now,Je=i.unstable_getCurrentPriorityLevel,Ze=i.unstable_ImmediatePriority,et=i.unstable_UserBlockingPriority,tt=i.unstable_NormalPriority,nt=i.unstable_LowPriority,rt=i.unstable_IdlePriority,it=null,at=null,st=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2,ct=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,i=e.suspendedLanes,a=e.pingedLanes,s=268435455&n;if(0!==s){var o=s&~i;0!==o?r=dt(o):0!=(a&=s)&&(r=dt(a))}else 0!=(s=n&~i)?r=dt(s):0!==a&&(r=dt(a));if(0===r)return 0;if(0!==t&&t!==r&&!(t&i)&&((i=r&-r)>=(a=t&-t)||16===i&&4194240&a))return t;if(4&r&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)i=1<<(n=31-st(t)),r|=e[n],t&=~i;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function mt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-st(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-st(n),i=1<<r;i&t|e[r]&t&&(e[r]|=t),n&=~i}}var vt=0;function yt(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var _t,At,wt,St,xt,Et=!1,kt=[],Ct=null,Pt=null,Tt=null,Mt=new Map,Rt=new Map,Ft=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function It(e,t){switch(e){case"focusin":case"focusout":Ct=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":Mt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Lt(e,t,n,r,i,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[i]},null!==t&&null!==(t=mi(t))&&At(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==i&&-1===t.indexOf(i)&&t.push(i),e)}function Ot(e){var t=gi(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ve(n)))return e.blockedOn=t,void xt(e.priority,(function(){wt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=mi(n))&&At(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);_e=r,n.target.dispatchEvent(r),_e=null,t.shift()}return!0}function zt(e,t,n){Nt(e)&&n.delete(t)}function jt(){Et=!1,null!==Ct&&Nt(Ct)&&(Ct=null),null!==Pt&&Nt(Pt)&&(Pt=null),null!==Tt&&Nt(Tt)&&(Tt=null),Mt.forEach(zt),Rt.forEach(zt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,Et||(Et=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,jt)))}function Bt(e){function t(t){return Ut(t,e)}if(0<kt.length){Ut(kt[0],e);for(var n=1;n<kt.length;n++){var r=kt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Ct&&Ut(Ct,e),null!==Pt&&Ut(Pt,e),null!==Tt&&Ut(Tt,e),Mt.forEach(t),Rt.forEach(t),n=0;n<Ft.length;n++)(r=Ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ft.length&&null===(n=Ft[0]).blockedOn;)Ot(n),null===n.blockedOn&&Ft.shift()}var Ht=_.ReactCurrentBatchConfig;function Vt(e,t,n,r){var i=vt,a=Ht.transition;Ht.transition=null;try{vt=1,qt(e,t,n,r)}finally{vt=i,Ht.transition=a}}function Wt(e,t,n,r){var i=vt,a=Ht.transition;Ht.transition=null;try{vt=4,qt(e,t,n,r)}finally{vt=i,Ht.transition=a}}function qt(e,t,n,r){var i=Gt(e,t,n,r);if(null===i)Hr(e,t,r,$t,n),It(e,r);else if(function(e,t,n,r,i){switch(t){case"focusin":return Ct=Lt(Ct,e,t,n,r,i),!0;case"dragenter":return Pt=Lt(Pt,e,t,n,r,i),!0;case"mouseover":return Tt=Lt(Tt,e,t,n,r,i),!0;case"pointerover":var a=i.pointerId;return Mt.set(a,Lt(Mt.get(a)||null,e,t,n,r,i)),!0;case"gotpointercapture":return a=i.pointerId,Rt.set(a,Lt(Rt.get(a)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r))r.stopPropagation();else if(It(e,r),4&t&&-1<Dt.indexOf(e)){for(;null!==i;){var a=mi(i);if(null!==a&&_t(a),null===(a=Gt(e,t,n,r))&&Hr(e,t,r,$t,n),a===i)break;i=a}null!==i&&r.stopPropagation()}else Hr(e,t,r,null,n)}var $t=null;function Gt(e,t,n,r){if($t=null,null!==(e=gi(e=Ae(r))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ve(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return $t=e,null}function Xt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Kt=null,Yt=null,Qt=null;function Jt(){if(Qt)return Qt;var e,t,n=Yt,r=n.length,i="value"in Kt?Kt.value:Kt.textContent,a=i.length;for(e=0;e<r&&n[e]===i[e];e++);var s=r-e;for(t=1;t<=s&&n[r-t]===i[a-t];t++);return Qt=i.slice(e,1<t?1-t:void 0)}function Zt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function en(){return!0}function tn(){return!1}function nn(e){function t(t,n,r,i,a){for(var s in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=i,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(s)&&(t=e[s],this[s]=t?t(i):i[s]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?en:tn,this.isPropagationStopped=tn,this}return N(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=en)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=en)},persist:function(){},isPersistent:en}),t}var rn,an,sn,on={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ln=nn(on),cn=N({},on,{view:0,detail:0}),un=nn(cn),dn=N({},cn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(rn=e.screenX-sn.screenX,an=e.screenY-sn.screenY):an=rn=0,sn=e),rn)},movementY:function(e){return"movementY"in e?e.movementY:an}}),hn=nn(dn),pn=nn(N({},dn,{dataTransfer:0})),fn=nn(N({},cn,{relatedTarget:0})),gn=nn(N({},on,{animationName:0,elapsedTime:0,pseudoElement:0})),mn=N({},on,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=nn(mn),vn=nn(N({},on,{data:0})),yn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},_n={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},An={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=An[e])&&!!t[e]}function Sn(){return wn}var xn=N({},cn,{key:function(e){if(e.key){var t=yn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Zt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?_n[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?Zt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Zt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),En=nn(xn),kn=nn(N({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Cn=nn(N({},cn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),Pn=nn(N({},on,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=N({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Mn=nn(Tn),Rn=[9,13,27,32],Fn=u&&"CompositionEvent"in window,Dn=null;u&&"documentMode"in document&&(Dn=document.documentMode);var In=u&&"TextEvent"in window&&!Dn,Ln=u&&(!Fn||Dn&&8<Dn&&11>=Dn),On=String.fromCharCode(32),Nn=!1;function zn(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function jn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Vn(e,t,n,r){ke(r),0<(t=Wr(t,"onChange")).length&&(n=new ln("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,qn=null;function $n(e){Or(e,0)}function Gn(e){if(G(bi(e)))return e}function Xn(e,t){if("change"===e)return t}var Kn=!1;if(u){var Yn;if(u){var Qn="oninput"in document;if(!Qn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Qn="function"==typeof Jn.oninput}Yn=Qn}else Yn=!1;Kn=Yn&&(!document.documentMode||9<document.documentMode)}function Zn(){Wn&&(Wn.detachEvent("onpropertychange",er),qn=Wn=null)}function er(e){if("value"===e.propertyName&&Gn(qn)){var t=[];Vn(t,qn,e,Ae(e)),Re($n,t)}}function tr(e,t,n){"focusin"===e?(Zn(),qn=n,(Wn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Zn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Gn(qn)}function rr(e,t){if("click"===e)return Gn(t)}function ir(e,t){if("input"===e||"change"===e)return Gn(t)}var ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function sr(e,t){if(ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!d.call(t,i)||!ar(e[i],t[i]))return!1}return!0}function or(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function lr(e,t){var n,r=or(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=or(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ur(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=ur(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&cr(n.ownerDocument.documentElement,n)){if(null!==r&&dr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var i=n.textContent.length,a=Math.min(r.start,i);r=void 0===r.end?a:Math.min(r.end,i),!e.extend&&a>r&&(i=r,r=a,a=i),i=lr(n,a);var s=lr(n,r);i&&s&&(1!==e.rangeCount||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==s.node||e.focusOffset!==s.offset)&&((t=t.createRange()).setStart(i.node,i.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(s.node,s.offset)):(t.setEnd(s.node,s.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var pr=u&&"documentMode"in document&&11>=document.documentMode,fr=null,gr=null,mr=null,br=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==fr||fr!==X(r)||(r="selectionStart"in(r=fr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},mr&&sr(mr,r)||(mr=r,0<(r=Wr(gr,"onSelect")).length&&(t=new ln("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=fr)))}function yr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var _r={animationend:yr("Animation","AnimationEnd"),animationiteration:yr("Animation","AnimationIteration"),animationstart:yr("Animation","AnimationStart"),transitionend:yr("Transition","TransitionEnd")},Ar={},wr={};function Sr(e){if(Ar[e])return Ar[e];if(!_r[e])return e;var t,n=_r[e];for(t in n)if(n.hasOwnProperty(t)&&t in wr)return Ar[e]=n[t];return e}u&&(wr=document.createElement("div").style,"AnimationEvent"in window||(delete _r.animationend.animation,delete _r.animationiteration.animation,delete _r.animationstart.animation),"TransitionEvent"in window||delete _r.transitionend.transition);var xr=Sr("animationend"),Er=Sr("animationiteration"),kr=Sr("animationstart"),Cr=Sr("transitionend"),Pr=new Map,Tr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Mr(e,t){Pr.set(e,t),l(t,[e])}for(var Rr=0;Rr<Tr.length;Rr++){var Fr=Tr[Rr];Mr(Fr.toLowerCase(),"on"+(Fr[0].toUpperCase()+Fr.slice(1)))}Mr(xr,"onAnimationEnd"),Mr(Er,"onAnimationIteration"),Mr(kr,"onAnimationStart"),Mr("dblclick","onDoubleClick"),Mr("focusin","onFocus"),Mr("focusout","onBlur"),Mr(Cr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Dr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ir=new Set("cancel close invalid load scroll toggle".split(" ").concat(Dr));function Lr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,i,s,o,l,c){if(Be.apply(this,arguments),Oe){if(!Oe)throw Error(a(198));var u=Ne;Oe=!1,Ne=null,ze||(ze=!0,je=u)}}(r,t,void 0,e),e.currentTarget=null}function Or(e,t){t=!!(4&t);for(var n=0;n<e.length;n++){var r=e[n],i=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var s=r.length-1;0<=s;s--){var o=r[s],l=o.instance,c=o.currentTarget;if(o=o.listener,l!==a&&i.isPropagationStopped())break e;Lr(i,o,c),a=l}else for(s=0;s<r.length;s++){if(l=(o=r[s]).instance,c=o.currentTarget,o=o.listener,l!==a&&i.isPropagationStopped())break e;Lr(i,o,c),a=l}}}if(ze)throw e=je,ze=!1,je=null,e}function Nr(e,t){var n=t[hi];void 0===n&&(n=t[hi]=new Set);var r=e+"__bubble";n.has(r)||(Br(t,e,2,!1),n.add(r))}function zr(e,t,n){var r=0;t&&(r|=4),Br(n,e,r,t)}var jr="_reactListening"+Math.random().toString(36).slice(2);function Ur(e){if(!e[jr]){e[jr]=!0,s.forEach((function(t){"selectionchange"!==t&&(Ir.has(t)||zr(t,!1,e),zr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[jr]||(t[jr]=!0,zr("selectionchange",!1,t))}}function Br(e,t,n,r){switch(Xt(t)){case 1:var i=Vt;break;case 4:i=Wt;break;default:i=qt}n=i.bind(null,t,n,e),i=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(i=!0),r?void 0!==i?e.addEventListener(t,n,{capture:!0,passive:i}):e.addEventListener(t,n,!0):void 0!==i?e.addEventListener(t,n,{passive:i}):e.addEventListener(t,n,!1)}function Hr(e,t,n,r,i){var a=r;if(!(1&t||2&t||null===r))e:for(;;){if(null===r)return;var s=r.tag;if(3===s||4===s){var o=r.stateNode.containerInfo;if(o===i||8===o.nodeType&&o.parentNode===i)break;if(4===s)for(s=r.return;null!==s;){var l=s.tag;if((3===l||4===l)&&((l=s.stateNode.containerInfo)===i||8===l.nodeType&&l.parentNode===i))return;s=s.return}for(;null!==o;){if(null===(s=gi(o)))return;if(5===(l=s.tag)||6===l){r=a=s;continue e}o=o.parentNode}}r=r.return}Re((function(){var r=a,i=Ae(n),s=[];e:{var o=Pr.get(e);if(void 0!==o){var l=ln,c=e;switch(e){case"keypress":if(0===Zt(n))break e;case"keydown":case"keyup":l=En;break;case"focusin":c="focus",l=fn;break;case"focusout":c="blur",l=fn;break;case"beforeblur":case"afterblur":l=fn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Cn;break;case xr:case Er:case kr:l=gn;break;case Cr:l=Pn;break;case"scroll":l=un;break;case"wheel":l=Mn;break;case"copy":case"cut":case"paste":l=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=kn}var u=!!(4&t),d=!u&&"scroll"===e,h=u?null!==o?o+"Capture":null:o;u=[];for(var p,f=r;null!==f;){var g=(p=f).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==h&&null!=(g=Fe(f,h))&&u.push(Vr(f,g,p))),d)break;f=f.return}0<u.length&&(o=new l(o,c,null,n,i),s.push({event:o,listeners:u}))}}if(!(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===_e||!(c=n.relatedTarget||n.fromElement)||!gi(c)&&!c[di])&&(l||o)&&(o=i.window===i?i:(o=i.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(c=(c=n.relatedTarget||n.toElement)?gi(c):null)&&(c!==(d=He(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=r),l!==c)){if(u=hn,g="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=kn,g="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==l?o:bi(l),p=null==c?o:bi(c),(o=new u(g,f+"leave",l,n,i)).target=d,o.relatedTarget=p,g=null,gi(i)===r&&((u=new u(h,f+"enter",c,n,i)).target=p,u.relatedTarget=d,g=u),d=g,l&&c)e:{for(h=c,f=0,p=u=l;p;p=qr(p))f++;for(p=0,g=h;g;g=qr(g))p++;for(;0<f-p;)u=qr(u),f--;for(;0<p-f;)h=qr(h),p--;for(;f--;){if(u===h||null!==h&&u===h.alternate)break e;u=qr(u),h=qr(h)}u=null}else u=null;null!==l&&$r(s,o,l,u,!1),null!==c&&null!==d&&$r(s,d,c,u,!0)}if("select"===(l=(o=r?bi(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var m=Xn;else if(Hn(o))if(Kn)m=ir;else{m=nr;var b=tr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(m=rr);switch(m&&(m=m(e,r))?Vn(s,m,n,i):(b&&b(e,o,r),"focusout"===e&&(b=o._wrapperState)&&b.controlled&&"number"===o.type&&ee(o,"number",o.value)),b=r?bi(r):window,e){case"focusin":(Hn(b)||"true"===b.contentEditable)&&(fr=b,gr=r,mr=null);break;case"focusout":mr=gr=fr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,vr(s,n,i);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":vr(s,n,i)}var v;if(Fn)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else Un?zn(e,n)&&(y="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(y="onCompositionStart");y&&(Ln&&"ko"!==n.locale&&(Un||"onCompositionStart"!==y?"onCompositionEnd"===y&&Un&&(v=Jt()):(Yt="value"in(Kt=i)?Kt.value:Kt.textContent,Un=!0)),0<(b=Wr(r,y)).length&&(y=new vn(y,e,null,n,i),s.push({event:y,listeners:b}),(v||null!==(v=jn(n)))&&(y.data=v))),(v=In?function(e,t){switch(e){case"compositionend":return jn(t);case"keypress":return 32!==t.which?null:(Nn=!0,On);case"textInput":return(e=t.data)===On&&Nn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Fn&&zn(e,t)?(e=Jt(),Qt=Yt=Kt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Wr(r,"onBeforeInput")).length&&(i=new vn("onBeforeInput","beforeinput",null,n,i),s.push({event:i,listeners:r}),i.data=v)}Or(s,t)}))}function Vr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Wr(e,t){for(var n=t+"Capture",r=[];null!==e;){var i=e,a=i.stateNode;5===i.tag&&null!==a&&(i=a,null!=(a=Fe(e,n))&&r.unshift(Vr(e,a,i)),null!=(a=Fe(e,t))&&r.push(Vr(e,a,i))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function $r(e,t,n,r,i){for(var a=t._reactName,s=[];null!==n&&n!==r;){var o=n,l=o.alternate,c=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==c&&(o=c,i?null!=(l=Fe(n,a))&&s.unshift(Vr(n,l,o)):i||null!=(l=Fe(n,a))&&s.push(Vr(n,l,o))),n=n.return}0!==s.length&&e.push({event:t,listeners:s})}var Gr=/\r\n?/g,Xr=/\u0000|\uFFFD/g;function Kr(e){return("string"==typeof e?e:""+e).replace(Gr,"\n").replace(Xr,"")}function Yr(e,t,n){if(t=Kr(t),Kr(e)!==t&&n)throw Error(a(425))}function Qr(){}var Jr=null;function Zr(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ei="function"==typeof setTimeout?setTimeout:void 0,ti="function"==typeof clearTimeout?clearTimeout:void 0,ni="function"==typeof Promise?Promise:void 0,ri="function"==typeof queueMicrotask?queueMicrotask:void 0!==ni?function(e){return ni.resolve(null).then(e).catch(ii)}:ei;function ii(e){setTimeout((function(){throw e}))}function ai(e,t){var n=t,r=0;do{var i=n.nextSibling;if(e.removeChild(n),i&&8===i.nodeType)if("/$"===(n=i.data)){if(0===r)return e.removeChild(i),void Bt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=i}while(n);Bt(t)}function si(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function oi(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var li=Math.random().toString(36).slice(2),ci="__reactFiber$"+li,ui="__reactProps$"+li,di="__reactContainer$"+li,hi="__reactEvents$"+li,pi="__reactListeners$"+li,fi="__reactHandles$"+li;function gi(e){var t=e[ci];if(t)return t;for(var n=e.parentNode;n;){if(t=n[di]||n[ci]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=oi(e);null!==e;){if(n=e[ci])return n;e=oi(e)}return t}n=(e=n).parentNode}return null}function mi(e){return!(e=e[ci]||e[di])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function bi(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function vi(e){return e[ui]||null}var yi=[],_i=-1;function Ai(e){return{current:e}}function wi(e){0>_i||(e.current=yi[_i],yi[_i]=null,_i--)}function Si(e,t){_i++,yi[_i]=e.current,e.current=t}var xi={},Ei=Ai(xi),ki=Ai(!1),Ci=xi;function Pi(e,t){var n=e.type.contextTypes;if(!n)return xi;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,a={};for(i in n)a[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ti(e){return null!=e.childContextTypes}function Mi(){wi(ki),wi(Ei)}function Ri(e,t,n){if(Ei.current!==xi)throw Error(a(168));Si(Ei,t),Si(ki,n)}function Fi(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in t))throw Error(a(108,V(e)||"Unknown",i));return N({},n,r)}function Di(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||xi,Ci=Ei.current,Si(Ei,e),Si(ki,ki.current),!0}function Ii(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=Fi(e,t,Ci),r.__reactInternalMemoizedMergedChildContext=e,wi(ki),wi(Ei),Si(Ei,e)):wi(ki),Si(ki,n)}var Li=null,Oi=!1,Ni=!1;function zi(e){null===Li?Li=[e]:Li.push(e)}function ji(){if(!Ni&&null!==Li){Ni=!0;var e=0,t=vt;try{var n=Li;for(vt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Li=null,Oi=!1}catch(t){throw null!==Li&&(Li=Li.slice(e+1)),Ge(Ze,ji),t}finally{vt=t,Ni=!1}}return null}var Ui=_.ReactCurrentBatchConfig;function Bi(e,t){if(e&&e.defaultProps){for(var n in t=N({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Hi=Ai(null),Vi=null,Wi=null,qi=null;function $i(){qi=Wi=Vi=null}function Gi(e){var t=Hi.current;wi(Hi),e._currentValue=t}function Xi(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Ki(e,t){Vi=e,qi=Wi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(!!(e.lanes&t)&&(vo=!0),e.firstContext=null)}function Yi(e){var t=e._currentValue;if(qi!==e)if(e={context:e,memoizedValue:t,next:null},null===Wi){if(null===Vi)throw Error(a(308));Wi=e,Vi.dependencies={lanes:0,firstContext:e}}else Wi=Wi.next=e;return t}var Qi=null,Ji=!1;function Zi(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function ea(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ta(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function na(e,t){var n=e.updateQueue;null!==n&&(n=n.shared,null!==vl&&1&e.mode&&!(2&bl)?(null===(e=n.interleaved)?(t.next=t,null===Qi?Qi=[n]:Qi.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(null===(e=n.pending)?t.next=t:(t.next=e.next,e.next=t),n.pending=t))}function ra(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function ia(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var i=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var s={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?i=a=s:a=a.next=s,n=n.next}while(null!==n);null===a?i=a=t:a=a.next=t}else i=a=t;return n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function aa(e,t,n,r){var i=e.updateQueue;Ji=!1;var a=i.firstBaseUpdate,s=i.lastBaseUpdate,o=i.shared.pending;if(null!==o){i.shared.pending=null;var l=o,c=l.next;l.next=null,null===s?a=c:s.next=c,s=l;var u=e.alternate;null!==u&&(o=(u=u.updateQueue).lastBaseUpdate)!==s&&(null===o?u.firstBaseUpdate=c:o.next=c,u.lastBaseUpdate=l)}if(null!==a){var d=i.baseState;for(s=0,u=c=l=null,o=a;;){var h=o.lane,p=o.eventTime;if((r&h)===h){null!==u&&(u=u.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,g=o;switch(h=t,p=n,g.tag){case 1:if("function"==typeof(f=g.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(h="function"==typeof(f=g.payload)?f.call(p,d,h):f))break e;d=N({},d,h);break e;case 2:Ji=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(h=i.effects)?i.effects=[o]:h.push(o))}else p={eventTime:p,lane:h,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===u?(c=u=p,l=d):u=u.next=p,s|=h;if(null===(o=o.next)){if(null===(o=i.shared.pending))break;o=(h=o).next,h.next=null,i.lastBaseUpdate=h,i.shared.pending=null}}if(null===u&&(l=d),i.baseState=l,i.firstBaseUpdate=c,i.lastBaseUpdate=u,null!==(t=i.shared.interleaved)){i=t;do{s|=i.lane,i=i.next}while(i!==t)}else null===a&&(i.shared.lanes=0);El|=s,e.lanes=s,e.memoizedState=d}}function sa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=n,"function"!=typeof i)throw Error(a(191,i));i.call(r)}}}var oa=(new r.Component).refs;function la(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:N({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ca={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=Hl(),i=Vl(e),a=ta(r,i);a.payload=t,null!=n&&(a.callback=n),na(e,a),null!==(t=Wl(e,i,r))&&ra(t,e,i)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=Hl(),i=Vl(e),a=ta(r,i);a.tag=1,a.payload=t,null!=n&&(a.callback=n),na(e,a),null!==(t=Wl(e,i,r))&&ra(t,e,i)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Hl(),r=Vl(e),i=ta(n,r);i.tag=2,null!=t&&(i.callback=t),na(e,i),null!==(t=Wl(e,r,n))&&ra(t,e,r)}};function ua(e,t,n,r,i,a,s){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,s):!(t.prototype&&t.prototype.isPureReactComponent&&sr(n,r)&&sr(i,a))}function da(e,t,n){var r=!1,i=xi,a=t.contextType;return"object"==typeof a&&null!==a?a=Yi(a):(i=Ti(t)?Ci:Ei.current,a=(r=null!=(r=t.contextTypes))?Pi(e,i):xi),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ca,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=a),t}function ha(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ca.enqueueReplaceState(t,t.state,null)}function pa(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=oa,Zi(e);var a=t.contextType;"object"==typeof a&&null!==a?i.context=Yi(a):(a=Ti(t)?Ci:Ei.current,i.context=Pi(e,a)),i.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(la(e,t,a,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&ca.enqueueReplaceState(i,i.state,null),aa(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.flags|=4194308)}var fa=[],ga=0,ma=null,ba=0,va=[],ya=0,_a=null,Aa=1,wa="";function Sa(e,t){fa[ga++]=ba,fa[ga++]=ma,ma=e,ba=t}function xa(e,t,n){va[ya++]=Aa,va[ya++]=wa,va[ya++]=_a,_a=e;var r=Aa;e=wa;var i=32-st(r)-1;r&=~(1<<i),n+=1;var a=32-st(t)+i;if(30<a){var s=i-i%5;a=(r&(1<<s)-1).toString(32),r>>=s,i-=s,Aa=1<<32-st(t)+i|n<<i|r,wa=a+e}else Aa=1<<a|n<<i|r,wa=e}function Ea(e){null!==e.return&&(Sa(e,1),xa(e,1,0))}function ka(e){for(;e===ma;)ma=fa[--ga],fa[ga]=null,ba=fa[--ga],fa[ga]=null;for(;e===_a;)_a=va[--ya],va[ya]=null,wa=va[--ya],va[ya]=null,Aa=va[--ya],va[ya]=null}var Ca=null,Pa=null,Ta=!1,Ma=null;function Ra(e,t){var n=_c(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function Fa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,Ca=e,Pa=si(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,Ca=e,Pa=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==_a?{id:Aa,overflow:wa}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_c(18,null,null,0)).stateNode=t,n.return=e,e.child=n,Ca=e,Pa=null,!0);default:return!1}}function Da(e){return!(!(1&e.mode)||128&e.flags)}function Ia(e){if(Ta){var t=Pa;if(t){var n=t;if(!Fa(e,t)){if(Da(e))throw Error(a(418));t=si(n.nextSibling);var r=Ca;t&&Fa(e,t)?Ra(r,n):(e.flags=-4097&e.flags|2,Ta=!1,Ca=e)}}else{if(Da(e))throw Error(a(418));e.flags=-4097&e.flags|2,Ta=!1,Ca=e}}}function La(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ca=e}function Oa(e){if(e!==Ca)return!1;if(!Ta)return La(e),Ta=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!Zr(e.type,e.memoizedProps)),t&&(t=Pa)){if(Da(e)){for(e=Pa;e;)e=si(e.nextSibling);throw Error(a(418))}for(;t;)Ra(e,t),t=si(t.nextSibling)}if(La(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Pa=si(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Pa=null}}else Pa=Ca?si(e.stateNode.nextSibling):null;return!0}function Na(){Pa=Ca=null,Ta=!1}function za(e){null===Ma?Ma=[e]:Ma.push(e)}function ja(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var i=r,s=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===s?t.ref:(t=function(e){var t=i.refs;t===oa&&(t=i.refs={}),null===e?delete t[s]:t[s]=e},t._stringRef=s,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Ua(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ba(e){return(0,e._init)(e._payload)}function Ha(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=wc(e,t)).index=0,e.sibling=null,e}function s(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=kc(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function c(e,t,n,r){var a=n.type;return a===S?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===F&&Ba(a)===t.type)?((r=i(t,n.props)).ref=ja(e,t,n),r.return=e,r):((r=Sc(n.type,n.key,n.props,null,e.mode,r)).ref=ja(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Cc(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=xc(n,e.mode,r,a)).return=e,t):((t=i(t,n)).return=e,t)}function h(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=kc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case A:return(n=Sc(t.type,t.key,t.props,null,e.mode,n)).ref=ja(e,null,t),n.return=e,n;case w:return(t=Cc(t,e.mode,n)).return=e,t;case F:return h(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=xc(t,e.mode,n,null)).return=e,t;Ua(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==i?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case A:return n.key===i?c(e,t,n,r):null;case w:return n.key===i?u(e,t,n,r):null;case F:return p(e,t,(i=n._init)(n._payload),r)}if(te(n)||L(n))return null!==i?null:d(e,t,n,r,null);Ua(e,n)}return null}function f(e,t,n,r,i){if("string"==typeof r&&""!==r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case A:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i);case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,i);case F:return f(e,t,n,(0,r._init)(r._payload),i)}if(te(r)||L(r))return d(t,e=e.get(n)||null,r,i,null);Ua(t,r)}return null}function g(i,a,o,l){for(var c=null,u=null,d=a,g=a=0,m=null;null!==d&&g<o.length;g++){d.index>g?(m=d,d=null):m=d.sibling;var b=p(i,d,o[g],l);if(null===b){null===d&&(d=m);break}e&&d&&null===b.alternate&&t(i,d),a=s(b,a,g),null===u?c=b:u.sibling=b,u=b,d=m}if(g===o.length)return n(i,d),Ta&&Sa(i,g),c;if(null===d){for(;g<o.length;g++)null!==(d=h(i,o[g],l))&&(a=s(d,a,g),null===u?c=d:u.sibling=d,u=d);return Ta&&Sa(i,g),c}for(d=r(i,d);g<o.length;g++)null!==(m=f(d,i,g,o[g],l))&&(e&&null!==m.alternate&&d.delete(null===m.key?g:m.key),a=s(m,a,g),null===u?c=m:u.sibling=m,u=m);return e&&d.forEach((function(e){return t(i,e)})),Ta&&Sa(i,g),c}function m(i,o,l,c){var u=L(l);if("function"!=typeof u)throw Error(a(150));if(null==(l=u.call(l)))throw Error(a(151));for(var d=u=null,g=o,m=o=0,b=null,v=l.next();null!==g&&!v.done;m++,v=l.next()){g.index>m?(b=g,g=null):b=g.sibling;var y=p(i,g,v.value,c);if(null===y){null===g&&(g=b);break}e&&g&&null===y.alternate&&t(i,g),o=s(y,o,m),null===d?u=y:d.sibling=y,d=y,g=b}if(v.done)return n(i,g),Ta&&Sa(i,m),u;if(null===g){for(;!v.done;m++,v=l.next())null!==(v=h(i,v.value,c))&&(o=s(v,o,m),null===d?u=v:d.sibling=v,d=v);return Ta&&Sa(i,m),u}for(g=r(i,g);!v.done;m++,v=l.next())null!==(v=f(g,i,m,v.value,c))&&(e&&null!==v.alternate&&g.delete(null===v.key?m:v.key),o=s(v,o,m),null===d?u=v:d.sibling=v,d=v);return e&&g.forEach((function(e){return t(i,e)})),Ta&&Sa(i,m),u}return function e(r,a,s,l){if("object"==typeof s&&null!==s&&s.type===S&&null===s.key&&(s=s.props.children),"object"==typeof s&&null!==s){switch(s.$$typeof){case A:e:{for(var c=s.key,u=a;null!==u;){if(u.key===c){if((c=s.type)===S){if(7===u.tag){n(r,u.sibling),(a=i(u,s.props.children)).return=r,r=a;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===F&&Ba(c)===u.type){n(r,u.sibling),(a=i(u,s.props)).ref=ja(r,u,s),a.return=r,r=a;break e}n(r,u);break}t(r,u),u=u.sibling}s.type===S?((a=xc(s.props.children,r.mode,l,s.key)).return=r,r=a):((l=Sc(s.type,s.key,s.props,null,r.mode,l)).ref=ja(r,a,s),l.return=r,r=l)}return o(r);case w:e:{for(u=s.key;null!==a;){if(a.key===u){if(4===a.tag&&a.stateNode.containerInfo===s.containerInfo&&a.stateNode.implementation===s.implementation){n(r,a.sibling),(a=i(a,s.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=Cc(s,r.mode,l)).return=r,r=a}return o(r);case F:return e(r,a,(u=s._init)(s._payload),l)}if(te(s))return g(r,a,s,l);if(L(s))return m(r,a,s,l);Ua(r,s)}return"string"==typeof s&&""!==s||"number"==typeof s?(s=""+s,null!==a&&6===a.tag?(n(r,a.sibling),(a=i(a,s)).return=r,r=a):(n(r,a),(a=kc(s,r.mode,l)).return=r,r=a),o(r)):n(r,a)}}var Va=Ha(!0),Wa=Ha(!1),qa={},$a=Ai(qa),Ga=Ai(qa),Xa=Ai(qa);function Ka(e){if(e===qa)throw Error(a(174));return e}function Ya(e,t){switch(Si(Xa,t),Si(Ga,e),Si($a,qa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}wi($a),Si($a,t)}function Qa(){wi($a),wi(Ga),wi(Xa)}function Ja(e){Ka(Xa.current);var t=Ka($a.current),n=le(t,e.type);t!==n&&(Si(Ga,e),Si($a,n))}function Za(e){Ga.current===e&&(wi($a),wi(Ga))}var es=Ai(0);function ts(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(128&t.flags)return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ns=[];function rs(){for(var e=0;e<ns.length;e++)ns[e]._workInProgressVersionPrimary=null;ns.length=0}var is=_.ReactCurrentDispatcher,as=_.ReactCurrentBatchConfig,ss=0,os=null,ls=null,cs=null,us=!1,ds=!1,hs=0,ps=0;function fs(){throw Error(a(321))}function gs(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ar(e[n],t[n]))return!1;return!0}function ms(e,t,n,r,i,s){if(ss=s,os=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,is.current=null===e||null===e.memoizedState?Js:Zs,e=n(r,i),ds){s=0;do{if(ds=!1,hs=0,25<=s)throw Error(a(301));s+=1,cs=ls=null,t.updateQueue=null,is.current=eo,e=n(r,i)}while(ds)}if(is.current=Qs,t=null!==ls&&null!==ls.next,ss=0,cs=ls=os=null,us=!1,t)throw Error(a(300));return e}function bs(){var e=0!==hs;return hs=0,e}function vs(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===cs?os.memoizedState=cs=e:cs=cs.next=e,cs}function ys(){if(null===ls){var e=os.alternate;e=null!==e?e.memoizedState:null}else e=ls.next;var t=null===cs?os.memoizedState:cs.next;if(null!==t)cs=t,ls=e;else{if(null===e)throw Error(a(310));e={memoizedState:(ls=e).memoizedState,baseState:ls.baseState,baseQueue:ls.baseQueue,queue:ls.queue,next:null},null===cs?os.memoizedState=cs=e:cs=cs.next=e}return cs}function _s(e,t){return"function"==typeof t?t(e):t}function As(e){var t=ys(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=ls,i=r.baseQueue,s=n.pending;if(null!==s){if(null!==i){var o=i.next;i.next=s.next,s.next=o}r.baseQueue=i=s,n.pending=null}if(null!==i){s=i.next,r=r.baseState;var l=o=null,c=null,u=s;do{var d=u.lane;if((ss&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var h={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=h,o=r):c=c.next=h,os.lanes|=d,El|=d}u=u.next}while(null!==u&&u!==s);null===c?o=r:c.next=l,ar(r,t.memoizedState)||(vo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){i=e;do{s=i.lane,os.lanes|=s,El|=s,i=i.next}while(i!==e)}else null===i&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ws(e){var t=ys(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,s=t.memoizedState;if(null!==i){n.pending=null;var o=i=i.next;do{s=e(s,o.action),o=o.next}while(o!==i);ar(s,t.memoizedState)||(vo=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,r]}function Ss(){}function xs(e,t){var n=os,r=ys(),i=t(),s=!ar(r.memoizedState,i);if(s&&(r.memoizedState=i,vo=!0),r=r.queue,Ls(Cs.bind(null,n,r,e),[e]),r.getSnapshot!==t||s||null!==cs&&1&cs.memoizedState.tag){if(n.flags|=2048,Ms(9,ks.bind(null,n,r,i,t),void 0,null),null===vl)throw Error(a(349));30&ss||Es(n,t,i)}return i}function Es(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=os.updateQueue)?(t={lastEffect:null,stores:null},os.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function ks(e,t,n,r){t.value=n,t.getSnapshot=r,Ps(t)&&Wl(e,1,-1)}function Cs(e,t,n){return n((function(){Ps(t)&&Wl(e,1,-1)}))}function Ps(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ar(e,n)}catch(e){return!0}}function Ts(e){var t=vs();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:_s,lastRenderedState:e},t.queue=e,e=e.dispatch=$s.bind(null,os,e),[t.memoizedState,e]}function Ms(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=os.updateQueue)?(t={lastEffect:null,stores:null},os.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Rs(){return ys().memoizedState}function Fs(e,t,n,r){var i=vs();os.flags|=e,i.memoizedState=Ms(1|t,n,void 0,void 0===r?null:r)}function Ds(e,t,n,r){var i=ys();r=void 0===r?null:r;var a=void 0;if(null!==ls){var s=ls.memoizedState;if(a=s.destroy,null!==r&&gs(r,s.deps))return void(i.memoizedState=Ms(t,n,a,r))}os.flags|=e,i.memoizedState=Ms(1|t,n,a,r)}function Is(e,t){return Fs(8390656,8,e,t)}function Ls(e,t){return Ds(2048,8,e,t)}function Os(e,t){return Ds(4,2,e,t)}function Ns(e,t){return Ds(4,4,e,t)}function zs(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function js(e,t,n){return n=null!=n?n.concat([e]):null,Ds(4,4,zs.bind(null,t,e),n)}function Us(){}function Bs(e,t){var n=ys();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&gs(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Hs(e,t){var n=ys();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&gs(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Vs(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var r=as.transition;as.transition={};try{e(!1),t()}finally{vt=n,as.transition=r}}function Ws(){return ys().memoizedState}function qs(e,t,n){var r=Vl(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Gs(e)?Xs(t,n):(Ks(e,t,n),null!==(e=Wl(e,r,n=Hl()))&&Ys(e,t,r))}function $s(e,t,n){var r=Vl(e),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Gs(e))Xs(t,i);else{Ks(e,t,i);var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var s=t.lastRenderedState,o=a(s,n);if(i.hasEagerState=!0,i.eagerState=o,ar(o,s))return}catch(e){}null!==(e=Wl(e,r,n=Hl()))&&Ys(e,t,r)}}function Gs(e){var t=e.alternate;return e===os||null!==t&&t===os}function Xs(e,t){ds=us=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Ks(e,t,n){null!==vl&&1&e.mode&&!(2&bl)?(null===(e=t.interleaved)?(n.next=n,null===Qi?Qi=[t]:Qi.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(null===(e=t.pending)?n.next=n:(n.next=e.next,e.next=n),t.pending=n)}function Ys(e,t,n){if(4194240&n){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Qs={readContext:Yi,useCallback:fs,useContext:fs,useEffect:fs,useImperativeHandle:fs,useInsertionEffect:fs,useLayoutEffect:fs,useMemo:fs,useReducer:fs,useRef:fs,useState:fs,useDebugValue:fs,useDeferredValue:fs,useTransition:fs,useMutableSource:fs,useSyncExternalStore:fs,useId:fs,unstable_isNewReconciler:!1},Js={readContext:Yi,useCallback:function(e,t){return vs().memoizedState=[e,void 0===t?null:t],e},useContext:Yi,useEffect:Is,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Fs(4194308,4,zs.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Fs(4194308,4,e,t)},useInsertionEffect:function(e,t){return Fs(4,2,e,t)},useMemo:function(e,t){var n=vs();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=vs();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=qs.bind(null,os,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},vs().memoizedState=e},useState:Ts,useDebugValue:Us,useDeferredValue:function(e){var t=Ts(e),n=t[0],r=t[1];return Is((function(){var t=as.transition;as.transition={};try{r(e)}finally{as.transition=t}}),[e]),n},useTransition:function(){var e=Ts(!1),t=e[0];return e=Vs.bind(null,e[1]),vs().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=os,i=vs();if(Ta){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===vl)throw Error(a(349));30&ss||Es(r,t,n)}i.memoizedState=n;var s={value:n,getSnapshot:t};return i.queue=s,Is(Cs.bind(null,r,s,e),[e]),r.flags|=2048,Ms(9,ks.bind(null,r,s,n,t),void 0,null),n},useId:function(){var e=vs(),t=vl.identifierPrefix;if(Ta){var n=wa;t=":"+t+"R"+(n=(Aa&~(1<<32-st(Aa)-1)).toString(32)+n),0<(n=hs++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ps++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Zs={readContext:Yi,useCallback:Bs,useContext:Yi,useEffect:Ls,useImperativeHandle:js,useInsertionEffect:Os,useLayoutEffect:Ns,useMemo:Hs,useReducer:As,useRef:Rs,useState:function(){return As(_s)},useDebugValue:Us,useDeferredValue:function(e){var t=As(_s),n=t[0],r=t[1];return Ls((function(){var t=as.transition;as.transition={};try{r(e)}finally{as.transition=t}}),[e]),n},useTransition:function(){return[As(_s)[0],ys().memoizedState]},useMutableSource:Ss,useSyncExternalStore:xs,useId:Ws,unstable_isNewReconciler:!1},eo={readContext:Yi,useCallback:Bs,useContext:Yi,useEffect:Ls,useImperativeHandle:js,useInsertionEffect:Os,useLayoutEffect:Ns,useMemo:Hs,useReducer:ws,useRef:Rs,useState:function(){return ws(_s)},useDebugValue:Us,useDeferredValue:function(e){var t=ws(_s),n=t[0],r=t[1];return Ls((function(){var t=as.transition;as.transition={};try{r(e)}finally{as.transition=t}}),[e]),n},useTransition:function(){return[ws(_s)[0],ys().memoizedState]},useMutableSource:Ss,useSyncExternalStore:xs,useId:Ws,unstable_isNewReconciler:!1};function to(e,t){try{var n="",r=t;do{n+=B(r),r=r.return}while(r);var i=n}catch(e){i="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:i}}function no(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var ro,io,ao,so,oo="function"==typeof WeakMap?WeakMap:Map;function lo(e,t,n){(n=ta(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Fl||(Fl=!0,Dl=r),no(0,t)},n}function co(e,t,n){(n=ta(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return r(i)},n.callback=function(){no(0,t)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){no(0,t),"function"!=typeof r&&(null===Il?Il=new Set([this]):Il.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function uo(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new oo;var i=new Set;r.set(t,i)}else void 0===(i=r.get(t))&&(i=new Set,r.set(t,i));i.has(n)||(i.add(n),e=fc.bind(null,e,t,n),t.then(e,e))}function ho(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function po(e,t,n,r,i){return 1&e.mode?(e.flags|=65536,e.lanes=i,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=ta(-1,1)).tag=2,na(n,t))),n.lanes|=1),e)}function fo(e,t){if(!Ta)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function go(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var i=e.child;null!==i;)n|=i.lanes|i.childLanes,r|=14680064&i.subtreeFlags,r|=14680064&i.flags,i.return=e,i=i.sibling;else for(i=e.child;null!==i;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function mo(e,t,n){var r=t.pendingProps;switch(ka(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return go(t),null;case 1:case 17:return Ti(t.type)&&Mi(),go(t),null;case 3:return r=t.stateNode,Qa(),wi(ki),wi(Ei),rs(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Oa(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&t.flags)||(t.flags|=1024,null!==Ma&&(Kl(Ma),Ma=null))),io(e,t),go(t),null;case 5:Za(t);var i=Ka(Xa.current);if(n=t.type,null!==e&&null!=t.stateNode)ao(e,t,n,r,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return go(t),null}if(e=Ka($a.current),Oa(t)){r=t.stateNode,n=t.type;var s=t.memoizedProps;switch(r[ci]=t,r[ui]=s,e=!!(1&t.mode),n){case"dialog":Nr("cancel",r),Nr("close",r);break;case"iframe":case"object":case"embed":Nr("load",r);break;case"video":case"audio":for(i=0;i<Dr.length;i++)Nr(Dr[i],r);break;case"source":Nr("error",r);break;case"img":case"image":case"link":Nr("error",r),Nr("load",r);break;case"details":Nr("toggle",r);break;case"input":Y(r,s),Nr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Nr("invalid",r);break;case"textarea":ie(r,s),Nr("invalid",r)}for(var l in ve(n,s),i=null,s)if(s.hasOwnProperty(l)){var c=s[l];"children"===l?"string"==typeof c?r.textContent!==c&&(Yr(r.textContent,c,e),i=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(Yr(r.textContent,c,e),i=["children",""+c]):o.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Nr("scroll",r)}switch(n){case"input":$(r),Z(r,s,!0);break;case"textarea":$(r),se(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Qr)}r=i,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===i.nodeType?i:i.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[ci]=t,e[ui]=r,ro(e,t,!1,!1),t.stateNode=e;e:{switch(l=ye(n,r),n){case"dialog":Nr("cancel",e),Nr("close",e),i=r;break;case"iframe":case"object":case"embed":Nr("load",e),i=r;break;case"video":case"audio":for(i=0;i<Dr.length;i++)Nr(Dr[i],e);i=r;break;case"source":Nr("error",e),i=r;break;case"img":case"image":case"link":Nr("error",e),Nr("load",e),i=r;break;case"details":Nr("toggle",e),i=r;break;case"input":Y(e,r),i=K(e,r),Nr("invalid",e);break;case"option":default:i=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=N({},r,{value:void 0}),Nr("invalid",e);break;case"textarea":ie(e,r),i=re(e,r),Nr("invalid",e)}for(s in ve(n,i),c=i)if(c.hasOwnProperty(s)){var u=c[s];"style"===s?me(e,u):"dangerouslySetInnerHTML"===s?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===s?"string"==typeof u?("textarea"!==n||""!==u)&&he(e,u):"number"==typeof u&&he(e,""+u):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(o.hasOwnProperty(s)?null!=u&&"onScroll"===s&&Nr("scroll",e):null!=u&&y(e,s,u,l))}switch(n){case"input":$(e),Z(e,r,!1);break;case"textarea":$(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+W(r.value));break;case"select":e.multiple=!!r.multiple,null!=(s=r.value)?ne(e,!!r.multiple,s,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Qr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return go(t),null;case 6:if(e&&null!=t.stateNode)so(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));if(n=Ka(Xa.current),Ka($a.current),Oa(t)){if(r=t.stateNode,n=t.memoizedProps,r[ci]=t,(s=r.nodeValue!==n)&&null!==(e=Ca))switch(l=!!(1&e.mode),e.tag){case 3:Yr(r.nodeValue,n,l);break;case 5:!0!==e.memoizedProps[void 0]&&Yr(r.nodeValue,n,l)}s&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[ci]=t,t.stateNode=r}return go(t),null;case 13:if(wi(es),r=t.memoizedState,Ta&&null!==Pa&&1&t.mode&&!(128&t.flags)){for(r=Pa;r;)r=si(r.nextSibling);return Na(),t.flags|=98560,t}if(null!==r&&null!==r.dehydrated){if(r=Oa(t),null===e){if(!r)throw Error(a(318));if(!(r=null!==(r=t.memoizedState)?r.dehydrated:null))throw Error(a(317));r[ci]=t}else Na(),!(128&t.flags)&&(t.memoizedState=null),t.flags|=4;return go(t),null}return null!==Ma&&(Kl(Ma),Ma=null),128&t.flags?(t.lanes=n,t):(r=null!==r,n=!1,null===e?Oa(t):n=null!==e.memoizedState,r&&!n&&(t.child.flags|=8192,1&t.mode&&(null===e||1&es.current?0===Sl&&(Sl=3):ic())),null!==t.updateQueue&&(t.flags|=4),go(t),null);case 4:return Qa(),io(e,t),null===e&&Ur(t.stateNode.containerInfo),go(t),null;case 10:return Gi(t.type._context),go(t),null;case 19:if(wi(es),null===(s=t.memoizedState))return go(t),null;if(r=!!(128&t.flags),null===(l=s.rendering))if(r)fo(s,!1);else{if(0!==Sl||null!==e&&128&e.flags)for(e=t.child;null!==e;){if(null!==(l=ts(e))){for(t.flags|=128,fo(s,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(s=n).flags&=14680066,null===(l=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.subtreeFlags=0,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=l.childLanes,s.lanes=l.lanes,s.child=l.child,s.subtreeFlags=0,s.deletions=null,s.memoizedProps=l.memoizedProps,s.memoizedState=l.memoizedState,s.updateQueue=l.updateQueue,s.type=l.type,e=l.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Si(es,1&es.current|2),t.child}e=e.sibling}null!==s.tail&&Qe()>Rl&&(t.flags|=128,r=!0,fo(s,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ts(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),fo(s,!0),null===s.tail&&"hidden"===s.tailMode&&!l.alternate&&!Ta)return go(t),null}else 2*Qe()-s.renderingStartTime>Rl&&1073741824!==n&&(t.flags|=128,r=!0,fo(s,!1),t.lanes=4194304);s.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=s.last)?n.sibling=l:t.child=l,s.last=l)}return null!==s.tail?(t=s.tail,s.rendering=t,s.tail=t.sibling,s.renderingStartTime=Qe(),t.sibling=null,n=es.current,Si(es,r?1&n|2:1&n),t):(go(t),null);case 22:case 23:return ec(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&1&t.mode?!!(1073741824&Al)&&(go(t),6&t.subtreeFlags&&(t.flags|=8192)):go(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}ro=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},io=function(){},ao=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,Ka($a.current);var a,s=null;switch(n){case"input":i=K(e,i),r=K(e,r),s=[];break;case"select":i=N({},i,{value:void 0}),r=N({},r,{value:void 0}),s=[];break;case"textarea":i=re(e,i),r=re(e,r),s=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=Qr)}for(u in ve(n,r),n=null,i)if(!r.hasOwnProperty(u)&&i.hasOwnProperty(u)&&null!=i[u])if("style"===u){var l=i[u];for(a in l)l.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(o.hasOwnProperty(u)?s||(s=[]):(s=s||[]).push(u,null));for(u in r){var c=r[u];if(l=null!=i?i[u]:void 0,r.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(a in l)!l.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in c)c.hasOwnProperty(a)&&l[a]!==c[a]&&(n||(n={}),n[a]=c[a])}else n||(s||(s=[]),s.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(s=s||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(s=s||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(o.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Nr("scroll",e),s||l===c||(s=[])):(s=s||[]).push(u,c))}n&&(s=s||[]).push("style",n);var u=s;(t.updateQueue=u)&&(t.flags|=4)}},so=function(e,t,n,r){n!==r&&(t.flags|=4)};var bo=_.ReactCurrentOwner,vo=!1;function yo(e,t,n,r){t.child=null===e?Wa(t,null,n,r):Va(t,e.child,n,r)}function _o(e,t,n,r,i){n=n.render;var a=t.ref;return Ki(t,i),r=ms(e,t,n,r,a,i),n=bs(),null===e||vo?(Ta&&n&&Ea(t),t.flags|=1,yo(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Uo(e,t,i))}function Ao(e,t,n,r,i){if(null===e){var a=n.type;return"function"!=typeof a||Ac(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Sc(n.type,null,r,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,wo(e,t,a,r,i))}if(a=e.child,!(e.lanes&i)){var s=a.memoizedProps;if((n=null!==(n=n.compare)?n:sr)(s,r)&&e.ref===t.ref)return Uo(e,t,i)}return t.flags|=1,(e=wc(a,r)).ref=t.ref,e.return=t,t.child=e}function wo(e,t,n,r,i){if(null!==e&&sr(e.memoizedProps,r)&&e.ref===t.ref){if(vo=!1,!(e.lanes&i))return t.lanes=e.lanes,Uo(e,t,i);131072&e.flags&&(vo=!0)}return Eo(e,t,n,r,i)}function So(e,t,n){var r=t.pendingProps,i=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&t.mode){if(!(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null},t.updateQueue=null,Si(wl,Al),Al|=e,null;t.memoizedState={baseLanes:0,cachePool:null},r=null!==a?a.baseLanes:n,Si(wl,Al),Al|=r}else t.memoizedState={baseLanes:0,cachePool:null},Si(wl,Al),Al|=n;else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,Si(wl,Al),Al|=r;return yo(e,t,i,n),t.child}function xo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Eo(e,t,n,r,i){var a=Ti(n)?Ci:Ei.current;return a=Pi(t,a),Ki(t,i),n=ms(e,t,n,r,a,i),r=bs(),null===e||vo?(Ta&&r&&Ea(t),t.flags|=1,yo(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Uo(e,t,i))}function ko(e,t,n,r,i){if(Ti(n)){var a=!0;Di(t)}else a=!1;if(Ki(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),da(t,n,r),pa(t,n,r,i),r=!0;else if(null===e){var s=t.stateNode,o=t.memoizedProps;s.props=o;var l=s.context,c=n.contextType;c="object"==typeof c&&null!==c?Yi(c):Pi(t,c=Ti(n)?Ci:Ei.current);var u=n.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof s.getSnapshotBeforeUpdate;d||"function"!=typeof s.UNSAFE_componentWillReceiveProps&&"function"!=typeof s.componentWillReceiveProps||(o!==r||l!==c)&&ha(t,s,r,c),Ji=!1;var h=t.memoizedState;s.state=h,aa(t,r,s,i),l=t.memoizedState,o!==r||h!==l||ki.current||Ji?("function"==typeof u&&(la(t,n,u,r),l=t.memoizedState),(o=Ji||ua(t,n,o,r,h,l,c))?(d||"function"!=typeof s.UNSAFE_componentWillMount&&"function"!=typeof s.componentWillMount||("function"==typeof s.componentWillMount&&s.componentWillMount(),"function"==typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"==typeof s.componentDidMount&&(t.flags|=4194308)):("function"==typeof s.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),s.props=r,s.state=l,s.context=c,r=o):("function"==typeof s.componentDidMount&&(t.flags|=4194308),r=!1)}else{s=t.stateNode,ea(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:Bi(t.type,o),s.props=c,d=t.pendingProps,h=s.context,l="object"==typeof(l=n.contextType)&&null!==l?Yi(l):Pi(t,l=Ti(n)?Ci:Ei.current);var p=n.getDerivedStateFromProps;(u="function"==typeof p||"function"==typeof s.getSnapshotBeforeUpdate)||"function"!=typeof s.UNSAFE_componentWillReceiveProps&&"function"!=typeof s.componentWillReceiveProps||(o!==d||h!==l)&&ha(t,s,r,l),Ji=!1,h=t.memoizedState,s.state=h,aa(t,r,s,i);var f=t.memoizedState;o!==d||h!==f||ki.current||Ji?("function"==typeof p&&(la(t,n,p,r),f=t.memoizedState),(c=Ji||ua(t,n,c,r,h,f,l)||!1)?(u||"function"!=typeof s.UNSAFE_componentWillUpdate&&"function"!=typeof s.componentWillUpdate||("function"==typeof s.componentWillUpdate&&s.componentWillUpdate(r,f,l),"function"==typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(r,f,l)),"function"==typeof s.componentDidUpdate&&(t.flags|=4),"function"==typeof s.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof s.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!=typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),s.props=r,s.state=f,s.context=l,r=c):("function"!=typeof s.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!=typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),r=!1)}return Co(e,t,n,r,a,i)}function Co(e,t,n,r,i,a){xo(e,t);var s=!!(128&t.flags);if(!r&&!s)return i&&Ii(t,n,!1),Uo(e,t,a);r=t.stateNode,bo.current=t;var o=s&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&s?(t.child=Va(t,e.child,null,a),t.child=Va(t,null,o,a)):yo(e,t,o,a),t.memoizedState=r.state,i&&Ii(t,n,!0),t.child}function Po(e){var t=e.stateNode;t.pendingContext?Ri(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ri(0,t.context,!1),Ya(e,t.containerInfo)}function To(e,t,n,r,i){return Na(),za(i),t.flags|=256,yo(e,t,n,r),t.child}var Mo={dehydrated:null,treeContext:null,retryLane:0};function Ro(e){return{baseLanes:e,cachePool:null}}function Fo(e,t,n){var r,i=t.pendingProps,s=es.current,o=!1,l=!!(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&!!(2&s)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(s|=1),Si(es,1&s),null===e)return Ia(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(1&t.mode?"$!"===e.data?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(s=i.children,e=i.fallback,o?(i=t.mode,o=t.child,s={mode:"hidden",children:s},1&i||null===o?o=Ec(s,i,0,null):(o.childLanes=0,o.pendingProps=s),e=xc(e,i,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Ro(n),t.memoizedState=Mo,e):Do(t,s));if(null!==(s=e.memoizedState)){if(null!==(r=s.dehydrated)){if(l)return 256&t.flags?(t.flags&=-257,Oo(e,t,n,Error(a(422)))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=i.fallback,s=t.mode,i=Ec({mode:"visible",children:i.children},s,0,null),(o=xc(o,s,n,null)).flags|=2,i.return=t,o.return=t,i.sibling=o,t.child=i,1&t.mode&&Va(t,e.child,null,n),t.child.memoizedState=Ro(n),t.memoizedState=Mo,o);if(1&t.mode)if("$!"===r.data)t=Oo(e,t,n,Error(a(419)));else if(i=!!(n&e.childLanes),vo||i){if(null!==(i=vl)){switch(n&-n){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(i=o&(i.suspendedLanes|n)?0:o)&&i!==s.retryLane&&(s.retryLane=i,Wl(e,i,-1))}ic(),t=Oo(e,t,n,Error(a(421)))}else"$?"===r.data?(t.flags|=128,t.child=e.child,t=mc.bind(null,e),r._reactRetry=t,t=null):(n=s.treeContext,Pa=si(r.nextSibling),Ca=t,Ta=!0,Ma=null,null!==n&&(va[ya++]=Aa,va[ya++]=wa,va[ya++]=_a,Aa=n.id,wa=n.overflow,_a=t),(t=Do(t,t.pendingProps.children)).flags|=4096);else t=Oo(e,t,n,null);return t}return o?(i=Lo(e,t,i.children,i.fallback,n),o=t.child,s=e.child.memoizedState,o.memoizedState=null===s?Ro(n):{baseLanes:s.baseLanes|n,cachePool:null},o.childLanes=e.childLanes&~n,t.memoizedState=Mo,i):(n=Io(e,t,i.children,n),t.memoizedState=null,n)}return o?(i=Lo(e,t,i.children,i.fallback,n),o=t.child,s=e.child.memoizedState,o.memoizedState=null===s?Ro(n):{baseLanes:s.baseLanes|n,cachePool:null},o.childLanes=e.childLanes&~n,t.memoizedState=Mo,i):(n=Io(e,t,i.children,n),t.memoizedState=null,n)}function Do(e,t){return(t=Ec({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Io(e,t,n,r){var i=e.child;return e=i.sibling,n=wc(i,{mode:"visible",children:n}),!(1&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n}function Lo(e,t,n,r,i){var a=t.mode,s=(e=e.child).sibling,o={mode:"hidden",children:n};return 1&a||t.child===e?(n=wc(e,o)).subtreeFlags=14680064&e.subtreeFlags:((n=t.child).childLanes=0,n.pendingProps=o,t.deletions=null),null!==s?r=wc(s,r):(r=xc(r,a,i,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function Oo(e,t,n,r){return null!==r&&za(r),Va(t,e.child,null,n),(e=Do(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function No(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Xi(e.return,t,n)}function zo(e,t,n,r,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=i)}function jo(e,t,n){var r=t.pendingProps,i=r.revealOrder,a=r.tail;if(yo(e,t,r.children,n),2&(r=es.current))r=1&r|2,t.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&No(e,n,t);else if(19===e.tag)No(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Si(es,r),1&t.mode)switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===ts(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),zo(t,!1,i,n,a);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===ts(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}zo(t,!0,n,null,a);break;case"together":zo(t,!1,null,null,void 0);break;default:t.memoizedState=null}else t.memoizedState=null;return t.child}function Uo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),El|=t.lanes,!(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=wc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=wc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Bo(e,t){switch(ka(t),t.tag){case 1:return Ti(t.type)&&Mi(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qa(),wi(ki),wi(Ei),rs(),65536&(e=t.flags)&&!(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Za(t),null;case 13:if(wi(es),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));Na()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return wi(es),null;case 4:return Qa(),null;case 10:return Gi(t.type._context),null;case 22:case 23:return ec(),null;default:return null}}var Ho=!1,Vo=!1,Wo="function"==typeof WeakSet?WeakSet:Set,qo=null;function $o(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){pc(e,t,n)}else n.current=null}function Go(e,t,n){try{n()}catch(n){pc(e,t,n)}}var Xo=!1;function Ko(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var i=r=r.next;do{if((i.tag&e)===e){var a=i.destroy;i.destroy=void 0,void 0!==a&&Go(t,n,a)}i=i.next}while(i!==r)}}function Yo(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Qo(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function Jo(e,t,n){if(at&&"function"==typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(it,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var i=r,a=i.destroy;i=i.tag,void 0!==a&&(2&i||4&i)&&Go(t,n,a),r=r.next}while(r!==e)}break;case 1:if($o(t,n),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){pc(t,n,e)}break;case 5:$o(t,n);break;case 4:al(e,t,n)}}function Zo(e){var t=e.alternate;null!==t&&(e.alternate=null,Zo(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[ci],delete t[ui],delete t[hi],delete t[pi],delete t[fi]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function el(e){return 5===e.tag||3===e.tag||4===e.tag}function tl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||el(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function nl(e){e:{for(var t=e.return;null!==t;){if(el(t))break e;t=t.return}throw Error(a(160))}var n=t;switch(n.tag){case 5:t=n.stateNode,32&n.flags&&(he(t,""),n.flags&=-33),il(e,n=tl(e),t);break;case 3:case 4:t=n.stateNode.containerInfo,rl(e,n=tl(e),t);break;default:throw Error(a(161))}}function rl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Qr));else if(4!==r&&null!==(e=e.child))for(rl(e,t,n),e=e.sibling;null!==e;)rl(e,t,n),e=e.sibling}function il(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(il(e,t,n),e=e.sibling;null!==e;)il(e,t,n),e=e.sibling}function al(e,t,n){for(var r,i,s=t,o=!1;;){if(!o){o=s.return;e:for(;;){if(null===o)throw Error(a(160));switch(r=o.stateNode,o.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}o=o.return}o=!0}if(5===s.tag||6===s.tag){e:for(var l=e,c=s,u=n,d=c;;)if(Jo(l,d,u),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===c)break e;for(;null===d.sibling;){if(null===d.return||d.return===c)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}i?(l=r,c=s.stateNode,8===l.nodeType?l.parentNode.removeChild(c):l.removeChild(c)):r.removeChild(s.stateNode)}else if(18===s.tag)i?(l=r,c=s.stateNode,8===l.nodeType?ai(l.parentNode,c):1===l.nodeType&&ai(l,c),Bt(l)):ai(r,s.stateNode);else if(4===s.tag){if(null!==s.child){r=s.stateNode.containerInfo,i=!0,s.child.return=s,s=s.child;continue}}else if(Jo(e,s,n),null!==s.child){s.child.return=s,s=s.child;continue}if(s===t)break;for(;null===s.sibling;){if(null===s.return||s.return===t)return;4===(s=s.return).tag&&(o=!1)}s.sibling.return=s.return,s=s.sibling}}function sl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:return Ko(3,t,t.return),Yo(3,t),void Ko(5,t,t.return);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var s=t.updateQueue;if(t.updateQueue=null,null!==s){for("input"===e&&"radio"===r.type&&null!=r.name&&Q(n,r),ye(e,i),t=ye(e,r),i=0;i<s.length;i+=2){var o=s[i],l=s[i+1];"style"===o?me(n,l):"dangerouslySetInnerHTML"===o?de(n,l):"children"===o?he(n,l):y(n,o,l,t)}switch(e){case"input":J(n,r);break;case"textarea":ae(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(s=r.value)?ne(n,!!r.multiple,s,!1):e!==!!r.multiple&&(null!=r.defaultValue?ne(n,!!r.multiple,r.defaultValue,!0):ne(n,!!r.multiple,r.multiple?[]:"",!1))}n[ui]=r}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void(null!==e&&e.memoizedState.isDehydrated&&Bt(t.stateNode.containerInfo));case 13:case 19:return void function(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Wo),t.forEach((function(t){var r=bc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}(t)}throw Error(a(163))}function ol(e,t,n){qo=e,ll(e,t,n)}function ll(e,t,n){for(var r=!!(1&e.mode);null!==qo;){var i=qo,a=i.child;if(22===i.tag&&r){var s=null!==i.memoizedState||Ho;if(!s){var o=i.alternate,l=null!==o&&null!==o.memoizedState||Vo;o=Ho;var c=Vo;if(Ho=s,(Vo=l)&&!c)for(qo=i;null!==qo;)l=(s=qo).child,22===s.tag&&null!==s.memoizedState?dl(i):null!==l?(l.return=s,qo=l):dl(i);for(;null!==a;)qo=a,ll(a,t,n),a=a.sibling;qo=i,Ho=o,Vo=c}cl(e)}else 8772&i.subtreeFlags&&null!==a?(a.return=i,qo=a):cl(e)}}function cl(e){for(;null!==qo;){var t=qo;if(8772&t.flags){var n=t.alternate;try{if(8772&t.flags)switch(t.tag){case 0:case 11:case 15:Vo||Yo(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Vo)if(null===n)r.componentDidMount();else{var i=t.elementType===t.type?n.memoizedProps:Bi(t.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var s=t.updateQueue;null!==s&&sa(t,s,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}sa(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Bt(h)}}}break;default:throw Error(a(163))}Vo||512&t.flags&&Qo(t)}catch(e){pc(t,t.return,e)}}if(t===e){qo=null;break}if(null!==(n=t.sibling)){n.return=t.return,qo=n;break}qo=t.return}}function ul(e){for(;null!==qo;){var t=qo;if(t===e){qo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,qo=n;break}qo=t.return}}function dl(e){for(;null!==qo;){var t=qo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Yo(4,t)}catch(e){pc(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var i=t.return;try{r.componentDidMount()}catch(e){pc(t,i,e)}}var a=t.return;try{Qo(t)}catch(e){pc(t,a,e)}break;case 5:var s=t.return;try{Qo(t)}catch(e){pc(t,s,e)}}}catch(e){pc(t,t.return,e)}if(t===e){qo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,qo=o;break}qo=t.return}}var hl,pl=Math.ceil,fl=_.ReactCurrentDispatcher,gl=_.ReactCurrentOwner,ml=_.ReactCurrentBatchConfig,bl=0,vl=null,yl=null,_l=0,Al=0,wl=Ai(0),Sl=0,xl=null,El=0,kl=0,Cl=0,Pl=null,Tl=null,Ml=0,Rl=1/0,Fl=!1,Dl=null,Il=null,Ll=!1,Ol=null,Nl=0,zl=0,jl=null,Ul=-1,Bl=0;function Hl(){return 6&bl?Qe():-1!==Ul?Ul:Ul=Qe()}function Vl(e){return 1&e.mode?2&bl&&0!==_l?_l&-_l:null!==Ui.transition?(0===Bl&&(e=ct,!(4194240&(ct<<=1))&&(ct=64),Bl=e),Bl):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Xt(e.type):1}function Wl(e,t,n){if(50<zl)throw zl=0,jl=null,Error(a(185));var r=ql(e,t);return null===r?null:(mt(r,t,n),2&bl&&r===vl||(r===vl&&(!(2&bl)&&(kl|=t),4===Sl&&Yl(r,_l)),$l(r,n),1===t&&0===bl&&!(1&e.mode)&&(Rl=Qe()+500,Oi&&ji())),r)}function ql(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function $l(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,a=e.pendingLanes;0<a;){var s=31-st(a),o=1<<s,l=i[s];-1===l?o&n&&!(o&r)||(i[s]=pt(o,t)):l<=t&&(e.expiredLanes|=o),a&=~o}}(e,t);var r=ht(e,e===vl?_l:0);if(0===r)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Oi=!0,zi(e)}(Ql.bind(null,e)):zi(Ql.bind(null,e)),ri((function(){0===bl&&ji()})),n=null;else{switch(yt(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=vc(n,Gl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Gl(e,t){if(Ul=-1,Bl=0,6&bl)throw Error(a(327));var n=e.callbackNode;if(dc()&&e.callbackNode!==n)return null;var r=ht(e,e===vl?_l:0);if(0===r)return null;if(30&r||r&e.expiredLanes||t)t=ac(e,r);else{t=r;var i=bl;bl|=2;var s=rc();for(vl===e&&_l===t||(Rl=Qe()+500,tc(e,t));;)try{oc();break}catch(t){nc(e,t)}$i(),fl.current=s,bl=i,null!==yl?t=0:(vl=null,_l=0,t=Sl)}if(0!==t){if(2===t&&0!==(i=ft(e))&&(r=i,t=Xl(e,i)),1===t)throw n=xl,tc(e,0),Yl(e,r),$l(e,Qe()),n;if(6===t)Yl(e,r);else{if(i=e.current.alternate,!(30&r||function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var i=n[r],a=i.getSnapshot;i=i.value;try{if(!ar(a(),i))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(i)||(t=ac(e,r),2===t&&(s=ft(e),0!==s&&(r=s,t=Xl(e,s))),1!==t)))throw n=xl,tc(e,0),Yl(e,r),$l(e,Qe()),n;switch(e.finishedWork=i,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:uc(e,Tl);break;case 3:if(Yl(e,r),(130023424&r)===r&&10<(t=Ml+500-Qe())){if(0!==ht(e,0))break;if(((i=e.suspendedLanes)&r)!==r){Hl(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=ei(uc.bind(null,e,Tl),t);break}uc(e,Tl);break;case 4:if(Yl(e,r),(4194240&r)===r)break;for(t=e.eventTimes,i=-1;0<r;){var o=31-st(r);s=1<<o,(o=t[o])>i&&(i=o),r&=~s}if(r=i,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*pl(r/1960))-r)){e.timeoutHandle=ei(uc.bind(null,e,Tl),r);break}uc(e,Tl);break;default:throw Error(a(329))}}}return $l(e,Qe()),e.callbackNode===n?Gl.bind(null,e):null}function Xl(e,t){var n=Pl;return e.current.memoizedState.isDehydrated&&(tc(e,t).flags|=256),2!==(e=ac(e,t))&&(t=Tl,Tl=n,null!==t&&Kl(t)),e}function Kl(e){null===Tl?Tl=e:Tl.push.apply(Tl,e)}function Yl(e,t){for(t&=~Cl,t&=~kl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-st(t),r=1<<n;e[n]=-1,t&=~r}}function Ql(e){if(6&bl)throw Error(a(327));dc();var t=ht(e,0);if(!(1&t))return $l(e,Qe()),null;var n=ac(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=Xl(e,r))}if(1===n)throw n=xl,tc(e,0),Yl(e,t),$l(e,Qe()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,uc(e,Tl),$l(e,Qe()),null}function Jl(e,t){var n=bl;bl|=1;try{return e(t)}finally{0===(bl=n)&&(Rl=Qe()+500,Oi&&ji())}}function Zl(e){null!==Ol&&0===Ol.tag&&!(6&bl)&&dc();var t=bl;bl|=1;var n=ml.transition,r=vt;try{if(ml.transition=null,vt=1,e)return e()}finally{vt=r,ml.transition=n,!(6&(bl=t))&&ji()}}function ec(){Al=wl.current,wi(wl)}function tc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ti(n)),null!==yl)for(n=yl.return;null!==n;){var r=n;switch(ka(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Mi();break;case 3:Qa(),wi(ki),wi(Ei),rs();break;case 5:Za(r);break;case 4:Qa();break;case 13:case 19:wi(es);break;case 10:Gi(r.type._context);break;case 22:case 23:ec()}n=n.return}if(vl=e,yl=e=wc(e.current,null),_l=Al=t,Sl=0,xl=null,Cl=kl=El=0,Tl=Pl=null,null!==Qi){for(t=0;t<Qi.length;t++)if(null!==(r=(n=Qi[t]).interleaved)){n.interleaved=null;var i=r.next,a=n.pending;if(null!==a){var s=a.next;a.next=i,r.next=s}n.pending=r}Qi=null}return e}function nc(e,t){for(;;){var n=yl;try{if($i(),is.current=Qs,us){for(var r=os.memoizedState;null!==r;){var i=r.queue;null!==i&&(i.pending=null),r=r.next}us=!1}if(ss=0,cs=ls=os=null,ds=!1,hs=0,gl.current=null,null===n||null===n.return){Sl=1,xl=t,yl=null;break}e:{var s=e,o=n.return,l=n,c=t;if(t=_l,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,d=l,h=d.tag;if(!(1&d.mode||0!==h&&11!==h&&15!==h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=ho(o);if(null!==f){f.flags&=-257,po(f,o,l,0,t),1&f.mode&&uo(s,u,t),c=u;var g=(t=f).updateQueue;if(null===g){var m=new Set;m.add(c),t.updateQueue=m}else g.add(c);break e}if(!(1&t)){uo(s,u,t),ic();break e}c=Error(a(426))}else if(Ta&&1&l.mode){var b=ho(o);if(null!==b){!(65536&b.flags)&&(b.flags|=256),po(b,o,l,0,t),za(c);break e}}s=c,4!==Sl&&(Sl=2),null===Pl?Pl=[s]:Pl.push(s),c=to(c,l),l=o;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,ia(l,lo(0,c,t));break e;case 1:s=c;var v=l.type,y=l.stateNode;if(!(128&l.flags||"function"!=typeof v.getDerivedStateFromError&&(null===y||"function"!=typeof y.componentDidCatch||null!==Il&&Il.has(y)))){l.flags|=65536,t&=-t,l.lanes|=t,ia(l,co(l,s,t));break e}}l=l.return}while(null!==l)}cc(n)}catch(e){t=e,yl===n&&null!==n&&(yl=n=n.return);continue}break}}function rc(){var e=fl.current;return fl.current=Qs,null===e?Qs:e}function ic(){0!==Sl&&3!==Sl&&2!==Sl||(Sl=4),null===vl||!(268435455&El)&&!(268435455&kl)||Yl(vl,_l)}function ac(e,t){var n=bl;bl|=2;var r=rc();for(vl===e&&_l===t||tc(e,t);;)try{sc();break}catch(t){nc(e,t)}if($i(),bl=n,fl.current=r,null!==yl)throw Error(a(261));return vl=null,_l=0,Sl}function sc(){for(;null!==yl;)lc(yl)}function oc(){for(;null!==yl&&!Ke();)lc(yl)}function lc(e){var t=hl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?cc(e):yl=t,gl.current=null}function cc(e){var t=e;do{var n=t.alternate;if(e=t.return,32768&t.flags){if(null!==(n=Bo(n,t)))return n.flags&=32767,void(yl=n);if(null===e)return Sl=6,void(yl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(n=mo(n,t,Al)))return void(yl=n);if(null!==(t=t.sibling))return void(yl=t);yl=t=e}while(null!==t);0===Sl&&(Sl=5)}function uc(e,t){var n=vt,r=ml.transition;try{ml.transition=null,vt=1,function(e,t,n){do{dc()}while(null!==Ol);if(6&bl)throw Error(a(327));var r=e.finishedWork,i=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var s=r.lanes|r.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var i=31-st(n),a=1<<i;t[i]=0,r[i]=-1,e[i]=-1,n&=~a}}(e,s),e===vl&&(yl=vl=null,_l=0),!(2064&r.subtreeFlags)&&!(2064&r.flags)||Ll||(Ll=!0,vc(tt,(function(){return dc(),null}))),s=!!(15990&r.flags),15990&r.subtreeFlags||s){s=ml.transition,ml.transition=null;var o=vt;vt=1;var l=bl;bl|=4,gl.current=null,function(e,t){if(dr(e=ur())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var i=r.anchorOffset,s=r.focusNode;r=r.focusOffset;try{n.nodeType,s.nodeType}catch(e){n=null;break e}var o=0,l=-1,c=-1,u=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==i&&3!==h.nodeType||(l=o+i),h!==s||0!==r&&3!==h.nodeType||(c=o+r),3===h.nodeType&&(o+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++u===i&&(l=o),p===s&&++d===r&&(c=o),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===l||-1===c?null:{start:l,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(Jr={focusedElem:e,selectionRange:n},qo=t;null!==qo;)if(e=(t=qo).child,1028&t.subtreeFlags&&null!==e)e.return=t,qo=e;else for(;null!==qo;){t=qo;try{var g=t.alternate;if(1024&t.flags)switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var m=g.memoizedProps,b=g.memoizedState,v=t.stateNode,y=v.getSnapshotBeforeUpdate(t.elementType===t.type?m:Bi(t.type,m),b);v.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var _=t.stateNode.containerInfo;if(1===_.nodeType)_.textContent="";else if(9===_.nodeType){var A=_.body;null!=A&&(A.textContent="")}break;default:throw Error(a(163))}}catch(e){pc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,qo=e;break}qo=t.return}g=Xo,Xo=!1}(e,r),function(e,t){for(qo=t;null!==qo;){var n=(t=qo).deletions;if(null!==n)for(var r=0;r<n.length;r++){var i=n[r];try{al(e,i,t);var a=i.alternate;null!==a&&(a.return=null),i.return=null}catch(e){pc(i,t,e)}}if(n=t.child,12854&t.subtreeFlags&&null!==n)n.return=t,qo=n;else for(;null!==qo;){t=qo;try{var s=t.flags;if(32&s&&he(t.stateNode,""),512&s){var o=t.alternate;if(null!==o){var l=o.ref;null!==l&&("function"==typeof l?l(null):l.current=null)}}if(8192&s)switch(t.tag){case 13:if(null!==t.memoizedState){var c=t.alternate;null!==c&&null!==c.memoizedState||(Ml=Qe())}break;case 22:var u=null!==t.memoizedState,d=t.alternate,h=null!==d&&null!==d.memoizedState;e:{i=u;for(var p=null,f=r=n=t;;){if(5===f.tag){if(null===p){p=f;var g=f.stateNode;if(i){var m=g.style;"function"==typeof m.setProperty?m.setProperty("display","none","important"):m.display="none"}else{var b=f.stateNode,v=f.memoizedProps.style,y=null!=v&&v.hasOwnProperty("display")?v.display:null;b.style.display=ge("display",y)}}}else if(6===f.tag)null===p&&(f.stateNode.nodeValue=i?"":f.memoizedProps);else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===r)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===r)break;for(;null===f.sibling;){if(null===f.return||f.return===r)break e;p===f&&(p=null),f=f.return}p===f&&(p=null),f.sibling.return=f.return,f=f.sibling}}if(u&&!h&&1&n.mode){qo=n;for(var _=n.child;null!==_;){for(n=qo=_;null!==qo;){var A=(r=qo).child;switch(r.tag){case 0:case 11:case 14:case 15:Ko(4,r,r.return);break;case 1:$o(r,r.return);var w=r.stateNode;if("function"==typeof w.componentWillUnmount){var S=r.return;try{w.props=r.memoizedProps,w.state=r.memoizedState,w.componentWillUnmount()}catch(e){pc(r,S,e)}}break;case 5:$o(r,r.return);break;case 22:if(null!==r.memoizedState){ul(n);continue}}null!==A?(A.return=r,qo=A):ul(n)}_=_.sibling}}}switch(4102&s){case 2:nl(t),t.flags&=-3;break;case 6:nl(t),t.flags&=-3,sl(t.alternate,t);break;case 4096:t.flags&=-4097;break;case 4100:t.flags&=-4097,sl(t.alternate,t);break;case 4:sl(t.alternate,t)}}catch(e){pc(t,t.return,e)}if(null!==(n=t.sibling)){n.return=t.return,qo=n;break}qo=t.return}}}(e,r),hr(Jr),Jr=null,e.current=r,ol(r,e,i),Ye(),bl=l,vt=o,ml.transition=s}else e.current=r;if(Ll&&(Ll=!1,Ol=e,Nl=i),0===(s=e.pendingLanes)&&(Il=null),function(e){if(at&&"function"==typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(it,e,void 0,!(128&~e.current.flags))}catch(e){}}(r.stateNode),$l(e,Qe()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)n(t[r]);if(Fl)throw Fl=!1,e=Dl,Dl=null,e;!!(1&Nl)&&0!==e.tag&&dc(),1&(s=e.pendingLanes)?e===jl?zl++:(zl=0,jl=e):zl=0,ji()}(e,t,n)}finally{ml.transition=r,vt=n}return null}function dc(){if(null!==Ol){var e=yt(Nl),t=ml.transition,n=vt;try{if(ml.transition=null,vt=16>e?16:e,null===Ol)var r=!1;else{if(e=Ol,Ol=null,Nl=0,6&bl)throw Error(a(331));var i=bl;for(bl|=4,qo=e.current;null!==qo;){var s=qo,o=s.child;if(16&qo.flags){var l=s.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(qo=u;null!==qo;){var d=qo;switch(d.tag){case 0:case 11:case 15:Ko(8,d,s)}var h=d.child;if(null!==h)h.return=d,qo=h;else for(;null!==qo;){var p=(d=qo).sibling,f=d.return;if(Zo(d),d===u){qo=null;break}if(null!==p){p.return=f,qo=p;break}qo=f}}}var g=s.alternate;if(null!==g){var m=g.child;if(null!==m){g.child=null;do{var b=m.sibling;m.sibling=null,m=b}while(null!==m)}}qo=s}}if(2064&s.subtreeFlags&&null!==o)o.return=s,qo=o;else e:for(;null!==qo;){if(2048&(s=qo).flags)switch(s.tag){case 0:case 11:case 15:Ko(9,s,s.return)}var v=s.sibling;if(null!==v){v.return=s.return,qo=v;break e}qo=s.return}}var y=e.current;for(qo=y;null!==qo;){var _=(o=qo).child;if(2064&o.subtreeFlags&&null!==_)_.return=o,qo=_;else e:for(o=y;null!==qo;){if(2048&(l=qo).flags)try{switch(l.tag){case 0:case 11:case 15:Yo(9,l)}}catch(e){pc(l,l.return,e)}if(l===o){qo=null;break e}var A=l.sibling;if(null!==A){A.return=l.return,qo=A;break e}qo=l.return}}if(bl=i,ji(),at&&"function"==typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(it,e)}catch(e){}r=!0}return r}finally{vt=n,ml.transition=t}}return!1}function hc(e,t,n){na(e,t=lo(0,t=to(n,t),1)),t=Hl(),null!==(e=ql(e,1))&&(mt(e,1,t),$l(e,t))}function pc(e,t,n){if(3===e.tag)hc(e,e,n);else for(;null!==t;){if(3===t.tag){hc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Il||!Il.has(r))){na(t,e=co(t,e=to(n,e),1)),e=Hl(),null!==(t=ql(t,1))&&(mt(t,1,e),$l(t,e));break}}t=t.return}}function fc(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=Hl(),e.pingedLanes|=e.suspendedLanes&n,vl===e&&(_l&n)===n&&(4===Sl||3===Sl&&(130023424&_l)===_l&&500>Qe()-Ml?tc(e,0):Cl|=n),$l(e,t)}function gc(e,t){0===t&&(1&e.mode?(t=ut,!(130023424&(ut<<=1))&&(ut=4194304)):t=1);var n=Hl();null!==(e=ql(e,t))&&(mt(e,t,n),$l(e,n))}function mc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),gc(e,n)}function bc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;null!==i&&(n=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),gc(e,n)}function vc(e,t){return Ge(e,t)}function yc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _c(e,t,n,r){return new yc(e,t,n,r)}function Ac(e){return!(!(e=e.prototype)||!e.isReactComponent)}function wc(e,t){var n=e.alternate;return null===n?((n=_c(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Sc(e,t,n,r,i,s){var o=2;if(r=e,"function"==typeof e)Ac(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case S:return xc(n.children,i,s,t);case x:o=8,i|=8;break;case E:return(e=_c(12,n,t,2|i)).elementType=E,e.lanes=s,e;case T:return(e=_c(13,n,t,i)).elementType=T,e.lanes=s,e;case M:return(e=_c(19,n,t,i)).elementType=M,e.lanes=s,e;case D:return Ec(n,i,s,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:o=10;break e;case C:o=9;break e;case P:o=11;break e;case R:o=14;break e;case F:o=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=_c(o,n,t,i)).elementType=e,t.type=r,t.lanes=s,t}function xc(e,t,n,r){return(e=_c(7,e,r,t)).lanes=n,e}function Ec(e,t,n,r){return(e=_c(22,e,r,t)).elementType=D,e.lanes=n,e.stateNode={},e}function kc(e,t,n){return(e=_c(6,e,null,t)).lanes=n,e}function Cc(e,t,n){return(t=_c(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pc(e,t,n,r,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Tc(e,t,n,r,i,a,s,o,l){return e=new Pc(e,t,n,o,l),1===t?(t=1,!0===a&&(t|=8)):t=0,a=_c(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null},Zi(a),e}function Mc(e){if(!e)return xi;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ti(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Ti(n))return Fi(e,n,t)}return t}function Rc(e,t,n,r){var i=t.current,a=Hl(),s=Vl(i);return n=Mc(n),null===t.context?t.context=n:t.pendingContext=n,(t=ta(a,s)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),na(i,t),null!==(e=Wl(i,s,a))&&ra(e,i,s),s}function Fc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Dc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ic(e,t){Dc(e,t),(e=e.alternate)&&Dc(e,t)}hl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||ki.current)vo=!0;else{if(!(e.lanes&n||128&t.flags))return vo=!1,function(e,t,n){switch(t.tag){case 3:Po(t),Na();break;case 5:Ja(t);break;case 1:Ti(t.type)&&Di(t);break;case 4:Ya(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,i=t.memoizedProps.value;Si(Hi,r._currentValue),r._currentValue=i;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Si(es,1&es.current),t.flags|=128,null):n&t.child.childLanes?Fo(e,t,n):(Si(es,1&es.current),null!==(e=Uo(e,t,n))?e.sibling:null);Si(es,1&es.current);break;case 19:if(r=!!(n&t.childLanes),128&e.flags){if(r)return jo(e,t,n);t.flags|=128}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),Si(es,es.current),r)break;return null;case 22:case 23:return t.lanes=0,So(e,t,n)}return Uo(e,t,n)}(e,t,n);vo=!!(131072&e.flags)}else vo=!1,Ta&&1048576&t.flags&&xa(t,ba,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps;var i=Pi(t,Ei.current);Ki(t,n),i=ms(null,t,r,e,i,n);var s=bs();return t.flags|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ti(r)?(s=!0,Di(t)):s=!1,t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,Zi(t),i.updater=ca,t.stateNode=i,i._reactInternals=t,pa(t,r,e,n),t=Co(null,t,r,!0,s,n)):(t.tag=0,Ta&&s&&Ea(t),yo(null,t,i,n),t=t.child),t;case 16:r=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,r=(i=r._init)(r._payload),t.type=r,i=t.tag=function(e){if("function"==typeof e)return Ac(e)?1:0;if(null!=e){if((e=e.$$typeof)===P)return 11;if(e===R)return 14}return 2}(r),e=Bi(r,e),i){case 0:t=Eo(null,t,r,e,n);break e;case 1:t=ko(null,t,r,e,n);break e;case 11:t=_o(null,t,r,e,n);break e;case 14:t=Ao(null,t,r,Bi(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,i=t.pendingProps,Eo(e,t,r,i=t.elementType===r?i:Bi(r,i),n);case 1:return r=t.type,i=t.pendingProps,ko(e,t,r,i=t.elementType===r?i:Bi(r,i),n);case 3:e:{if(Po(t),null===e)throw Error(a(387));r=t.pendingProps,i=(s=t.memoizedState).element,ea(e,t),aa(t,r,null,n);var o=t.memoizedState;if(r=o.element,s.isDehydrated){if(s={element:r,isDehydrated:!1,cache:o.cache,transitions:o.transitions},t.updateQueue.baseState=s,t.memoizedState=s,256&t.flags){t=To(e,t,r,n,i=Error(a(423)));break e}if(r!==i){t=To(e,t,r,n,i=Error(a(424)));break e}for(Pa=si(t.stateNode.containerInfo.firstChild),Ca=t,Ta=!0,Ma=null,n=Wa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(Na(),r===i){t=Uo(e,t,n);break e}yo(e,t,r,n)}t=t.child}return t;case 5:return Ja(t),null===e&&Ia(t),r=t.type,i=t.pendingProps,s=null!==e?e.memoizedProps:null,o=i.children,Zr(r,i)?o=null:null!==s&&Zr(r,s)&&(t.flags|=32),xo(e,t),yo(e,t,o,n),t.child;case 6:return null===e&&Ia(t),null;case 13:return Fo(e,t,n);case 4:return Ya(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Va(t,null,r,n):yo(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,_o(e,t,r,i=t.elementType===r?i:Bi(r,i),n);case 7:return yo(e,t,t.pendingProps,n),t.child;case 8:case 12:return yo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,s=t.memoizedProps,o=i.value,Si(Hi,r._currentValue),r._currentValue=o,null!==s)if(ar(s.value,o)){if(s.children===i.children&&!ki.current){t=Uo(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var l=s.dependencies;if(null!==l){o=s.child;for(var c=l.firstContext;null!==c;){if(c.context===r){if(1===s.tag){(c=ta(-1,n&-n)).tag=2;var u=s.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}s.lanes|=n,null!==(c=s.alternate)&&(c.lanes|=n),Xi(s.return,n,t),l.lanes|=n;break}c=c.next}}else if(10===s.tag)o=s.type===t.type?null:s.child;else if(18===s.tag){if(null===(o=s.return))throw Error(a(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Xi(o,n,t),o=s.sibling}else o=s.child;if(null!==o)o.return=s;else for(o=s;null!==o;){if(o===t){o=null;break}if(null!==(s=o.sibling)){s.return=o.return,o=s;break}o=o.return}s=o}yo(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=t.pendingProps.children,Ki(t,n),r=r(i=Yi(i)),t.flags|=1,yo(e,t,r,n),t.child;case 14:return i=Bi(r=t.type,t.pendingProps),Ao(e,t,r,i=Bi(r.type,i),n);case 15:return wo(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Bi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,Ti(r)?(e=!0,Di(t)):e=!1,Ki(t,n),da(t,r,i),pa(t,r,i,n),Co(null,t,r,!0,e,n);case 19:return jo(e,t,n);case 22:return So(e,t,n)}throw Error(a(156,t.tag))};"function"==typeof reportError&&reportError;function Lc(e){this._internalRoot=e}function Oc(e){this._internalRoot=e}function Nc(){}function zc(e,t,n,r,i){var a=n._reactRootContainer;if(a){var s=a;if("function"==typeof i){var o=i;i=function(){var e=Fc(s);o.call(e)}}Rc(t,s,e,i)}else s=function(e,t,n,r,i){if(i){if("function"==typeof r){var a=r;r=function(){var e=Fc(s);a.call(e)}}var s=function(e,t,n,r,i,a,s,o,l){return(e=Tc(n,r,!0,e,0,a,0,o,l)).context=Mc(null),n=e.current,(a=ta(r=Hl(),i=Vl(n))).callback=null!=t?t:null,na(n,a),e.current.lanes=i,mt(e,i,r),$l(e,r),e}(t,r,e,0,null,!1,0,"",Nc);return e._reactRootContainer=s,e[di]=s.current,Ur(8===e.nodeType?e.parentNode:e),Zl(),s}for(;i=e.lastChild;)e.removeChild(i);if("function"==typeof r){var o=r;r=function(){var e=Fc(l);o.call(e)}}var l=Tc(e,0,!1,null,0,!1,0,"",Nc);return e._reactRootContainer=l,e[di]=l.current,Ur(8===e.nodeType?e.parentNode:e),Zl((function(){Rc(t,l,n,r)})),l}(n,t,e,i,r);return Fc(s)}Oc.prototype.render=Lc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Rc(e,t,null,null)},Oc.prototype.unmount=Lc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;Zl((function(){Rc(null,e,null,null)})),t[di]=null}},Oc.prototype.unstable_scheduleHydration=function(e){if(e){var t=St();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&0!==t&&t<Ft[n].priority;n++);Ft.splice(n,0,e),0===n&&Ot(e)}},_t=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),$l(t,Qe()),!(6&bl)&&(Rl=Qe()+500,ji()))}break;case 13:var r=Hl();Zl((function(){return Wl(e,1,r)})),Ic(e,1)}},At=function(e){13===e.tag&&(Wl(e,134217728,Hl()),Ic(e,134217728))},wt=function(e){if(13===e.tag){var t=Hl(),n=Vl(e);Wl(e,n,t),Ic(e,n)}},St=function(){return vt},xt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},we=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=vi(r);if(!i)throw Error(a(90));G(r),J(r,i)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Pe=Jl,Te=Zl;var jc={findFiberByHostInstance:gi,bundleType:0,version:"18.0.0-fc46dba67-20220329",rendererPackageName:"react-dom"},Uc={bundleType:jc.bundleType,version:jc.version,rendererPackageName:jc.rendererPackageName,rendererConfig:jc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:_.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=qe(e))?null:e.stateNode},findFiberByHostInstance:jc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Bc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Bc.isDisabled&&Bc.supportsFiber)try{it=Bc.inject(Uc),at=Bc}catch(ue){}}t.render=function(e,t,n){if(!function(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}(t))throw Error(a(200));return zc(null,e,t,!1,n)}},961:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(551)},20:(e,t,n)=>{"use strict";var r=n(540),i=Symbol.for("react.element"),a=(Symbol.for("react.fragment"),Object.prototype.hasOwnProperty),s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var r,l={},c=null,u=null;for(r in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(u=t.ref),t)a.call(t,r)&&!o.hasOwnProperty(r)&&(l[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===l[r]&&(l[r]=t[r]);return{$$typeof:i,type:e,key:c,ref:u,props:l,_owner:s.current}}t.jsx=l,t.jsxs=l},287:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,m={};function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}function v(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=b.prototype;var _=y.prototype=new v;_.constructor=y,g(_,b.prototype),_.isPureReactComponent=!0;var A=Array.isArray,w=Object.prototype.hasOwnProperty,S={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,r){var i,a={},s=null,o=null;if(null!=t)for(i in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(s=""+t.key),t)w.call(t,i)&&!x.hasOwnProperty(i)&&(a[i]=t[i]);var l=arguments.length-2;if(1===l)a.children=r;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];a.children=c}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===a[i]&&(a[i]=l[i]);return{$$typeof:n,type:e,key:s,ref:o,props:a,_owner:S.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function P(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function T(e,t,i,a,s){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return s=s(l=e),e=""===a?"."+P(l,0):a,A(s)?(i="",null!=e&&(i=e.replace(C,"$&/")+"/"),T(s,t,i,"",(function(e){return e}))):null!=s&&(k(s)&&(s=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(s,i+(!s.key||l&&l.key===s.key?"":(""+s.key).replace(C,"$&/")+"/")+e)),t.push(s)),1;if(l=0,a=""===a?".":a+":",A(e))for(var c=0;c<e.length;c++){var u=a+P(o=e[c],c);l+=T(o,t,i,u,s)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(o=e.next()).done;)l+=T(o=o.value,t,i,u=a+P(o,c++),s);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function M(e,t,n){if(null==e)return e;var r=[],i=0;return T(e,r,"","",(function(e){return t.call(n,e,i++)})),r}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},I={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};t.Children={map:M,forEach:function(e,t,n){M(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return M(e,(function(){t++})),t},toArray:function(e){return M(e,(function(e){return e}))||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=b,t.Fragment=i,t.Profiler=s,t.PureComponent=y,t.StrictMode=a,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=I,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var i=g({},e.props),a=e.key,s=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,o=S.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)w.call(t,c)&&!x.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=r;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];i.children=l}return{$$typeof:n,type:e.type,key:a,ref:s,props:i,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=k,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.0.0-fc46dba67-20220329"},540:(e,t,n)=>{"use strict";e.exports=n(287)},848:(e,t,n)=>{"use strict";e.exports=n(20)},463:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,i=e[r];if(!(0<a(i,t)))break e;e[r]=t,e[n]=i,n=r}}function r(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length,s=i>>>1;r<s;){var o=2*(r+1)-1,l=e[o],c=o+1,u=e[c];if(0>a(l,n))c<i&&0>a(u,l)?(e[r]=u,e[c]=n,r=c):(e[r]=l,e[o]=n,r=o);else{if(!(c<i&&0>a(u,n)))break e;e[r]=u,e[c]=n,r=c}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var s=performance;t.unstable_now=function(){return s.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var c=[],u=[],d=1,h=null,p=3,f=!1,g=!1,m=!1,b="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,y="undefined"!=typeof setImmediate?setImmediate:null;function _(e){for(var t=r(u);null!==t;){if(null===t.callback)i(u);else{if(!(t.startTime<=e))break;i(u),t.sortIndex=t.expirationTime,n(c,t)}t=r(u)}}function A(e){if(m=!1,_(e),!g)if(null!==r(c))g=!0,D(w);else{var t=r(u);null!==t&&I(A,t.startTime-e)}}function w(e,n){g=!1,m&&(m=!1,v(k),k=-1),f=!0;var a=p;try{for(_(n),h=r(c);null!==h&&(!(h.expirationTime>n)||e&&!T());){var s=h.callback;if("function"==typeof s){h.callback=null,p=h.priorityLevel;var o=s(h.expirationTime<=n);n=t.unstable_now(),"function"==typeof o?h.callback=o:h===r(c)&&i(c),_(n)}else i(c);h=r(c)}if(null!==h)var l=!0;else{var d=r(u);null!==d&&I(A,d.startTime-n),l=!1}return l}finally{h=null,p=a,f=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,x=!1,E=null,k=-1,C=5,P=-1;function T(){return!(t.unstable_now()-P<C)}function M(){if(null!==E){var e=t.unstable_now();P=e;var n=!0;try{n=E(!0,e)}finally{n?S():(x=!1,E=null)}}else x=!1}if("function"==typeof y)S=function(){y(M)};else if("undefined"!=typeof MessageChannel){var R=new MessageChannel,F=R.port2;R.port1.onmessage=M,S=function(){F.postMessage(null)}}else S=function(){b(M,0)};function D(e){E=e,x||(x=!0,S())}function I(e,n){k=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||f||(g=!0,D(w))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,i,a){var s=t.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?s+a:s,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:d++,callback:i,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>s?(e.sortIndex=a,n(u,e),null===r(c)&&e===r(u)&&(m?(v(k),k=-1):m=!0,I(A,a-s))):(e.sortIndex=o,n(c,e),g||f||(g=!0,D(w))),e},t.unstable_shouldYield=T,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},982:(e,t,n)=>{"use strict";e.exports=n(463)},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},s=[],o=0;o<e.length;o++){var l=e[o],c=r.base?l[0]+r.base:l[0],u=a[c]||0,d="".concat(c," ").concat(u);a[c]=u+1;var h=n(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==h)t[h].references++,t[h].updater(p);else{var f=i(p,r);r.byIndex=o,t.splice(o,0,{identifier:d,updater:f,references:1})}s.push(d)}return s}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var a=r(e=e||[],i=i||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var o=n(a[s]);t[o].references--}for(var l=r(e,i),c=0;c<a.length;c++){var u=n(a[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=l}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},159:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},771:e=>{"use strict";e.exports=function(){}},640:()=>{},237:()=>{},492:()=>{},815:()=>{},671:()=>{},787:()=>{}},__webpack_module_cache__={},leafPrototypes,getProto;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},getProto=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);__webpack_require__.r(n);var r={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var i=2&t&&e;"object"==typeof i&&!~leafPrototypes.indexOf(i);i=getProto(i))Object.getOwnPropertyNames(i).forEach((t=>r[t]=()=>e[t]));return r.default=()=>e,__webpack_require__.d(n,r),n},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nc=void 0;var __webpack_exports__={};(()=>{"use strict";var e=__webpack_require__(540),t=__webpack_require__(961);const n=__webpack_require__(748);var r=__webpack_require__(848);function i(e){var t=!1;return{promise:new Promise((function(n,r){e.then((function(e){return!t&&n(e)})).catch((function(e){return!t&&r(e)}))})),cancel:function(){t=!0}}}var a=function(e,t,n){if(n||2===arguments.length)for(var r,i=0,a=t.length;i<a;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))},s=a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a(a([],["onCopy","onCut","onPaste"],!0),["onCompositionEnd","onCompositionStart","onCompositionUpdate"],!0),["onFocus","onBlur"],!0),["onInput","onInvalid","onReset","onSubmit"],!0),["onLoad","onError"],!0),["onKeyDown","onKeyPress","onKeyUp"],!0),["onAbort","onCanPlay","onCanPlayThrough","onDurationChange","onEmptied","onEncrypted","onEnded","onError","onLoadedData","onLoadedMetadata","onLoadStart","onPause","onPlay","onPlaying","onProgress","onRateChange","onSeeked","onSeeking","onStalled","onSuspend","onTimeUpdate","onVolumeChange","onWaiting"],!0),["onClick","onContextMenu","onDoubleClick","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp"],!0),["onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop"],!0),["onSelect"],!0),["onTouchCancel","onTouchEnd","onTouchMove","onTouchStart"],!0),["onPointerDown","onPointerMove","onPointerUp","onPointerCancel","onGotPointerCapture","onLostPointerCapture","onPointerEnter","onPointerLeave","onPointerOver","onPointerOut"],!0),["onScroll"],!0),["onWheel"],!0),["onAnimationStart","onAnimationEnd","onAnimationIteration"],!0),["onTransitionEnd"],!0),["onChange"],!0),["onToggle"],!0);function o(e,t){var n={};return s.forEach((function(r){var i=e[r];i&&(n[r]=t?function(e){return i(e,t(r))}:i)})),n}function l(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e)){var i=e.length;for(t=0;t<i;t++)e[t]&&(n=l(e[t]))&&(r&&(r+=" "),r+=n)}else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}const c=function(){for(var e,t,n=0,r="",i=arguments.length;n<i;n++)(e=arguments[n])&&(t=l(e))&&(r&&(r+=" "),r+=t);return r};function u(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=e.filter(Boolean);return n.length<=1?n[0]||null:function(e){n.forEach((function(t){"function"==typeof t?t(e):t&&(t.current=e)}))}}var d=!0,h="Invariant failed";function p(e,t){if(!e){if(d)throw new Error(h);var n="function"==typeof t?t():t,r=n?"".concat(h,": ").concat(n):h;throw new Error(r)}}var f=__webpack_require__(771);const g=(0,e.createContext)(null);function m({children:e,type:t}){return(0,r.jsx)("div",{className:`react-pdf__message react-pdf__message--${t}`,children:e})}const b={Document:null,DocumentFragment:null,Part:"group",Sect:"group",Div:"group",Aside:"note",NonStruct:"none",P:null,H:"heading",Title:null,FENote:"note",Sub:"group",Lbl:null,Span:null,Em:null,Strong:null,Link:"link",Annot:"note",Form:"form",Ruby:null,RB:null,RT:null,RP:null,Warichu:null,WT:null,WP:null,L:"list",LI:"listitem",LBody:null,Table:"table",TR:"row",TH:"columnheader",TD:"cell",THead:"columnheader",TBody:null,TFoot:null,Caption:null,Figure:"figure",Formula:null,Artifact:null},v=/^H(\d+)$/;function y(e){return"children"in e}function _(e){return!!y(e)&&1===e.children.length&&0 in e.children&&"id"in e.children[0]}function A(e){const t={};if(y(e)){if(void 0!==e.alt&&(t["aria-label"]=e.alt),void 0!==e.lang&&(t.lang=e.lang),_(e)){const[n]=e.children;if(n){const e=A(n);return Object.assign(Object.assign({},t),e)}}}else"id"in e&&(t["aria-owns"]=e.id);return t}function w(e){return e?Object.assign(Object.assign({},function(e){const t={};if(y(e)){const{role:n}=e,r=n.match(v);if(r)t.role="heading",t["aria-level"]=Number(r[1]);else if(function(e){return e in b}(n)){const e=b[n];e&&(t.role=e)}}return t}(e)),A(e)):null}function S({className:t,node:n}){const i=(0,e.useMemo)((()=>w(n)),[n]),a=(0,e.useMemo)((()=>y(n)?_(n)?null:n.children.map(((e,t)=>(0,r.jsx)(S,{node:e},t))):null),[n]);return(0,r.jsx)("span",Object.assign({className:t},i,{children:a}))}function x(){return(0,e.useContext)(g)}function E(e,t){switch(t.type){case"RESOLVE":return{value:t.value,error:void 0};case"REJECT":return{value:!1,error:t.error};case"RESET":return{value:void 0,error:void 0};default:return e}}function k(){return(0,e.useReducer)(E,{value:void 0,error:void 0})}const C="undefined"!=typeof document,P=C&&"file:"===window.location.protocol;function T(e){return function(e){return void 0!==e}(e)&&null!==e}function M(e){return function(e){return"string"==typeof e}(e)&&/^data:/.test(e)}function R(e){p(M(e),"Invalid data URI.");const[t="",n=""]=e.split(",");return-1!==t.split(";").indexOf("base64")?atob(n):unescape(n)}function F(){return C&&window.devicePixelRatio||1}function D(){f(!P,"Loading PDF as base64 strings/URLs may not work on protocols other than HTTP/HTTPS. On Chromium based browsers, you can use --allow-file-access-from-files flag for debugging purposes.")}function I(e){e&&e.cancel&&e.cancel()}function L(e,t){return Object.defineProperty(e,"width",{get(){return this.view[2]*t},configurable:!0}),Object.defineProperty(e,"height",{get(){return this.view[3]*t},configurable:!0}),Object.defineProperty(e,"originalWidth",{get(){return this.view[2]},configurable:!0}),Object.defineProperty(e,"originalHeight",{get(){return this.view[3]},configurable:!0}),e}function O(e){return"RenderingCancelledException"===e.name}function N(){const t=x();p(t,"Unable to find Page context.");const{onGetStructTreeError:n,onGetStructTreeSuccess:a}=t,[s,o]=k(),{value:l,error:c}=s,{customTextRenderer:u,page:d}=t;return(0,e.useEffect)((function(){o({type:"RESET"})}),[o,d]),(0,e.useEffect)((function(){if(u)return;if(!d)return;const e=i(d.getStructTree()),t=e;return e.promise.then((e=>{o({type:"RESOLVE",value:e})})).catch((e=>{o({type:"REJECT",error:e})})),()=>I(t)}),[u,d,o]),(0,e.useEffect)((()=>{void 0!==l&&(!1!==l?l&&a&&a(l):c&&(f(!1,c.toString()),n&&n(c)))}),[l]),l?(0,r.jsx)(S,{className:"react-pdf__Page__structTree structTree",node:l}):null}const z=n.AnnotationMode;function j(t){const n=x();p(n,"Unable to find Page context.");const i=Object.assign(Object.assign({},n),t),{_className:a,canvasBackground:s,devicePixelRatio:o=F(),onRenderError:l,onRenderSuccess:c,page:d,renderForms:h,renderTextLayer:g,rotate:m,scale:b}=i,{canvasRef:v}=t;p(d,"Attempted to render page canvas, but no page was specified.");const y=(0,e.useRef)(null);function _(e){O(e)||(f(!1,e.toString()),l&&l(e))}const A=(0,e.useMemo)((()=>d.getViewport({scale:b*o,rotation:m})),[o,d,m,b]),w=(0,e.useMemo)((()=>d.getViewport({scale:b,rotation:m})),[d,m,b]);(0,e.useEffect)((function(){if(!d)return;d.cleanup();const{current:e}=y;if(!e)return;e.width=A.width,e.height=A.height,e.style.width=`${Math.floor(w.width)}px`,e.style.height=`${Math.floor(w.height)}px`,e.style.visibility="hidden";const t={annotationMode:h?z.ENABLE_FORMS:z.ENABLE,canvasContext:e.getContext("2d",{alpha:!1}),viewport:A};s&&(t.background=s);const n=d.render(t),r=n;return n.promise.then((()=>{e.style.visibility="",d&&c&&c(L(d,b))})).catch(_),()=>I(r)}),[s,y,o,d,h,A,w]);const S=(0,e.useCallback)((()=>{const{current:e}=y;e&&(e.width=0,e.height=0)}),[y]);return(0,e.useEffect)((()=>S),[S]),(0,r.jsx)("canvas",{className:`${a}__canvas`,dir:"ltr",ref:u(v,y),style:{display:"block",userSelect:"none"},children:g?(0,r.jsx)(N,{}):null})}function U(){const t=x();p(t,"Unable to find Page context.");const{_className:a,onRenderSuccess:s,onRenderError:o,page:l,rotate:c,scale:u}=t;p(l,"Attempted to render page SVG, but no page was specified.");const[d,h]=k(),{value:g,error:m}=d,b=(0,e.useMemo)((()=>l.getViewport({scale:u,rotation:c})),[l,c,u]);(0,e.useEffect)((function(){h({type:"RESET"})}),[l,h,b]),(0,e.useEffect)((function(){if(!l)return;const e=i(l.getOperatorList());return e.promise.then((e=>{new n.SVGGraphics(l.commonObjs,l.objs).getSVG(e,b).then((e=>{if(!(e instanceof SVGElement))throw new Error("getSVG returned unexpected result.");h({type:"RESOLVE",value:e})})).catch((e=>{h({type:"REJECT",error:e})}))})).catch((e=>{h({type:"REJECT",error:e})})),()=>I(e)}),[l,h,b]),(0,e.useEffect)((()=>{void 0!==g&&(!1!==g?l&&s&&s(L(l,u)):m&&(O(m)||(f(!1,m.toString()),o&&o(m))))}),[g]);const{width:v,height:y}=b;return(0,r.jsx)("div",{className:`${a}__svg`,ref:e=>function(e){if(!e||!g)return;e.firstElementChild||e.appendChild(g);const{width:t,height:n}=b;g.setAttribute("width",`${t}`),g.setAttribute("height",`${n}`)}(e),style:{display:"block",backgroundColor:"white",overflow:"hidden",width:v,height:y,userSelect:"none"}})}function B(){const t=x();p(t,"Unable to find Page context.");const{customTextRenderer:a,onGetTextError:s,onGetTextSuccess:o,onRenderTextLayerError:l,onRenderTextLayerSuccess:u,page:d,pageIndex:h,pageNumber:g,rotate:m,scale:b}=t;p(d,"Attempted to load page text content, but no page was specified.");const[v,y]=k(),{value:_,error:A}=v,w=(0,e.useRef)(null),S=(0,e.useRef)(void 0);f(1===parseInt(window.getComputedStyle(document.body).getPropertyValue("--react-pdf-text-layer"),10),"TextLayer styles not found. Read more: https://github.com/wojtekmaj/react-pdf#support-for-text-layer"),(0,e.useEffect)((function(){y({type:"RESET"})}),[d,y]),(0,e.useEffect)((function(){if(!d)return;const e=i(d.getTextContent()),t=e;return e.promise.then((e=>{y({type:"RESOLVE",value:e})})).catch((e=>{y({type:"REJECT",error:e})})),()=>I(t)}),[d,y]),(0,e.useEffect)((()=>{void 0!==_&&(!1!==_?_&&o&&o(_):A&&(f(!1,A.toString()),s&&s(A)))}),[_]);const E=(0,e.useCallback)((()=>{u&&u()}),[u]),C=(0,e.useCallback)((e=>{f(!1,e.toString()),l&&l(e)}),[l]),P=(0,e.useMemo)((()=>d.getViewport({scale:b,rotation:m})),[d,m,b]);return(0,e.useLayoutEffect)((function(){if(!d||!_)return;const{current:e}=w;if(!e)return;e.innerHTML="";const t=d.streamTextContent({includeMarkedContent:!0}),r={container:e,textContentSource:t,viewport:P},i=n.renderTextLayer(r),s=i;return i.promise.then((()=>{const t=document.createElement("div");t.className="endOfContent",e.append(t),S.current=t;const n=e.querySelectorAll('[role="presentation"]');if(a){let e=0;_.items.forEach(((t,r)=>{if(!function(e){return"str"in e}(t))return;const i=n[e];if(!i)return;const s=a(Object.assign({pageIndex:h,pageNumber:g,itemIndex:r},t));i.innerHTML=s,e+=t.str&&t.hasEOL?2:1}))}E()})).catch(C),()=>I(s)}),[a,C,E,d,h,g,_,P]),(0,r.jsx)("div",{className:c("react-pdf__Page__textContent","textLayer"),onMouseUp:function(){const e=S.current;e&&e.classList.remove("active")},onMouseDown:function(){const e=S.current;e&&e.classList.add("active")},ref:w})}const H=(0,e.createContext)(null);function V(){return(0,e.useContext)(H)}function W(){const t=V(),a=x();p(a,"Unable to find Page context.");const s=Object.assign(Object.assign({},t),a),{imageResourcesPath:o,linkService:l,onGetAnnotationsError:u,onGetAnnotationsSuccess:d,onRenderAnnotationLayerError:h,onRenderAnnotationLayerSuccess:g,page:m,pdf:b,renderForms:v,rotate:y,scale:_=1}=s;p(b,"Attempted to load page annotations, but no document was specified. Wrap <Page /> in a <Document /> or pass explicit `pdf` prop."),p(m,"Attempted to load page annotations, but no page was specified."),p(l,"Attempted to load page annotations, but no linkService was specified.");const[A,w]=k(),{value:S,error:E}=A,C=(0,e.useRef)(null);f(1===parseInt(window.getComputedStyle(document.body).getPropertyValue("--react-pdf-annotation-layer"),10),"AnnotationLayer styles not found. Read more: https://github.com/wojtekmaj/react-pdf#support-for-annotations"),(0,e.useEffect)((function(){w({type:"RESET"})}),[w,m]),(0,e.useEffect)((function(){if(!m)return;const e=i(m.getAnnotations()),t=e;return e.promise.then((e=>{w({type:"RESOLVE",value:e})})).catch((e=>{w({type:"REJECT",error:e})})),()=>{I(t)}}),[w,m,v]),(0,e.useEffect)((()=>{void 0!==S&&(!1!==S?S&&d&&d(S):E&&(f(!1,E.toString()),u&&u(E)))}),[S]);const P=(0,e.useMemo)((()=>m.getViewport({scale:_,rotation:y})),[m,y,_]);return(0,e.useEffect)((function(){if(!(b&&m&&l&&S))return;const{current:e}=C;if(!e)return;const t=P.clone({dontFlip:!0}),r={accessibilityManager:null,annotationCanvasMap:null,div:e,l10n:null,page:m,viewport:t},i={annotations:S,annotationStorage:b.annotationStorage,div:e,downloadManager:null,imageResourcesPath:o,linkService:l,page:m,renderForms:v,viewport:t};e.innerHTML="";try{new n.AnnotationLayer(r).render(i),g&&g()}catch(e){!function(e){f(!1,`${e}`),h&&h(e)}(e)}return()=>{}}),[S,o,l,m,v,P]),(0,r.jsx)("div",{className:c("react-pdf__Page__annotations","annotationLayer"),ref:C})}const q=1;function $(t){const n=V(),a=Object.assign(Object.assign({},n),t),{_className:s="react-pdf__Page",_enableRegisterUnregisterPage:l=!0,canvasBackground:d,canvasRef:h,children:b,className:v,customRenderer:y,customTextRenderer:_,devicePixelRatio:A,error:w="Failed to load the page.",height:S,inputRef:x,loading:E="Loading page…",noData:C="No page specified.",onGetAnnotationsError:P,onGetAnnotationsSuccess:M,onGetStructTreeError:R,onGetStructTreeSuccess:F,onGetTextError:D,onGetTextSuccess:O,onLoadError:N,onLoadSuccess:z,onRenderAnnotationLayerError:H,onRenderAnnotationLayerSuccess:$,onRenderError:G,onRenderSuccess:X,onRenderTextLayerError:K,onRenderTextLayerSuccess:Y,pageIndex:Q,pageNumber:J,pdf:Z,registerPage:ee,renderAnnotationLayer:te=!0,renderForms:ne=!1,renderMode:re="canvas",renderTextLayer:ie=!0,rotate:ae,scale:se=q,unregisterPage:oe,width:le}=a,ce=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n}(a,["_className","_enableRegisterUnregisterPage","canvasBackground","canvasRef","children","className","customRenderer","customTextRenderer","devicePixelRatio","error","height","inputRef","loading","noData","onGetAnnotationsError","onGetAnnotationsSuccess","onGetStructTreeError","onGetStructTreeSuccess","onGetTextError","onGetTextSuccess","onLoadError","onLoadSuccess","onRenderAnnotationLayerError","onRenderAnnotationLayerSuccess","onRenderError","onRenderSuccess","onRenderTextLayerError","onRenderTextLayerSuccess","pageIndex","pageNumber","pdf","registerPage","renderAnnotationLayer","renderForms","renderMode","renderTextLayer","rotate","scale","unregisterPage","width"]),[ue,de]=k(),{value:he,error:pe}=ue,fe=(0,e.useRef)(null);p(Z,"Attempted to load a page, but no document was specified. Wrap <Page /> in a <Document /> or pass explicit `pdf` prop.");const ge=T(J)?J-1:null!=Q?Q:null,me=null!=J?J:T(Q)?Q+1:null,be=null!=ae?ae:he?he.rotate:null,ve=(0,e.useMemo)((()=>{if(!he)return null;let e=1;const t=null!=se?se:q;if(le||S){const t=he.getViewport({scale:1,rotation:be});le?e=le/t.width:S&&(e=S/t.height)}return t*e}),[S,he,be,se,le]);(0,e.useEffect)((function(){return()=>{T(ge)&&l&&oe&&oe(ge)}}),[l,Z,ge,oe]),(0,e.useEffect)((function(){de({type:"RESET"})}),[de,Z,ge]),(0,e.useEffect)((function(){if(!Z||!me)return;const e=i(Z.getPage(me)),t=e;return e.promise.then((e=>{de({type:"RESOLVE",value:e})})).catch((e=>{de({type:"REJECT",error:e})})),()=>I(t)}),[de,Z,ge,me,ee]),(0,e.useEffect)((()=>{void 0!==he&&(!1!==he?function(){if(z){if(!he||!ve)return;z(L(he,ve))}if(l&&ee){if(!T(ge)||!fe.current)return;ee(ge,fe.current)}}():pe&&(f(!1,pe.toString()),N&&N(pe)))}),[he,ve]);const ye=(0,e.useMemo)((()=>he&&T(ge)&&me&&T(be)&&T(ve)?{_className:s,canvasBackground:d,customTextRenderer:_,devicePixelRatio:A,onGetAnnotationsError:P,onGetAnnotationsSuccess:M,onGetStructTreeError:R,onGetStructTreeSuccess:F,onGetTextError:D,onGetTextSuccess:O,onRenderAnnotationLayerError:H,onRenderAnnotationLayerSuccess:$,onRenderError:G,onRenderSuccess:X,onRenderTextLayerError:K,onRenderTextLayerSuccess:Y,page:he,pageIndex:ge,pageNumber:me,renderForms:ne,renderTextLayer:ie,rotate:be,scale:ve}:null),[s,d,_,A,P,M,R,F,D,O,H,$,G,X,K,Y,he,ge,me,ne,ie,be,ve]),_e=(0,e.useMemo)((()=>o(ce,(()=>he?ve?L(he,ve):void 0:he))),[ce,he,ve]),Ae=`${ge}@${ve}/${be}`,we=`${ge}/${be}`;return(0,r.jsx)("div",Object.assign({className:c(s,v),"data-page-number":me,ref:u(x,fe),style:{"--scale-factor":`${ve}`,backgroundColor:d||"white",position:"relative",minWidth:"min-content",minHeight:"min-content"}},_e,{children:me?null===Z||null==he?(0,r.jsx)(m,{type:"loading",children:"function"==typeof E?E():E}):!1===Z||!1===he?(0,r.jsx)(m,{type:"error",children:"function"==typeof w?w():w}):(0,r.jsxs)(g.Provider,{value:ye,children:[function(){switch(re){case"custom":return p(y,'renderMode was set to "custom", but no customRenderer was passed.'),(0,r.jsx)(y,{},`${Ae}_custom`);case"none":return null;case"svg":return(0,r.jsx)(U,{},`${we}_svg`);default:return(0,r.jsx)(j,{canvasRef:h},`${Ae}_canvas`)}}(),ie?(0,r.jsx)(B,{},`${Ae}_text`):null,te?(0,r.jsx)(W,{},`${Ae}_annotations`):null,b]}):(0,r.jsx)(m,{type:"no-data",children:"function"==typeof C?C():C})}))}var G=Object.prototype.hasOwnProperty;function X(e,t,n){for(n of e.keys())if(K(n,t))return n}function K(e,t){var n,r,i;if(e===t)return!0;if(e&&t&&(n=e.constructor)===t.constructor){if(n===Date)return e.getTime()===t.getTime();if(n===RegExp)return e.toString()===t.toString();if(n===Array){if((r=e.length)===t.length)for(;r--&&K(e[r],t[r]););return-1===r}if(n===Set){if(e.size!==t.size)return!1;for(r of e){if((i=r)&&"object"==typeof i&&!(i=X(t,i)))return!1;if(!t.has(i))return!1}return!0}if(n===Map){if(e.size!==t.size)return!1;for(r of e){if((i=r[0])&&"object"==typeof i&&!(i=X(t,i)))return!1;if(!K(r[1],t.get(i)))return!1}return!0}if(n===ArrayBuffer)e=new Uint8Array(e),t=new Uint8Array(t);else if(n===DataView){if((r=e.byteLength)===t.byteLength)for(;r--&&e.getInt8(r)===t.getInt8(r););return-1===r}if(ArrayBuffer.isView(e)){if((r=e.byteLength)===t.byteLength)for(;r--&&e[r]===t[r];);return-1===r}if(!n||"object"==typeof e){for(n in r=0,e){if(G.call(e,n)&&++r&&!G.call(t,n))return!1;if(!(n in t)||!K(e[n],t[n]))return!1}return Object.keys(t).length===r}}return e!=e&&t!=t}class Y{constructor(){this.externalLinkEnabled=!0,this.externalLinkRel=void 0,this.externalLinkTarget=void 0,this.isInPresentationMode=!1,this.pdfDocument=void 0,this.pdfViewer=void 0}setDocument(e){this.pdfDocument=e}setViewer(e){this.pdfViewer=e}setExternalLinkRel(e){this.externalLinkRel=e}setExternalLinkTarget(e){this.externalLinkTarget=e}setHistory(){}get pagesCount(){return this.pdfDocument?this.pdfDocument.numPages:0}get page(){return p(this.pdfViewer,"PDF viewer is not initialized."),this.pdfViewer.currentPageNumber||0}set page(e){p(this.pdfViewer,"PDF viewer is not initialized."),this.pdfViewer.currentPageNumber=e}get rotation(){return 0}set rotation(e){}goToDestination(e){return new Promise((t=>{p(this.pdfDocument,"PDF document not loaded."),p(e,"Destination is not specified."),"string"==typeof e?this.pdfDocument.getDestination(e).then(t):Array.isArray(e)?t(e):e.then(t)})).then((e=>{p(Array.isArray(e),`"${e}" is not a valid destination array.`);const t=e[0];new Promise((e=>{p(this.pdfDocument,"PDF document not loaded."),t instanceof Object?this.pdfDocument.getPageIndex(t).then((t=>{e(t)})).catch((()=>{p(!1,`"${t}" is not a valid page reference.`)})):"number"==typeof t?e(t):p(!1,`"${t}" is not a valid destination reference.`)})).then((t=>{const n=t+1;p(this.pdfViewer,"PDF viewer is not initialized."),p(n>=1&&n<=this.pagesCount,`"${n}" is not a valid page number.`),this.pdfViewer.scrollPageIntoView({dest:e,pageIndex:t,pageNumber:n})}))}))}navigateTo(e){this.goToDestination(e)}goToPage(e){const t=e-1;p(this.pdfViewer,"PDF viewer is not initialized."),p(e>=1&&e<=this.pagesCount,`"${e}" is not a valid page number.`),this.pdfViewer.scrollPageIntoView({pageIndex:t,pageNumber:e})}addLinkAttributes(e,t,n){e.href=t,e.rel=this.externalLinkRel||"noopener noreferrer nofollow",e.target=n?"_blank":this.externalLinkTarget||""}getDestinationHash(){return"#"}getAnchorUrl(){return"#"}setHash(){}executeNamedAction(){}cachePageRef(){}isPageVisible(){return!0}isPageCached(){return!0}executeSetOCGState(){}}const Q=1,J=2;var Z=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};const{PDFDataRangeTransport:ee}=n,te=(e,t)=>{switch(t){case Q:e(prompt("Enter the password to open this PDF file."));break;case J:e(prompt("Invalid password. Please try again."))}};function ne(e){return"object"==typeof e&&null!==e&&("data"in e||"range"in e||"url"in e)}const re=(0,e.forwardRef)((function(t,a){var{children:s,className:l,error:u="Failed to load PDF file.",externalLinkRel:d,externalLinkTarget:h,file:g,inputRef:b,imageResourcesPath:v,loading:y="Loading PDF…",noData:_="No PDF file specified.",onItemClick:A,onLoadError:w,onLoadProgress:S,onLoadSuccess:x,onPassword:E=te,onSourceError:P,onSourceSuccess:T,options:F,renderMode:L,rotate:O}=t,N=Z(t,["children","className","error","externalLinkRel","externalLinkTarget","file","inputRef","imageResourcesPath","loading","noData","onItemClick","onLoadError","onLoadProgress","onLoadSuccess","onPassword","onSourceError","onSourceSuccess","options","renderMode","rotate"]);const[z,j]=k(),{value:U,error:B}=z,[V,W]=k(),{value:q,error:$}=V,G=(0,e.useRef)(new Y),X=(0,e.useRef)([]),Q=(0,e.useRef)(void 0),J=(0,e.useRef)(void 0);g&&g!==Q.current&&ne(g)&&(f(!K(g,Q.current),'File prop passed to <Document /> changed, but it\'s equal to previous one. This might result in unnecessary reloads. Consider memoizing the value passed to "file" prop.'),Q.current=g),F&&F!==J.current&&(f(!K(F,J.current),'Options prop passed to <Document /> changed, but it\'s equal to previous one. This might result in unnecessary reloads. Consider memoizing the value passed to "options" prop.'),J.current=F);const re=(0,e.useRef)({scrollPageIntoView:e=>{const{dest:t,pageNumber:n,pageIndex:r=n-1}=e;if(A)return void A({dest:t,pageIndex:r,pageNumber:n});const i=X.current[r];i?i.scrollIntoView():f(!1,`An internal link leading to page ${n} was clicked, but neither <Document> was provided with onItemClick nor it was able to find the page within itself. Either provide onItemClick to <Document> and handle navigating by yourself or ensure that all pages are rendered within <Document>.`)}});(0,e.useImperativeHandle)(a,(()=>({linkService:G,pages:X,viewer:re})),[]),(0,e.useEffect)((function(){j({type:"RESET"})}),[g,j]);const ie=(0,e.useCallback)((()=>{return e=this,t=void 0,r=function*(){if(!g)return null;if("string"==typeof g)return M(g)?{data:R(g)}:(D(),{url:g});if(g instanceof ee)return{range:g};if(g instanceof ArrayBuffer)return{data:g};if(C&&(e=g,p(C,"isBlob can only be used in a browser environment"),e instanceof Blob)){const e=yield function(e){return new Promise(((t,n)=>{const r=new FileReader;r.onload=()=>{if(!r.result)return n(new Error("Error while reading a file."));t(r.result)},r.onerror=e=>{if(!e.target)return n(new Error("Error while reading a file."));const{error:t}=e.target;if(!t)return n(new Error("Error while reading a file."));switch(t.code){case t.NOT_FOUND_ERR:return n(new Error("Error while reading a file: File not found."));case t.SECURITY_ERR:return n(new Error("Error while reading a file: Security error."));case t.ABORT_ERR:return n(new Error("Error while reading a file: Aborted."));default:return n(new Error("Error while reading a file."))}},r.readAsArrayBuffer(e)}))}(g);return{data:e}}var e;if(p("object"==typeof g,"Invalid parameter in file, need either Uint8Array, string or a parameter object"),p(ne(g),"Invalid parameter object: need either .data, .range or .url"),"url"in g&&"string"==typeof g.url){if(M(g.url)){const{url:e}=g,t=Z(g,["url"]),n=R(e);return Object.assign({data:n},t)}D()}return g},new((n=void 0)||(n=Promise))((function(i,a){function s(e){try{l(r.next(e))}catch(e){a(e)}}function o(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}));var e,t,n,r}),[g]);function ae(e,t){X.current[e]=t}function se(e){delete X.current[e]}(0,e.useEffect)((()=>{const e=i(ie());return e.promise.then((e=>{j({type:"RESOLVE",value:e})})).catch((e=>{j({type:"REJECT",error:e})})),()=>{I(e)}}),[ie,j]),(0,e.useEffect)((()=>{void 0!==U&&(!1!==U?T&&T():B&&(f(!1,B.toString()),P&&P(B)))}),[U]),(0,e.useEffect)((function(){W({type:"RESET"})}),[W,U]),(0,e.useEffect)((function(){if(!U)return;const e=Object.assign(Object.assign({},F),{isEvalSupported:!1}),t=Object.assign(Object.assign({},U),e),r=n.getDocument(t);S&&(r.onProgress=S),E&&(r.onPassword=E);const i=r;return i.promise.then((e=>{W({type:"RESOLVE",value:e})})).catch((e=>{i.destroyed||W({type:"REJECT",error:e})})),()=>{i.destroy()}}),[F,W,U]),(0,e.useEffect)((()=>{void 0!==q&&(!1!==q?q&&(x&&x(q),X.current=new Array(q.numPages),G.current.setDocument(q)):$&&(f(!1,$.toString()),w&&w($)))}),[q]),(0,e.useEffect)((function(){G.current.setViewer(re.current),G.current.setExternalLinkRel(d),G.current.setExternalLinkTarget(h)}),[d,h]);const oe=(0,e.useMemo)((()=>({imageResourcesPath:v,linkService:G.current,onItemClick:A,pdf:q,registerPage:ae,renderMode:L,rotate:O,unregisterPage:se})),[v,A,q,L,O]),le=(0,e.useMemo)((()=>o(N,(()=>q))),[N,q]);return(0,r.jsx)("div",Object.assign({className:c("react-pdf__Document",l),ref:b,style:{"--scale-factor":"1"}},le,{children:g?null==q?(0,r.jsx)(m,{type:"loading",children:"function"==typeof y?y():y}):!1===q?(0,r.jsx)(m,{type:"error",children:"function"==typeof u?u():u}):(0,r.jsx)(H.Provider,{value:oe,children:s}):(0,r.jsx)(m,{type:"no-data",children:"function"==typeof _?_():_})}))})),ie=re;var ae=__webpack_require__(146),se=__webpack_require__.n(ae);const oe=()=>e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-arrow-down"},e.createElement("line",{x1:"12",y1:"5",x2:"12",y2:"19"}),e.createElement("polyline",{points:"19 12 12 19 5 12"})),le=()=>e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:""},e.createElement("polyline",{points:"5 12 19 12"}),e.createElement("polyline",{points:"12 5 12 19"})),ce=()=>e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:""},e.createElement("line",{x1:"5",y1:"12",x2:"19",y2:"12"})),ue=()=>e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-arrow-up"},e.createElement("line",{x1:"12",y1:"19",x2:"12",y2:"5"}),e.createElement("polyline",{points:"5 12 12 5 19 12"}));var de=__webpack_require__(72),he=__webpack_require__.n(de),pe=__webpack_require__(825),fe=__webpack_require__.n(pe),ge=__webpack_require__(659),me=__webpack_require__.n(ge),be=__webpack_require__(56),ve=__webpack_require__.n(be),ye=__webpack_require__(159),_e=__webpack_require__.n(ye),Ae=__webpack_require__(113),we=__webpack_require__.n(Ae),Se=__webpack_require__(834),xe={};xe.styleTagTransform=we(),xe.setAttributes=ve(),xe.insert=me().bind(null,"head"),xe.domAPI=fe(),xe.insertStyleElement=_e(),he()(Se.A,xe),Se.A&&Se.A.locals&&Se.A.locals;const Ee=document.querySelector("#react-container"),ke="3.11.174",Ce={cMapUrl:`http://cdn.jsdelivr.net/npm/pdfjs-dist@${ke}/cmaps/`,cMapPacked:!0};n.GlobalWorkerOptions.workerSrc=`http://cdn.jsdelivr.net/npm/pdfjs-dist@${ke}/build/pdf.worker.min.js`;class Pe extends e.Component{constructor(){super(...arguments),this.state={numPages:null,currentPage:1,ready:!0,pageLoaded:!1,scale:1,error:void 0},this.MAX_SCALE=4,this.__zoomEvent=!1,this.onDocumentLoadSuccess=({numPages:e})=>{this.setState({numPages:e})},this.onError=e=>{console.error(e),this.setState({error:e})},this.zoomOut=e=>{e.preventDefault(),this.__zoomEvent||se()(this.zOut)},this.zoomIn=e=>{e.preventDefault(),this.__zoomEvent||se()(this.zIn)},this.zIn=()=>{this.state.scale<=this.MAX_SCALE-.25&&(this.__zoomEvent=!0,this.setState((e=>({scale:e.scale+.25}))))},this.zOut=()=>{this.state.scale>=.75&&(this.__zoomEvent=!0,this.setState((e=>({scale:e.scale-.25}))))},this.up=()=>{const{currentPage:e}=this.state;if(e>1){const t=e-1;this.setState({currentPage:t})}(0,ae.cancel)(this.up)},this.down=()=>{const{currentPage:e,numPages:t}=this.state;if(e<t){const t=e+1;this.setState({currentPage:t})}(0,ae.cancel)(this.down)},this.goUp=e=>{e.preventDefault(),se()(this.up)},this.goDown=e=>{e.preventDefault(),se()(this.down)},this.renderPage=t=>e.createElement($,{loading:" ",key:`page_${t}`,pageNumber:t,onLoadError:this.onError,onRenderError:this.onError,onGetTextError:this.onError,onGetAnnotationsError:this.onError,width:90*document.body.clientWidth/100,onRenderSuccess:()=>{this.__zoomEvent=!1},scale:this.state.scale}),this.renderPages=()=>Array.from(Array(this.state.numPages).keys()).map((t=>e.createElement("div",{key:`page-${t.toString()}`,style:{marginBottom:10}},this.renderPage(t+1))))}static getDerivedStateFromError(e){return{error:e}}render(){const{numPages:t,currentPage:n,error:r}=this.state,{customStyle:i}=this.props;return r?e.createElement("p",null,r.message?r.message:"Sorry an error occurred!"):e.createElement("div",{className:"Reader"},e.createElement("div",{className:"Reader__container",style:null==i?void 0:i.readerContainer},e.createElement("div",{className:"Reader__container__document",style:null==i?void 0:i.readerContainerDocument},e.createElement(ie,{loading:" ",onLoadSuccess:this.onDocumentLoadSuccess,onLoadError:this.onError,onSourceError:this.onError,options:Ce,file:Te},Re?this.renderPages():this.renderPage(n))),t&&!Re&&e.createElement("div",{className:"Reader__container__numbers",style:null==i?void 0:i.readerContainerNumbers},e.createElement("div",{className:"Reader__container__numbers__content",style:null==i?void 0:i.readerContainerNumbersContent},n," / ",t)),e.createElement("div",{className:"Reader__container__zoom_container",style:null==i?void 0:i.readerContainerZoomContainer},e.createElement("div",{className:"Reader__container__zoom_container__button",style:null==i?void 0:i.readerContainerZoomContainerButton,onClick:this.zoomIn},e.createElement(le,null)),e.createElement("div",{className:"Reader__container__zoom_container__button",style:null==i?void 0:i.readerContainerZoomContainerButton,onClick:this.zoomOut},e.createElement(ce,null))),t>1&&!Re&&e.createElement("div",{className:"Reader__container__navigate",style:null==i?void 0:i.readerContainerNavigate},e.createElement("div",{className:"Reader__container__navigate__arrow",style:Object.assign(Object.assign({},1===n?{color:"rgba(255,255,255,0.4)"}:{}),null==i?void 0:i.readerContainerNavigateArrow),onClick:this.goUp},e.createElement(ue,null)),e.createElement("div",{className:"Reader__container__navigate__arrow",style:Object.assign(Object.assign({},n===t?{color:"rgba(255,255,255,0.4)"}:{}),null==i?void 0:i.readerContainerNavigateArrow),onClick:this.goDown},e.createElement(oe,null)))))}}const Te=document.querySelector("#file").getAttribute("data-file"),Me=window.CUSTOM_STYLE,Re=window.WITH_SCROLL;(0,t.render)(e.createElement(Pe,{file:Te,customStyle:Me,withScroll:Re}),Ee)})()})();';
export function getBundle() {
  return Base64.decode(bundle)
}
export function getBundleMd5() {
  return '6cc25130d65c32aefbf2ed73f851ea88'
}
